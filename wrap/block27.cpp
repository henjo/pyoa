
/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaDerivedLayerParam
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaDerivedLayerParam_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaDerivedLayerParam_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaDerivedLayerParamObject* self = (PyoaIntraPointerAppDef_oaDerivedLayerParamObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaDerivedLayerParam)
    {
        PyParamoaIntraPointerAppDef_oaDerivedLayerParam p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaDerivedLayerParam_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaDerivedLayerParam, Choices are:\n"
        "    (oaIntraPointerAppDef_oaDerivedLayerParam)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaDerivedLayerParam_tp_dealloc(PyoaIntraPointerAppDef_oaDerivedLayerParamObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaDerivedLayerParam_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaDerivedLayerParam value;
    int convert_status=PyoaIntraPointerAppDef_oaDerivedLayerParam_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[62];
    sprintf(buffer,"<oaIntraPointerAppDef_oaDerivedLayerParam::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaDerivedLayerParam_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaDerivedLayerParam v1;
    PyParamoaIntraPointerAppDef_oaDerivedLayerParam v2;
    int convert_status1=PyoaIntraPointerAppDef_oaDerivedLayerParam_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaDerivedLayerParam_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaDerivedLayerParam_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaDerivedLayerParam* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaDerivedLayerParam_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaDerivedLayerParam**) ((PyoaIntraPointerAppDef_oaDerivedLayerParamObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaDerivedLayerParam Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaDerivedLayerParam_FromoaIntraPointerAppDef_oaDerivedLayerParam(oaIntraPointerAppDef_oaDerivedLayerParam** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaDerivedLayerParam* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaDerivedLayerParam_Type.tp_alloc(&PyoaIntraPointerAppDef_oaDerivedLayerParam_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaDerivedLayerParamObject* self = (PyoaIntraPointerAppDef_oaDerivedLayerParamObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaDerivedLayerParam_FromoaIntraPointerAppDef_oaDerivedLayerParam(oaIntraPointerAppDef_oaDerivedLayerParam* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaDerivedLayerParam_Type.tp_alloc(&PyoaIntraPointerAppDef_oaDerivedLayerParam_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaDerivedLayerParamObject* self = (PyoaIntraPointerAppDef_oaDerivedLayerParamObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaDerivedLayerParam_get_doc[] = 
"Class: oaIntraPointerAppDef_oaDerivedLayerParam, Function: get\n"
"  Paramegers: (oaDerivedLayerParam)\n"
"    Calls: oaDerivedLayerParam* get(const oaDerivedLayerParam* object)\n"
"    Signature: get|ptr-oaDerivedLayerParam|cptr-oaDerivedLayerParam,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaDerivedLayerParam_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaDerivedLayerParam data;
    int convert_status=PyoaIntraPointerAppDef_oaDerivedLayerParam_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaDerivedLayerParamObject* self=(PyoaIntraPointerAppDef_oaDerivedLayerParamObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaDerivedLayerParam p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaDerivedLayerParam_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDerivedLayerParamp result= (data.DataCall()->get(p1.Data()));
        return PyoaDerivedLayerParam_FromoaDerivedLayerParam(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaDerivedLayerParam_set_doc[] = 
"Class: oaIntraPointerAppDef_oaDerivedLayerParam, Function: set\n"
"  Paramegers: (oaDerivedLayerParam,oaDerivedLayerParam)\n"
"    Calls: void set(oaDerivedLayerParam* object,const oaDerivedLayerParam* otherObject)\n"
"    Signature: set|void-void|ptr-oaDerivedLayerParam,cptr-oaDerivedLayerParam,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaDerivedLayerParam_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaDerivedLayerParam data;
    int convert_status=PyoaIntraPointerAppDef_oaDerivedLayerParam_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaDerivedLayerParamObject* self=(PyoaIntraPointerAppDef_oaDerivedLayerParamObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaDerivedLayerParam p1;
    PyParamoaDerivedLayerParam p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaDerivedLayerParam_Convert,&p1,
          &PyoaDerivedLayerParam_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaDerivedLayerParam_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaDerivedLayerParam, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaDerivedLayerParam_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaDerivedLayerParam data;
    int convert_status=PyoaIntraPointerAppDef_oaDerivedLayerParam_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaDerivedLayerParam_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaDerivedLayerParam, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaDerivedLayerParam_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaDerivedLayerParam data;
  int convert_status=PyoaIntraPointerAppDef_oaDerivedLayerParam_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaDerivedLayerParam p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaDerivedLayerParam_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaDerivedLayerParam_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaDerivedLayerParam_get,METH_VARARGS,oaIntraPointerAppDef_oaDerivedLayerParam_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaDerivedLayerParam_set,METH_VARARGS,oaIntraPointerAppDef_oaDerivedLayerParam_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaDerivedLayerParam_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaDerivedLayerParam_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaDerivedLayerParam_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaDerivedLayerParam_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaDerivedLayerParam_doc[] = 
"Class: oaIntraPointerAppDef_oaDerivedLayerParam\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaDerivedLayerParam)\n"
"    Calls: (const oaIntraPointerAppDef_oaDerivedLayerParam&)\n"
"    Signature: oaIntraPointerAppDef_oaDerivedLayerParam||cref-oaIntraPointerAppDef_oaDerivedLayerParam,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaDerivedLayerParam_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaDerivedLayerParam",
    sizeof(PyoaIntraPointerAppDef_oaDerivedLayerParamObject),
    0,
    (destructor)oaIntraPointerAppDef_oaDerivedLayerParam_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaDerivedLayerParam_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaDerivedLayerParam_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaDerivedLayerParam_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaDerivedLayerParam_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaDerivedLayerParam_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaDerivedLayerParam_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaDerivedLayerParam, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaDerivedLayerParam* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaDerivedLayerParam|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaDerivedLayerParam* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaDerivedLayerParam|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaDerivedLayerParam_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaDerivedLayerParamp result= (oaIntraPointerAppDef_oaDerivedLayerParam::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaDerivedLayerParam_FromoaIntraPointerAppDef_oaDerivedLayerParam(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaDerivedLayerParamp result= (oaIntraPointerAppDef_oaDerivedLayerParam::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaDerivedLayerParam_FromoaIntraPointerAppDef_oaDerivedLayerParam(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaDerivedLayerParam, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaDerivedLayerParam_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaDerivedLayerParam, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaDerivedLayerParam* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaDerivedLayerParam|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaDerivedLayerParam* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaDerivedLayerParam|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaDerivedLayerParam* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaDerivedLayerParam|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaDerivedLayerParam* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaDerivedLayerParam|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaDerivedLayerParam_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaDerivedLayerParamp result= (oaIntraPointerAppDef_oaDerivedLayerParam::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaDerivedLayerParam_FromoaIntraPointerAppDef_oaDerivedLayerParam(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaDerivedLayerParamp result= (oaIntraPointerAppDef_oaDerivedLayerParam::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaDerivedLayerParam_FromoaIntraPointerAppDef_oaDerivedLayerParam(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaDerivedLayerParamp result= (oaIntraPointerAppDef_oaDerivedLayerParam::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaDerivedLayerParam_FromoaIntraPointerAppDef_oaDerivedLayerParam(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaDerivedLayerParamp result= (oaIntraPointerAppDef_oaDerivedLayerParam::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaDerivedLayerParam_FromoaIntraPointerAppDef_oaDerivedLayerParam(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaDerivedLayerParam, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaDerivedLayerParam_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaDerivedLayerParam_static_find,METH_VARARGS,oaIntraPointerAppDef_oaDerivedLayerParam_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaDerivedLayerParam_static_get,METH_VARARGS,oaIntraPointerAppDef_oaDerivedLayerParam_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaDerivedLayerParam_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaDerivedLayerParam_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaDerivedLayerParam\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaDerivedLayerParam",
           (PyObject*)(&PyoaIntraPointerAppDef_oaDerivedLayerParam_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaDerivedLayerParam\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaDerivedLayerParam_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaDerivedLayerParam_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaDesign
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaDesign_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaDesign_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaDesignObject* self = (PyoaIntraPointerAppDef_oaDesignObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaDesign)
    {
        PyParamoaIntraPointerAppDef_oaDesign p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaDesign_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaDesign, Choices are:\n"
        "    (oaIntraPointerAppDef_oaDesign)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaDesign_tp_dealloc(PyoaIntraPointerAppDef_oaDesignObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaDesign_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaDesign value;
    int convert_status=PyoaIntraPointerAppDef_oaDesign_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[51];
    sprintf(buffer,"<oaIntraPointerAppDef_oaDesign::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaDesign_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaDesign v1;
    PyParamoaIntraPointerAppDef_oaDesign v2;
    int convert_status1=PyoaIntraPointerAppDef_oaDesign_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaDesign_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaDesign_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaDesign* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaDesign_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaDesign**) ((PyoaIntraPointerAppDef_oaDesignObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaDesign Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaDesign_FromoaIntraPointerAppDef_oaDesign(oaIntraPointerAppDef_oaDesign** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaDesign* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaDesign_Type.tp_alloc(&PyoaIntraPointerAppDef_oaDesign_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaDesignObject* self = (PyoaIntraPointerAppDef_oaDesignObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaDesign_FromoaIntraPointerAppDef_oaDesign(oaIntraPointerAppDef_oaDesign* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaDesign_Type.tp_alloc(&PyoaIntraPointerAppDef_oaDesign_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaDesignObject* self = (PyoaIntraPointerAppDef_oaDesignObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaDesign_get_doc[] = 
"Class: oaIntraPointerAppDef_oaDesign, Function: get\n"
"  Paramegers: (oaDesign)\n"
"    Calls: oaDesign* get(const oaDesign* object)\n"
"    Signature: get|ptr-oaDesign|cptr-oaDesign,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaDesign_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaDesign data;
    int convert_status=PyoaIntraPointerAppDef_oaDesign_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaDesignObject* self=(PyoaIntraPointerAppDef_oaDesignObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaDesign p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaDesign_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDesignp result= (data.DataCall()->get(p1.Data()));
        return PyoaDesign_FromoaDesign(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaDesign_set_doc[] = 
"Class: oaIntraPointerAppDef_oaDesign, Function: set\n"
"  Paramegers: (oaDesign,oaDesign)\n"
"    Calls: void set(oaDesign* object,const oaDesign* otherObject)\n"
"    Signature: set|void-void|ptr-oaDesign,cptr-oaDesign,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaDesign_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaDesign data;
    int convert_status=PyoaIntraPointerAppDef_oaDesign_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaDesignObject* self=(PyoaIntraPointerAppDef_oaDesignObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaDesign p1;
    PyParamoaDesign p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaDesign_Convert,&p1,
          &PyoaDesign_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaDesign_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaDesign, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaDesign_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaDesign data;
    int convert_status=PyoaIntraPointerAppDef_oaDesign_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaDesign_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaDesign, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaDesign_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaDesign data;
  int convert_status=PyoaIntraPointerAppDef_oaDesign_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaDesign p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaDesign_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaDesign_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaDesign_get,METH_VARARGS,oaIntraPointerAppDef_oaDesign_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaDesign_set,METH_VARARGS,oaIntraPointerAppDef_oaDesign_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaDesign_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaDesign_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaDesign_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaDesign_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaDesign_doc[] = 
"Class: oaIntraPointerAppDef_oaDesign\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaDesign)\n"
"    Calls: (const oaIntraPointerAppDef_oaDesign&)\n"
"    Signature: oaIntraPointerAppDef_oaDesign||cref-oaIntraPointerAppDef_oaDesign,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaDesign_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaDesign",
    sizeof(PyoaIntraPointerAppDef_oaDesignObject),
    0,
    (destructor)oaIntraPointerAppDef_oaDesign_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaDesign_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaDesign_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaDesign_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaDesign_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaDesign_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaDesign_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaDesign, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaDesign* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaDesign|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaDesign* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaDesign|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaDesign_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaDesignp result= (oaIntraPointerAppDef_oaDesign::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaDesign_FromoaIntraPointerAppDef_oaDesign(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaDesignp result= (oaIntraPointerAppDef_oaDesign::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaDesign_FromoaIntraPointerAppDef_oaDesign(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaDesign, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaDesign_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaDesign, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaDesign* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaDesign|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaDesign* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaDesign|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaDesign* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaDesign|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaDesign* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaDesign|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaDesign_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaDesignp result= (oaIntraPointerAppDef_oaDesign::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaDesign_FromoaIntraPointerAppDef_oaDesign(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaDesignp result= (oaIntraPointerAppDef_oaDesign::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaDesign_FromoaIntraPointerAppDef_oaDesign(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaDesignp result= (oaIntraPointerAppDef_oaDesign::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaDesign_FromoaIntraPointerAppDef_oaDesign(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaDesignp result= (oaIntraPointerAppDef_oaDesign::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaDesign_FromoaIntraPointerAppDef_oaDesign(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaDesign, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaDesign_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaDesign_static_find,METH_VARARGS,oaIntraPointerAppDef_oaDesign_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaDesign_static_get,METH_VARARGS,oaIntraPointerAppDef_oaDesign_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaDesign_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaDesign_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaDesign\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaDesign",
           (PyObject*)(&PyoaIntraPointerAppDef_oaDesign_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaDesign\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaDesign_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaDesign_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaDesignInst
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaDesignInst_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaDesignInst_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaDesignInstObject* self = (PyoaIntraPointerAppDef_oaDesignInstObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaDesignInst)
    {
        PyParamoaIntraPointerAppDef_oaDesignInst p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaDesignInst_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaDesignInst, Choices are:\n"
        "    (oaIntraPointerAppDef_oaDesignInst)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaDesignInst_tp_dealloc(PyoaIntraPointerAppDef_oaDesignInstObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaDesignInst_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaDesignInst value;
    int convert_status=PyoaIntraPointerAppDef_oaDesignInst_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[55];
    sprintf(buffer,"<oaIntraPointerAppDef_oaDesignInst::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaDesignInst_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaDesignInst v1;
    PyParamoaIntraPointerAppDef_oaDesignInst v2;
    int convert_status1=PyoaIntraPointerAppDef_oaDesignInst_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaDesignInst_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaDesignInst_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaDesignInst* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaDesignInst_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaDesignInst**) ((PyoaIntraPointerAppDef_oaDesignInstObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaDesignInst Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaDesignInst_FromoaIntraPointerAppDef_oaDesignInst(oaIntraPointerAppDef_oaDesignInst** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaDesignInst* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaDesignInst_Type.tp_alloc(&PyoaIntraPointerAppDef_oaDesignInst_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaDesignInstObject* self = (PyoaIntraPointerAppDef_oaDesignInstObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaDesignInst_FromoaIntraPointerAppDef_oaDesignInst(oaIntraPointerAppDef_oaDesignInst* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaDesignInst_Type.tp_alloc(&PyoaIntraPointerAppDef_oaDesignInst_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaDesignInstObject* self = (PyoaIntraPointerAppDef_oaDesignInstObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaDesignInst_get_doc[] = 
"Class: oaIntraPointerAppDef_oaDesignInst, Function: get\n"
"  Paramegers: (oaDesignInst)\n"
"    Calls: oaDesignInst* get(const oaDesignInst* object)\n"
"    Signature: get|ptr-oaDesignInst|cptr-oaDesignInst,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaDesignInst_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaDesignInst data;
    int convert_status=PyoaIntraPointerAppDef_oaDesignInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaDesignInstObject* self=(PyoaIntraPointerAppDef_oaDesignInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaDesignInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaDesignInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDesignInstp result= (data.DataCall()->get(p1.Data()));
        return PyoaDesignInst_FromoaDesignInst(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaDesignInst_set_doc[] = 
"Class: oaIntraPointerAppDef_oaDesignInst, Function: set\n"
"  Paramegers: (oaDesignInst,oaDesignInst)\n"
"    Calls: void set(oaDesignInst* object,const oaDesignInst* otherObject)\n"
"    Signature: set|void-void|ptr-oaDesignInst,cptr-oaDesignInst,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaDesignInst_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaDesignInst data;
    int convert_status=PyoaIntraPointerAppDef_oaDesignInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaDesignInstObject* self=(PyoaIntraPointerAppDef_oaDesignInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaDesignInst p1;
    PyParamoaDesignInst p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaDesignInst_Convert,&p1,
          &PyoaDesignInst_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaDesignInst_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaDesignInst, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaDesignInst_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaDesignInst data;
    int convert_status=PyoaIntraPointerAppDef_oaDesignInst_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaDesignInst_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaDesignInst, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaDesignInst_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaDesignInst data;
  int convert_status=PyoaIntraPointerAppDef_oaDesignInst_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaDesignInst p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaDesignInst_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaDesignInst_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaDesignInst_get,METH_VARARGS,oaIntraPointerAppDef_oaDesignInst_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaDesignInst_set,METH_VARARGS,oaIntraPointerAppDef_oaDesignInst_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaDesignInst_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaDesignInst_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaDesignInst_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaDesignInst_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaDesignInst_doc[] = 
"Class: oaIntraPointerAppDef_oaDesignInst\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaDesignInst)\n"
"    Calls: (const oaIntraPointerAppDef_oaDesignInst&)\n"
"    Signature: oaIntraPointerAppDef_oaDesignInst||cref-oaIntraPointerAppDef_oaDesignInst,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaDesignInst_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaDesignInst",
    sizeof(PyoaIntraPointerAppDef_oaDesignInstObject),
    0,
    (destructor)oaIntraPointerAppDef_oaDesignInst_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaDesignInst_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaDesignInst_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaDesignInst_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaDesignInst_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaDesignInst_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaDesignInst_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaDesignInst, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaDesignInst* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaDesignInst|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaDesignInst* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaDesignInst|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaDesignInst_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaDesignInstp result= (oaIntraPointerAppDef_oaDesignInst::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaDesignInst_FromoaIntraPointerAppDef_oaDesignInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaDesignInstp result= (oaIntraPointerAppDef_oaDesignInst::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaDesignInst_FromoaIntraPointerAppDef_oaDesignInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaDesignInst, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaDesignInst_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaDesignInst, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaDesignInst* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaDesignInst|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaDesignInst* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaDesignInst|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaDesignInst* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaDesignInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaDesignInst* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaDesignInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaDesignInst_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaDesignInstp result= (oaIntraPointerAppDef_oaDesignInst::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaDesignInst_FromoaIntraPointerAppDef_oaDesignInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaDesignInstp result= (oaIntraPointerAppDef_oaDesignInst::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaDesignInst_FromoaIntraPointerAppDef_oaDesignInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaDesignInstp result= (oaIntraPointerAppDef_oaDesignInst::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaDesignInst_FromoaIntraPointerAppDef_oaDesignInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaDesignInstp result= (oaIntraPointerAppDef_oaDesignInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaDesignInst_FromoaIntraPointerAppDef_oaDesignInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaDesignInst, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaDesignInst_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaDesignInst_static_find,METH_VARARGS,oaIntraPointerAppDef_oaDesignInst_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaDesignInst_static_get,METH_VARARGS,oaIntraPointerAppDef_oaDesignInst_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaDesignInst_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaDesignInst_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaDesignInst\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaDesignInst",
           (PyObject*)(&PyoaIntraPointerAppDef_oaDesignInst_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaDesignInst\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaDesignInst_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaDesignInst_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaDevice
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaDevice_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaDevice_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaDeviceObject* self = (PyoaIntraPointerAppDef_oaDeviceObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaDevice)
    {
        PyParamoaIntraPointerAppDef_oaDevice p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaDevice_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaDevice, Choices are:\n"
        "    (oaIntraPointerAppDef_oaDevice)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaDevice_tp_dealloc(PyoaIntraPointerAppDef_oaDeviceObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaDevice_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaDevice value;
    int convert_status=PyoaIntraPointerAppDef_oaDevice_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[51];
    sprintf(buffer,"<oaIntraPointerAppDef_oaDevice::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaDevice_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaDevice v1;
    PyParamoaIntraPointerAppDef_oaDevice v2;
    int convert_status1=PyoaIntraPointerAppDef_oaDevice_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaDevice_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaDevice_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaDevice* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaDevice_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaDevice**) ((PyoaIntraPointerAppDef_oaDeviceObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaDevice Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaDevice_FromoaIntraPointerAppDef_oaDevice(oaIntraPointerAppDef_oaDevice** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaDevice* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaDevice_Type.tp_alloc(&PyoaIntraPointerAppDef_oaDevice_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaDeviceObject* self = (PyoaIntraPointerAppDef_oaDeviceObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaDevice_FromoaIntraPointerAppDef_oaDevice(oaIntraPointerAppDef_oaDevice* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaDevice_Type.tp_alloc(&PyoaIntraPointerAppDef_oaDevice_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaDeviceObject* self = (PyoaIntraPointerAppDef_oaDeviceObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaDevice_get_doc[] = 
"Class: oaIntraPointerAppDef_oaDevice, Function: get\n"
"  Paramegers: (oaDevice)\n"
"    Calls: oaDevice* get(const oaDevice* object)\n"
"    Signature: get|ptr-oaDevice|cptr-oaDevice,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaDevice_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaDevice data;
    int convert_status=PyoaIntraPointerAppDef_oaDevice_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaDeviceObject* self=(PyoaIntraPointerAppDef_oaDeviceObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaDevice p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaDevice_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDevicep result= (data.DataCall()->get(p1.Data()));
        return PyoaDevice_FromoaDevice(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaDevice_set_doc[] = 
"Class: oaIntraPointerAppDef_oaDevice, Function: set\n"
"  Paramegers: (oaDevice,oaDevice)\n"
"    Calls: void set(oaDevice* object,const oaDevice* otherObject)\n"
"    Signature: set|void-void|ptr-oaDevice,cptr-oaDevice,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaDevice_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaDevice data;
    int convert_status=PyoaIntraPointerAppDef_oaDevice_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaDeviceObject* self=(PyoaIntraPointerAppDef_oaDeviceObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaDevice p1;
    PyParamoaDevice p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaDevice_Convert,&p1,
          &PyoaDevice_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaDevice_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaDevice, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaDevice_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaDevice data;
    int convert_status=PyoaIntraPointerAppDef_oaDevice_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaDevice_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaDevice, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaDevice_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaDevice data;
  int convert_status=PyoaIntraPointerAppDef_oaDevice_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaDevice p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaDevice_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaDevice_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaDevice_get,METH_VARARGS,oaIntraPointerAppDef_oaDevice_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaDevice_set,METH_VARARGS,oaIntraPointerAppDef_oaDevice_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaDevice_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaDevice_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaDevice_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaDevice_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaDevice_doc[] = 
"Class: oaIntraPointerAppDef_oaDevice\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaDevice)\n"
"    Calls: (const oaIntraPointerAppDef_oaDevice&)\n"
"    Signature: oaIntraPointerAppDef_oaDevice||cref-oaIntraPointerAppDef_oaDevice,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaDevice_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaDevice",
    sizeof(PyoaIntraPointerAppDef_oaDeviceObject),
    0,
    (destructor)oaIntraPointerAppDef_oaDevice_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaDevice_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaDevice_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaDevice_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaDevice_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaDevice_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaDevice_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaDevice, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaDevice* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaDevice|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaDevice* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaDevice|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaDevice_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaDevicep result= (oaIntraPointerAppDef_oaDevice::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaDevice_FromoaIntraPointerAppDef_oaDevice(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaDevicep result= (oaIntraPointerAppDef_oaDevice::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaDevice_FromoaIntraPointerAppDef_oaDevice(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaDevice, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaDevice_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaDevice, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaDevice* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaDevice|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaDevice* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaDevice|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaDevice* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaDevice|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaDevice* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaDevice|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaDevice_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaDevicep result= (oaIntraPointerAppDef_oaDevice::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaDevice_FromoaIntraPointerAppDef_oaDevice(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaDevicep result= (oaIntraPointerAppDef_oaDevice::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaDevice_FromoaIntraPointerAppDef_oaDevice(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaDevicep result= (oaIntraPointerAppDef_oaDevice::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaDevice_FromoaIntraPointerAppDef_oaDevice(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaDevicep result= (oaIntraPointerAppDef_oaDevice::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaDevice_FromoaIntraPointerAppDef_oaDevice(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaDevice, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaDevice_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaDevice_static_find,METH_VARARGS,oaIntraPointerAppDef_oaDevice_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaDevice_static_get,METH_VARARGS,oaIntraPointerAppDef_oaDevice_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaDevice_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaDevice_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaDevice\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaDevice",
           (PyObject*)(&PyoaIntraPointerAppDef_oaDevice_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaDevice\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaDevice_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaDevice_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaElmore
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaElmore_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaElmore_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaElmoreObject* self = (PyoaIntraPointerAppDef_oaElmoreObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaElmore)
    {
        PyParamoaIntraPointerAppDef_oaElmore p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaElmore_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaElmore, Choices are:\n"
        "    (oaIntraPointerAppDef_oaElmore)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaElmore_tp_dealloc(PyoaIntraPointerAppDef_oaElmoreObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaElmore_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaElmore value;
    int convert_status=PyoaIntraPointerAppDef_oaElmore_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[51];
    sprintf(buffer,"<oaIntraPointerAppDef_oaElmore::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaElmore_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaElmore v1;
    PyParamoaIntraPointerAppDef_oaElmore v2;
    int convert_status1=PyoaIntraPointerAppDef_oaElmore_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaElmore_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaElmore_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaElmore* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaElmore_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaElmore**) ((PyoaIntraPointerAppDef_oaElmoreObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaElmore Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaElmore_FromoaIntraPointerAppDef_oaElmore(oaIntraPointerAppDef_oaElmore** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaElmore* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaElmore_Type.tp_alloc(&PyoaIntraPointerAppDef_oaElmore_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaElmoreObject* self = (PyoaIntraPointerAppDef_oaElmoreObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaElmore_FromoaIntraPointerAppDef_oaElmore(oaIntraPointerAppDef_oaElmore* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaElmore_Type.tp_alloc(&PyoaIntraPointerAppDef_oaElmore_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaElmoreObject* self = (PyoaIntraPointerAppDef_oaElmoreObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaElmore_get_doc[] = 
"Class: oaIntraPointerAppDef_oaElmore, Function: get\n"
"  Paramegers: (oaElmore)\n"
"    Calls: oaElmore* get(const oaElmore* object)\n"
"    Signature: get|ptr-oaElmore|cptr-oaElmore,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaElmore_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaElmore data;
    int convert_status=PyoaIntraPointerAppDef_oaElmore_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaElmoreObject* self=(PyoaIntraPointerAppDef_oaElmoreObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaElmore p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaElmore_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaElmorep result= (data.DataCall()->get(p1.Data()));
        return PyoaElmore_FromoaElmore(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaElmore_set_doc[] = 
"Class: oaIntraPointerAppDef_oaElmore, Function: set\n"
"  Paramegers: (oaElmore,oaElmore)\n"
"    Calls: void set(oaElmore* object,const oaElmore* otherObject)\n"
"    Signature: set|void-void|ptr-oaElmore,cptr-oaElmore,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaElmore_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaElmore data;
    int convert_status=PyoaIntraPointerAppDef_oaElmore_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaElmoreObject* self=(PyoaIntraPointerAppDef_oaElmoreObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaElmore p1;
    PyParamoaElmore p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaElmore_Convert,&p1,
          &PyoaElmore_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaElmore_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaElmore, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaElmore_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaElmore data;
    int convert_status=PyoaIntraPointerAppDef_oaElmore_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaElmore_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaElmore, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaElmore_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaElmore data;
  int convert_status=PyoaIntraPointerAppDef_oaElmore_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaElmore p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaElmore_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaElmore_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaElmore_get,METH_VARARGS,oaIntraPointerAppDef_oaElmore_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaElmore_set,METH_VARARGS,oaIntraPointerAppDef_oaElmore_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaElmore_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaElmore_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaElmore_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaElmore_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaElmore_doc[] = 
"Class: oaIntraPointerAppDef_oaElmore\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaElmore)\n"
"    Calls: (const oaIntraPointerAppDef_oaElmore&)\n"
"    Signature: oaIntraPointerAppDef_oaElmore||cref-oaIntraPointerAppDef_oaElmore,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaElmore_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaElmore",
    sizeof(PyoaIntraPointerAppDef_oaElmoreObject),
    0,
    (destructor)oaIntraPointerAppDef_oaElmore_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaElmore_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaElmore_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaElmore_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaElmore_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaElmore_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaElmore_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaElmore, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaElmore* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaElmore|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaElmore* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaElmore|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaElmore_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaElmorep result= (oaIntraPointerAppDef_oaElmore::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaElmore_FromoaIntraPointerAppDef_oaElmore(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaElmorep result= (oaIntraPointerAppDef_oaElmore::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaElmore_FromoaIntraPointerAppDef_oaElmore(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaElmore, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaElmore_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaElmore, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaElmore* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaElmore|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaElmore* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaElmore|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaElmore* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaElmore|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaElmore* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaElmore|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaElmore_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaElmorep result= (oaIntraPointerAppDef_oaElmore::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaElmore_FromoaIntraPointerAppDef_oaElmore(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaElmorep result= (oaIntraPointerAppDef_oaElmore::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaElmore_FromoaIntraPointerAppDef_oaElmore(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaElmorep result= (oaIntraPointerAppDef_oaElmore::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaElmore_FromoaIntraPointerAppDef_oaElmore(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaElmorep result= (oaIntraPointerAppDef_oaElmore::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaElmore_FromoaIntraPointerAppDef_oaElmore(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaElmore, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaElmore_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaElmore_static_find,METH_VARARGS,oaIntraPointerAppDef_oaElmore_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaElmore_static_get,METH_VARARGS,oaIntraPointerAppDef_oaElmore_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaElmore_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaElmore_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaElmore\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaElmore",
           (PyObject*)(&PyoaIntraPointerAppDef_oaElmore_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaElmore\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaElmore_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaElmore_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaFigGroup
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaFigGroup_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaFigGroup_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaFigGroupObject* self = (PyoaIntraPointerAppDef_oaFigGroupObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaFigGroup)
    {
        PyParamoaIntraPointerAppDef_oaFigGroup p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaFigGroup_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaFigGroup, Choices are:\n"
        "    (oaIntraPointerAppDef_oaFigGroup)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaFigGroup_tp_dealloc(PyoaIntraPointerAppDef_oaFigGroupObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaFigGroup_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaFigGroup value;
    int convert_status=PyoaIntraPointerAppDef_oaFigGroup_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[53];
    sprintf(buffer,"<oaIntraPointerAppDef_oaFigGroup::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaFigGroup_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaFigGroup v1;
    PyParamoaIntraPointerAppDef_oaFigGroup v2;
    int convert_status1=PyoaIntraPointerAppDef_oaFigGroup_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaFigGroup_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaFigGroup_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaFigGroup* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaFigGroup_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaFigGroup**) ((PyoaIntraPointerAppDef_oaFigGroupObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaFigGroup Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaFigGroup_FromoaIntraPointerAppDef_oaFigGroup(oaIntraPointerAppDef_oaFigGroup** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaFigGroup* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaFigGroup_Type.tp_alloc(&PyoaIntraPointerAppDef_oaFigGroup_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaFigGroupObject* self = (PyoaIntraPointerAppDef_oaFigGroupObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaFigGroup_FromoaIntraPointerAppDef_oaFigGroup(oaIntraPointerAppDef_oaFigGroup* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaFigGroup_Type.tp_alloc(&PyoaIntraPointerAppDef_oaFigGroup_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaFigGroupObject* self = (PyoaIntraPointerAppDef_oaFigGroupObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaFigGroup_get_doc[] = 
"Class: oaIntraPointerAppDef_oaFigGroup, Function: get\n"
"  Paramegers: (oaFigGroup)\n"
"    Calls: oaFigGroup* get(const oaFigGroup* object)\n"
"    Signature: get|ptr-oaFigGroup|cptr-oaFigGroup,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaFigGroup_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaFigGroup data;
    int convert_status=PyoaIntraPointerAppDef_oaFigGroup_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaFigGroupObject* self=(PyoaIntraPointerAppDef_oaFigGroupObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaFigGroup p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaFigGroup_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaFigGroupp result= (data.DataCall()->get(p1.Data()));
        return PyoaFigGroup_FromoaFigGroup(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaFigGroup_set_doc[] = 
"Class: oaIntraPointerAppDef_oaFigGroup, Function: set\n"
"  Paramegers: (oaFigGroup,oaFigGroup)\n"
"    Calls: void set(oaFigGroup* object,const oaFigGroup* otherObject)\n"
"    Signature: set|void-void|ptr-oaFigGroup,cptr-oaFigGroup,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaFigGroup_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaFigGroup data;
    int convert_status=PyoaIntraPointerAppDef_oaFigGroup_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaFigGroupObject* self=(PyoaIntraPointerAppDef_oaFigGroupObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaFigGroup p1;
    PyParamoaFigGroup p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaFigGroup_Convert,&p1,
          &PyoaFigGroup_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaFigGroup_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaFigGroup, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaFigGroup_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaFigGroup data;
    int convert_status=PyoaIntraPointerAppDef_oaFigGroup_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaFigGroup_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaFigGroup, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaFigGroup_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaFigGroup data;
  int convert_status=PyoaIntraPointerAppDef_oaFigGroup_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaFigGroup p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaFigGroup_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaFigGroup_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaFigGroup_get,METH_VARARGS,oaIntraPointerAppDef_oaFigGroup_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaFigGroup_set,METH_VARARGS,oaIntraPointerAppDef_oaFigGroup_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaFigGroup_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaFigGroup_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaFigGroup_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaFigGroup_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaFigGroup_doc[] = 
"Class: oaIntraPointerAppDef_oaFigGroup\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaFigGroup)\n"
"    Calls: (const oaIntraPointerAppDef_oaFigGroup&)\n"
"    Signature: oaIntraPointerAppDef_oaFigGroup||cref-oaIntraPointerAppDef_oaFigGroup,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaFigGroup_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaFigGroup",
    sizeof(PyoaIntraPointerAppDef_oaFigGroupObject),
    0,
    (destructor)oaIntraPointerAppDef_oaFigGroup_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaFigGroup_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaFigGroup_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaFigGroup_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaFigGroup_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaFigGroup_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaFigGroup_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaFigGroup, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaFigGroup* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaFigGroup|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaFigGroup* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaFigGroup|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaFigGroup_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaFigGroupp result= (oaIntraPointerAppDef_oaFigGroup::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaFigGroup_FromoaIntraPointerAppDef_oaFigGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaFigGroupp result= (oaIntraPointerAppDef_oaFigGroup::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaFigGroup_FromoaIntraPointerAppDef_oaFigGroup(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaFigGroup, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaFigGroup_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaFigGroup, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaFigGroup* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaFigGroup|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaFigGroup* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaFigGroup|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaFigGroup* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaFigGroup|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaFigGroup* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaFigGroup|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaFigGroup_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaFigGroupp result= (oaIntraPointerAppDef_oaFigGroup::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaFigGroup_FromoaIntraPointerAppDef_oaFigGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaFigGroupp result= (oaIntraPointerAppDef_oaFigGroup::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaFigGroup_FromoaIntraPointerAppDef_oaFigGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaFigGroupp result= (oaIntraPointerAppDef_oaFigGroup::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaFigGroup_FromoaIntraPointerAppDef_oaFigGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaFigGroupp result= (oaIntraPointerAppDef_oaFigGroup::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaFigGroup_FromoaIntraPointerAppDef_oaFigGroup(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaFigGroup, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaFigGroup_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaFigGroup_static_find,METH_VARARGS,oaIntraPointerAppDef_oaFigGroup_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaFigGroup_static_get,METH_VARARGS,oaIntraPointerAppDef_oaFigGroup_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaFigGroup_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaFigGroup_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaFigGroup\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaFigGroup",
           (PyObject*)(&PyoaIntraPointerAppDef_oaFigGroup_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaFigGroup\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaFigGroup_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaFigGroup_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaFigGroupMem
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaFigGroupMem_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaFigGroupMem_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaFigGroupMemObject* self = (PyoaIntraPointerAppDef_oaFigGroupMemObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaFigGroupMem)
    {
        PyParamoaIntraPointerAppDef_oaFigGroupMem p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaFigGroupMem_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaFigGroupMem, Choices are:\n"
        "    (oaIntraPointerAppDef_oaFigGroupMem)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaFigGroupMem_tp_dealloc(PyoaIntraPointerAppDef_oaFigGroupMemObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaFigGroupMem_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaFigGroupMem value;
    int convert_status=PyoaIntraPointerAppDef_oaFigGroupMem_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[56];
    sprintf(buffer,"<oaIntraPointerAppDef_oaFigGroupMem::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaFigGroupMem_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaFigGroupMem v1;
    PyParamoaIntraPointerAppDef_oaFigGroupMem v2;
    int convert_status1=PyoaIntraPointerAppDef_oaFigGroupMem_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaFigGroupMem_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaFigGroupMem_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaFigGroupMem* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaFigGroupMem_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaFigGroupMem**) ((PyoaIntraPointerAppDef_oaFigGroupMemObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaFigGroupMem Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaFigGroupMem_FromoaIntraPointerAppDef_oaFigGroupMem(oaIntraPointerAppDef_oaFigGroupMem** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaFigGroupMem* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaFigGroupMem_Type.tp_alloc(&PyoaIntraPointerAppDef_oaFigGroupMem_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaFigGroupMemObject* self = (PyoaIntraPointerAppDef_oaFigGroupMemObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaFigGroupMem_FromoaIntraPointerAppDef_oaFigGroupMem(oaIntraPointerAppDef_oaFigGroupMem* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaFigGroupMem_Type.tp_alloc(&PyoaIntraPointerAppDef_oaFigGroupMem_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaFigGroupMemObject* self = (PyoaIntraPointerAppDef_oaFigGroupMemObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaFigGroupMem_get_doc[] = 
"Class: oaIntraPointerAppDef_oaFigGroupMem, Function: get\n"
"  Paramegers: (oaFigGroupMem)\n"
"    Calls: oaFigGroupMem* get(const oaFigGroupMem* object)\n"
"    Signature: get|ptr-oaFigGroupMem|cptr-oaFigGroupMem,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaFigGroupMem_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaFigGroupMem data;
    int convert_status=PyoaIntraPointerAppDef_oaFigGroupMem_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaFigGroupMemObject* self=(PyoaIntraPointerAppDef_oaFigGroupMemObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaFigGroupMem p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaFigGroupMem_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaFigGroupMemp result= (data.DataCall()->get(p1.Data()));
        return PyoaFigGroupMem_FromoaFigGroupMem(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaFigGroupMem_set_doc[] = 
"Class: oaIntraPointerAppDef_oaFigGroupMem, Function: set\n"
"  Paramegers: (oaFigGroupMem,oaFigGroupMem)\n"
"    Calls: void set(oaFigGroupMem* object,const oaFigGroupMem* otherObject)\n"
"    Signature: set|void-void|ptr-oaFigGroupMem,cptr-oaFigGroupMem,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaFigGroupMem_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaFigGroupMem data;
    int convert_status=PyoaIntraPointerAppDef_oaFigGroupMem_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaFigGroupMemObject* self=(PyoaIntraPointerAppDef_oaFigGroupMemObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaFigGroupMem p1;
    PyParamoaFigGroupMem p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaFigGroupMem_Convert,&p1,
          &PyoaFigGroupMem_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaFigGroupMem_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaFigGroupMem, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaFigGroupMem_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaFigGroupMem data;
    int convert_status=PyoaIntraPointerAppDef_oaFigGroupMem_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaFigGroupMem_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaFigGroupMem, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaFigGroupMem_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaFigGroupMem data;
  int convert_status=PyoaIntraPointerAppDef_oaFigGroupMem_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaFigGroupMem p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaFigGroupMem_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaFigGroupMem_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaFigGroupMem_get,METH_VARARGS,oaIntraPointerAppDef_oaFigGroupMem_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaFigGroupMem_set,METH_VARARGS,oaIntraPointerAppDef_oaFigGroupMem_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaFigGroupMem_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaFigGroupMem_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaFigGroupMem_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaFigGroupMem_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaFigGroupMem_doc[] = 
"Class: oaIntraPointerAppDef_oaFigGroupMem\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaFigGroupMem)\n"
"    Calls: (const oaIntraPointerAppDef_oaFigGroupMem&)\n"
"    Signature: oaIntraPointerAppDef_oaFigGroupMem||cref-oaIntraPointerAppDef_oaFigGroupMem,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaFigGroupMem_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaFigGroupMem",
    sizeof(PyoaIntraPointerAppDef_oaFigGroupMemObject),
    0,
    (destructor)oaIntraPointerAppDef_oaFigGroupMem_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaFigGroupMem_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaFigGroupMem_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaFigGroupMem_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaFigGroupMem_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaFigGroupMem_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaFigGroupMem_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaFigGroupMem, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaFigGroupMem* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaFigGroupMem|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaFigGroupMem* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaFigGroupMem|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaFigGroupMem_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaFigGroupMemp result= (oaIntraPointerAppDef_oaFigGroupMem::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaFigGroupMem_FromoaIntraPointerAppDef_oaFigGroupMem(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaFigGroupMemp result= (oaIntraPointerAppDef_oaFigGroupMem::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaFigGroupMem_FromoaIntraPointerAppDef_oaFigGroupMem(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaFigGroupMem, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaFigGroupMem_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaFigGroupMem, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaFigGroupMem* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaFigGroupMem|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaFigGroupMem* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaFigGroupMem|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaFigGroupMem* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaFigGroupMem|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaFigGroupMem* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaFigGroupMem|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaFigGroupMem_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaFigGroupMemp result= (oaIntraPointerAppDef_oaFigGroupMem::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaFigGroupMem_FromoaIntraPointerAppDef_oaFigGroupMem(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaFigGroupMemp result= (oaIntraPointerAppDef_oaFigGroupMem::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaFigGroupMem_FromoaIntraPointerAppDef_oaFigGroupMem(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaFigGroupMemp result= (oaIntraPointerAppDef_oaFigGroupMem::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaFigGroupMem_FromoaIntraPointerAppDef_oaFigGroupMem(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaFigGroupMemp result= (oaIntraPointerAppDef_oaFigGroupMem::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaFigGroupMem_FromoaIntraPointerAppDef_oaFigGroupMem(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaFigGroupMem, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaFigGroupMem_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaFigGroupMem_static_find,METH_VARARGS,oaIntraPointerAppDef_oaFigGroupMem_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaFigGroupMem_static_get,METH_VARARGS,oaIntraPointerAppDef_oaFigGroupMem_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaFigGroupMem_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaFigGroupMem_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaFigGroupMem\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaFigGroupMem",
           (PyObject*)(&PyoaIntraPointerAppDef_oaFigGroupMem_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaFigGroupMem\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaFigGroupMem_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaFigGroupMem_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaFrame
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaFrame_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaFrame_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaFrameObject* self = (PyoaIntraPointerAppDef_oaFrameObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaFrame)
    {
        PyParamoaIntraPointerAppDef_oaFrame p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaFrame_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaFrame, Choices are:\n"
        "    (oaIntraPointerAppDef_oaFrame)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaFrame_tp_dealloc(PyoaIntraPointerAppDef_oaFrameObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaFrame_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaFrame value;
    int convert_status=PyoaIntraPointerAppDef_oaFrame_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaIntraPointerAppDef_oaFrame::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaFrame_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaFrame v1;
    PyParamoaIntraPointerAppDef_oaFrame v2;
    int convert_status1=PyoaIntraPointerAppDef_oaFrame_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaFrame_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaFrame_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaFrame* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaFrame_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaFrame**) ((PyoaIntraPointerAppDef_oaFrameObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaFrame Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaFrame_FromoaIntraPointerAppDef_oaFrame(oaIntraPointerAppDef_oaFrame** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaFrame* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaFrame_Type.tp_alloc(&PyoaIntraPointerAppDef_oaFrame_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaFrameObject* self = (PyoaIntraPointerAppDef_oaFrameObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaFrame_FromoaIntraPointerAppDef_oaFrame(oaIntraPointerAppDef_oaFrame* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaFrame_Type.tp_alloc(&PyoaIntraPointerAppDef_oaFrame_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaFrameObject* self = (PyoaIntraPointerAppDef_oaFrameObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaFrame_get_doc[] = 
"Class: oaIntraPointerAppDef_oaFrame, Function: get\n"
"  Paramegers: (oaFrame)\n"
"    Calls: oaFrame* get(const oaFrame* object)\n"
"    Signature: get|ptr-oaFrame|cptr-oaFrame,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaFrame_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaFrame data;
    int convert_status=PyoaIntraPointerAppDef_oaFrame_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaFrameObject* self=(PyoaIntraPointerAppDef_oaFrameObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaFrame p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaFrame_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaFramep result= (data.DataCall()->get(p1.Data()));
        return PyoaFrame_FromoaFrame(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaFrame_set_doc[] = 
"Class: oaIntraPointerAppDef_oaFrame, Function: set\n"
"  Paramegers: (oaFrame,oaFrame)\n"
"    Calls: void set(oaFrame* object,const oaFrame* otherObject)\n"
"    Signature: set|void-void|ptr-oaFrame,cptr-oaFrame,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaFrame_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaFrame data;
    int convert_status=PyoaIntraPointerAppDef_oaFrame_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaFrameObject* self=(PyoaIntraPointerAppDef_oaFrameObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaFrame p1;
    PyParamoaFrame p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaFrame_Convert,&p1,
          &PyoaFrame_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaFrame_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaFrame, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaFrame_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaFrame data;
    int convert_status=PyoaIntraPointerAppDef_oaFrame_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaFrame_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaFrame, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaFrame_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaFrame data;
  int convert_status=PyoaIntraPointerAppDef_oaFrame_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaFrame p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaFrame_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaFrame_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaFrame_get,METH_VARARGS,oaIntraPointerAppDef_oaFrame_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaFrame_set,METH_VARARGS,oaIntraPointerAppDef_oaFrame_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaFrame_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaFrame_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaFrame_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaFrame_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaFrame_doc[] = 
"Class: oaIntraPointerAppDef_oaFrame\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaFrame)\n"
"    Calls: (const oaIntraPointerAppDef_oaFrame&)\n"
"    Signature: oaIntraPointerAppDef_oaFrame||cref-oaIntraPointerAppDef_oaFrame,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaFrame_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaFrame",
    sizeof(PyoaIntraPointerAppDef_oaFrameObject),
    0,
    (destructor)oaIntraPointerAppDef_oaFrame_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaFrame_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaFrame_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaFrame_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaFrame_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaFrame_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaFrame_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaFrame, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaFrame* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaFrame|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaFrame* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaFrame|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaFrame_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaFramep result= (oaIntraPointerAppDef_oaFrame::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaFrame_FromoaIntraPointerAppDef_oaFrame(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaFramep result= (oaIntraPointerAppDef_oaFrame::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaFrame_FromoaIntraPointerAppDef_oaFrame(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaFrame, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaFrame_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaFrame, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaFrame* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaFrame|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaFrame* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaFrame|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaFrame* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaFrame|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaFrame* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaFrame|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaFrame_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaFramep result= (oaIntraPointerAppDef_oaFrame::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaFrame_FromoaIntraPointerAppDef_oaFrame(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaFramep result= (oaIntraPointerAppDef_oaFrame::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaFrame_FromoaIntraPointerAppDef_oaFrame(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaFramep result= (oaIntraPointerAppDef_oaFrame::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaFrame_FromoaIntraPointerAppDef_oaFrame(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaFramep result= (oaIntraPointerAppDef_oaFrame::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaFrame_FromoaIntraPointerAppDef_oaFrame(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaFrame, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaFrame_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaFrame_static_find,METH_VARARGS,oaIntraPointerAppDef_oaFrame_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaFrame_static_get,METH_VARARGS,oaIntraPointerAppDef_oaFrame_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaFrame_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaFrame_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaFrame\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaFrame",
           (PyObject*)(&PyoaIntraPointerAppDef_oaFrame_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaFrame\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaFrame_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaFrame_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaFrameInst
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaFrameInst_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaFrameInst_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaFrameInstObject* self = (PyoaIntraPointerAppDef_oaFrameInstObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaFrameInst)
    {
        PyParamoaIntraPointerAppDef_oaFrameInst p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaFrameInst_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaFrameInst, Choices are:\n"
        "    (oaIntraPointerAppDef_oaFrameInst)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaFrameInst_tp_dealloc(PyoaIntraPointerAppDef_oaFrameInstObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaFrameInst_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaFrameInst value;
    int convert_status=PyoaIntraPointerAppDef_oaFrameInst_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[54];
    sprintf(buffer,"<oaIntraPointerAppDef_oaFrameInst::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaFrameInst_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaFrameInst v1;
    PyParamoaIntraPointerAppDef_oaFrameInst v2;
    int convert_status1=PyoaIntraPointerAppDef_oaFrameInst_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaFrameInst_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaFrameInst_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaFrameInst* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaFrameInst_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaFrameInst**) ((PyoaIntraPointerAppDef_oaFrameInstObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaFrameInst Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaFrameInst_FromoaIntraPointerAppDef_oaFrameInst(oaIntraPointerAppDef_oaFrameInst** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaFrameInst* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaFrameInst_Type.tp_alloc(&PyoaIntraPointerAppDef_oaFrameInst_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaFrameInstObject* self = (PyoaIntraPointerAppDef_oaFrameInstObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaFrameInst_FromoaIntraPointerAppDef_oaFrameInst(oaIntraPointerAppDef_oaFrameInst* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaFrameInst_Type.tp_alloc(&PyoaIntraPointerAppDef_oaFrameInst_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaFrameInstObject* self = (PyoaIntraPointerAppDef_oaFrameInstObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaFrameInst_get_doc[] = 
"Class: oaIntraPointerAppDef_oaFrameInst, Function: get\n"
"  Paramegers: (oaFrameInst)\n"
"    Calls: oaFrameInst* get(const oaFrameInst* object)\n"
"    Signature: get|ptr-oaFrameInst|cptr-oaFrameInst,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaFrameInst_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaFrameInst data;
    int convert_status=PyoaIntraPointerAppDef_oaFrameInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaFrameInstObject* self=(PyoaIntraPointerAppDef_oaFrameInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaFrameInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaFrameInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaFrameInstp result= (data.DataCall()->get(p1.Data()));
        return PyoaFrameInst_FromoaFrameInst(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaFrameInst_set_doc[] = 
"Class: oaIntraPointerAppDef_oaFrameInst, Function: set\n"
"  Paramegers: (oaFrameInst,oaFrameInst)\n"
"    Calls: void set(oaFrameInst* object,const oaFrameInst* otherObject)\n"
"    Signature: set|void-void|ptr-oaFrameInst,cptr-oaFrameInst,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaFrameInst_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaFrameInst data;
    int convert_status=PyoaIntraPointerAppDef_oaFrameInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaFrameInstObject* self=(PyoaIntraPointerAppDef_oaFrameInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaFrameInst p1;
    PyParamoaFrameInst p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaFrameInst_Convert,&p1,
          &PyoaFrameInst_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaFrameInst_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaFrameInst, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaFrameInst_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaFrameInst data;
    int convert_status=PyoaIntraPointerAppDef_oaFrameInst_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaFrameInst_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaFrameInst, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaFrameInst_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaFrameInst data;
  int convert_status=PyoaIntraPointerAppDef_oaFrameInst_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaFrameInst p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaFrameInst_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaFrameInst_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaFrameInst_get,METH_VARARGS,oaIntraPointerAppDef_oaFrameInst_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaFrameInst_set,METH_VARARGS,oaIntraPointerAppDef_oaFrameInst_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaFrameInst_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaFrameInst_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaFrameInst_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaFrameInst_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaFrameInst_doc[] = 
"Class: oaIntraPointerAppDef_oaFrameInst\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaFrameInst)\n"
"    Calls: (const oaIntraPointerAppDef_oaFrameInst&)\n"
"    Signature: oaIntraPointerAppDef_oaFrameInst||cref-oaIntraPointerAppDef_oaFrameInst,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaFrameInst_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaFrameInst",
    sizeof(PyoaIntraPointerAppDef_oaFrameInstObject),
    0,
    (destructor)oaIntraPointerAppDef_oaFrameInst_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaFrameInst_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaFrameInst_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaFrameInst_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaFrameInst_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaFrameInst_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaFrameInst_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaFrameInst, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaFrameInst* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaFrameInst|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaFrameInst* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaFrameInst|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaFrameInst_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaFrameInstp result= (oaIntraPointerAppDef_oaFrameInst::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaFrameInst_FromoaIntraPointerAppDef_oaFrameInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaFrameInstp result= (oaIntraPointerAppDef_oaFrameInst::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaFrameInst_FromoaIntraPointerAppDef_oaFrameInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaFrameInst, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaFrameInst_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaFrameInst, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaFrameInst* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaFrameInst|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaFrameInst* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaFrameInst|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaFrameInst* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaFrameInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaFrameInst* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaFrameInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaFrameInst_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaFrameInstp result= (oaIntraPointerAppDef_oaFrameInst::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaFrameInst_FromoaIntraPointerAppDef_oaFrameInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaFrameInstp result= (oaIntraPointerAppDef_oaFrameInst::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaFrameInst_FromoaIntraPointerAppDef_oaFrameInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaFrameInstp result= (oaIntraPointerAppDef_oaFrameInst::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaFrameInst_FromoaIntraPointerAppDef_oaFrameInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaFrameInstp result= (oaIntraPointerAppDef_oaFrameInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaFrameInst_FromoaIntraPointerAppDef_oaFrameInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaFrameInst, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaFrameInst_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaFrameInst_static_find,METH_VARARGS,oaIntraPointerAppDef_oaFrameInst_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaFrameInst_static_get,METH_VARARGS,oaIntraPointerAppDef_oaFrameInst_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaFrameInst_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaFrameInst_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaFrameInst\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaFrameInst",
           (PyObject*)(&PyoaIntraPointerAppDef_oaFrameInst_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaFrameInst\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaFrameInst_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaFrameInst_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaGCellPattern
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaGCellPattern_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaGCellPattern_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaGCellPatternObject* self = (PyoaIntraPointerAppDef_oaGCellPatternObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaGCellPattern)
    {
        PyParamoaIntraPointerAppDef_oaGCellPattern p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaGCellPattern_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaGCellPattern, Choices are:\n"
        "    (oaIntraPointerAppDef_oaGCellPattern)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaGCellPattern_tp_dealloc(PyoaIntraPointerAppDef_oaGCellPatternObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaGCellPattern_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaGCellPattern value;
    int convert_status=PyoaIntraPointerAppDef_oaGCellPattern_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[57];
    sprintf(buffer,"<oaIntraPointerAppDef_oaGCellPattern::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaGCellPattern_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaGCellPattern v1;
    PyParamoaIntraPointerAppDef_oaGCellPattern v2;
    int convert_status1=PyoaIntraPointerAppDef_oaGCellPattern_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaGCellPattern_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaGCellPattern_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaGCellPattern* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaGCellPattern_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaGCellPattern**) ((PyoaIntraPointerAppDef_oaGCellPatternObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaGCellPattern Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaGCellPattern_FromoaIntraPointerAppDef_oaGCellPattern(oaIntraPointerAppDef_oaGCellPattern** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaGCellPattern* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaGCellPattern_Type.tp_alloc(&PyoaIntraPointerAppDef_oaGCellPattern_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaGCellPatternObject* self = (PyoaIntraPointerAppDef_oaGCellPatternObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaGCellPattern_FromoaIntraPointerAppDef_oaGCellPattern(oaIntraPointerAppDef_oaGCellPattern* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaGCellPattern_Type.tp_alloc(&PyoaIntraPointerAppDef_oaGCellPattern_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaGCellPatternObject* self = (PyoaIntraPointerAppDef_oaGCellPatternObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaGCellPattern_get_doc[] = 
"Class: oaIntraPointerAppDef_oaGCellPattern, Function: get\n"
"  Paramegers: (oaGCellPattern)\n"
"    Calls: oaGCellPattern* get(const oaGCellPattern* object)\n"
"    Signature: get|ptr-oaGCellPattern|cptr-oaGCellPattern,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaGCellPattern_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaGCellPattern data;
    int convert_status=PyoaIntraPointerAppDef_oaGCellPattern_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaGCellPatternObject* self=(PyoaIntraPointerAppDef_oaGCellPatternObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGCellPattern p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaGCellPattern_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaGCellPatternp result= (data.DataCall()->get(p1.Data()));
        return PyoaGCellPattern_FromoaGCellPattern(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaGCellPattern_set_doc[] = 
"Class: oaIntraPointerAppDef_oaGCellPattern, Function: set\n"
"  Paramegers: (oaGCellPattern,oaGCellPattern)\n"
"    Calls: void set(oaGCellPattern* object,const oaGCellPattern* otherObject)\n"
"    Signature: set|void-void|ptr-oaGCellPattern,cptr-oaGCellPattern,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaGCellPattern_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaGCellPattern data;
    int convert_status=PyoaIntraPointerAppDef_oaGCellPattern_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaGCellPatternObject* self=(PyoaIntraPointerAppDef_oaGCellPatternObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGCellPattern p1;
    PyParamoaGCellPattern p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaGCellPattern_Convert,&p1,
          &PyoaGCellPattern_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaGCellPattern_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaGCellPattern, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaGCellPattern_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaGCellPattern data;
    int convert_status=PyoaIntraPointerAppDef_oaGCellPattern_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaGCellPattern_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaGCellPattern, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaGCellPattern_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaGCellPattern data;
  int convert_status=PyoaIntraPointerAppDef_oaGCellPattern_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaGCellPattern p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaGCellPattern_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaGCellPattern_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaGCellPattern_get,METH_VARARGS,oaIntraPointerAppDef_oaGCellPattern_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaGCellPattern_set,METH_VARARGS,oaIntraPointerAppDef_oaGCellPattern_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaGCellPattern_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaGCellPattern_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaGCellPattern_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaGCellPattern_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaGCellPattern_doc[] = 
"Class: oaIntraPointerAppDef_oaGCellPattern\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaGCellPattern)\n"
"    Calls: (const oaIntraPointerAppDef_oaGCellPattern&)\n"
"    Signature: oaIntraPointerAppDef_oaGCellPattern||cref-oaIntraPointerAppDef_oaGCellPattern,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaGCellPattern_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaGCellPattern",
    sizeof(PyoaIntraPointerAppDef_oaGCellPatternObject),
    0,
    (destructor)oaIntraPointerAppDef_oaGCellPattern_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaGCellPattern_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaGCellPattern_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaGCellPattern_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaGCellPattern_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaGCellPattern_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaGCellPattern_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaGCellPattern, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaGCellPattern* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaGCellPattern|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaGCellPattern* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaGCellPattern|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaGCellPattern_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaGCellPatternp result= (oaIntraPointerAppDef_oaGCellPattern::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaGCellPattern_FromoaIntraPointerAppDef_oaGCellPattern(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaGCellPatternp result= (oaIntraPointerAppDef_oaGCellPattern::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaGCellPattern_FromoaIntraPointerAppDef_oaGCellPattern(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaGCellPattern, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaGCellPattern_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaGCellPattern, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaGCellPattern* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaGCellPattern|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaGCellPattern* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaGCellPattern|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaGCellPattern* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaGCellPattern|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaGCellPattern* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaGCellPattern|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaGCellPattern_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaGCellPatternp result= (oaIntraPointerAppDef_oaGCellPattern::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaGCellPattern_FromoaIntraPointerAppDef_oaGCellPattern(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaGCellPatternp result= (oaIntraPointerAppDef_oaGCellPattern::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaGCellPattern_FromoaIntraPointerAppDef_oaGCellPattern(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaGCellPatternp result= (oaIntraPointerAppDef_oaGCellPattern::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaGCellPattern_FromoaIntraPointerAppDef_oaGCellPattern(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaGCellPatternp result= (oaIntraPointerAppDef_oaGCellPattern::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaGCellPattern_FromoaIntraPointerAppDef_oaGCellPattern(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaGCellPattern, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaGCellPattern_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaGCellPattern_static_find,METH_VARARGS,oaIntraPointerAppDef_oaGCellPattern_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaGCellPattern_static_get,METH_VARARGS,oaIntraPointerAppDef_oaGCellPattern_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaGCellPattern_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaGCellPattern_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaGCellPattern\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaGCellPattern",
           (PyObject*)(&PyoaIntraPointerAppDef_oaGCellPattern_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaGCellPattern\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaGCellPattern_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaGCellPattern_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaGroup
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaGroup_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaGroup_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaGroupObject* self = (PyoaIntraPointerAppDef_oaGroupObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaGroup)
    {
        PyParamoaIntraPointerAppDef_oaGroup p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaGroup_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaGroup, Choices are:\n"
        "    (oaIntraPointerAppDef_oaGroup)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaGroup_tp_dealloc(PyoaIntraPointerAppDef_oaGroupObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaGroup_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaGroup value;
    int convert_status=PyoaIntraPointerAppDef_oaGroup_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaIntraPointerAppDef_oaGroup::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaGroup_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaGroup v1;
    PyParamoaIntraPointerAppDef_oaGroup v2;
    int convert_status1=PyoaIntraPointerAppDef_oaGroup_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaGroup_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaGroup_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaGroup* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaGroup_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaGroup**) ((PyoaIntraPointerAppDef_oaGroupObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaGroup Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaGroup_FromoaIntraPointerAppDef_oaGroup(oaIntraPointerAppDef_oaGroup** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaGroup* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaGroup_Type.tp_alloc(&PyoaIntraPointerAppDef_oaGroup_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaGroupObject* self = (PyoaIntraPointerAppDef_oaGroupObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaGroup_FromoaIntraPointerAppDef_oaGroup(oaIntraPointerAppDef_oaGroup* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaGroup_Type.tp_alloc(&PyoaIntraPointerAppDef_oaGroup_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaGroupObject* self = (PyoaIntraPointerAppDef_oaGroupObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaGroup_get_doc[] = 
"Class: oaIntraPointerAppDef_oaGroup, Function: get\n"
"  Paramegers: (oaGroup)\n"
"    Calls: oaGroup* get(const oaGroup* object)\n"
"    Signature: get|ptr-oaGroup|cptr-oaGroup,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaGroup_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaGroup data;
    int convert_status=PyoaIntraPointerAppDef_oaGroup_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaGroupObject* self=(PyoaIntraPointerAppDef_oaGroupObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGroup p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaGroup_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaGroupp result= (data.DataCall()->get(p1.Data()));
        return PyoaGroup_FromoaGroup(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaGroup_set_doc[] = 
"Class: oaIntraPointerAppDef_oaGroup, Function: set\n"
"  Paramegers: (oaGroup,oaGroup)\n"
"    Calls: void set(oaGroup* object,const oaGroup* otherObject)\n"
"    Signature: set|void-void|ptr-oaGroup,cptr-oaGroup,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaGroup_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaGroup data;
    int convert_status=PyoaIntraPointerAppDef_oaGroup_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaGroupObject* self=(PyoaIntraPointerAppDef_oaGroupObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGroup p1;
    PyParamoaGroup p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaGroup_Convert,&p1,
          &PyoaGroup_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaGroup_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaGroup, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaGroup_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaGroup data;
    int convert_status=PyoaIntraPointerAppDef_oaGroup_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaGroup_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaGroup, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaGroup_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaGroup data;
  int convert_status=PyoaIntraPointerAppDef_oaGroup_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaGroup p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaGroup_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaGroup_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaGroup_get,METH_VARARGS,oaIntraPointerAppDef_oaGroup_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaGroup_set,METH_VARARGS,oaIntraPointerAppDef_oaGroup_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaGroup_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaGroup_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaGroup_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaGroup_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaGroup_doc[] = 
"Class: oaIntraPointerAppDef_oaGroup\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaGroup)\n"
"    Calls: (const oaIntraPointerAppDef_oaGroup&)\n"
"    Signature: oaIntraPointerAppDef_oaGroup||cref-oaIntraPointerAppDef_oaGroup,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaGroup_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaGroup",
    sizeof(PyoaIntraPointerAppDef_oaGroupObject),
    0,
    (destructor)oaIntraPointerAppDef_oaGroup_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaGroup_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaGroup_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaGroup_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaGroup_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaGroup_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaGroup_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaGroup, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaGroup* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaGroup|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaGroup* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaGroup|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaGroup_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaGroupp result= (oaIntraPointerAppDef_oaGroup::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaGroup_FromoaIntraPointerAppDef_oaGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaGroupp result= (oaIntraPointerAppDef_oaGroup::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaGroup_FromoaIntraPointerAppDef_oaGroup(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaGroup, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaGroup_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaGroup, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaGroup* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaGroup|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaGroup* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaGroup|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaGroup* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaGroup|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaGroup* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaGroup|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaGroup_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaGroupp result= (oaIntraPointerAppDef_oaGroup::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaGroup_FromoaIntraPointerAppDef_oaGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaGroupp result= (oaIntraPointerAppDef_oaGroup::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaGroup_FromoaIntraPointerAppDef_oaGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaGroupp result= (oaIntraPointerAppDef_oaGroup::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaGroup_FromoaIntraPointerAppDef_oaGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaGroupp result= (oaIntraPointerAppDef_oaGroup::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaGroup_FromoaIntraPointerAppDef_oaGroup(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaGroup, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaGroup_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaGroup_static_find,METH_VARARGS,oaIntraPointerAppDef_oaGroup_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaGroup_static_get,METH_VARARGS,oaIntraPointerAppDef_oaGroup_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaGroup_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaGroup_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaGroup\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaGroup",
           (PyObject*)(&PyoaIntraPointerAppDef_oaGroup_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaGroup\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaGroup_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaGroup_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaGroupMember
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaGroupMember_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaGroupMember_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaGroupMemberObject* self = (PyoaIntraPointerAppDef_oaGroupMemberObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaGroupMember)
    {
        PyParamoaIntraPointerAppDef_oaGroupMember p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaGroupMember_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaGroupMember, Choices are:\n"
        "    (oaIntraPointerAppDef_oaGroupMember)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaGroupMember_tp_dealloc(PyoaIntraPointerAppDef_oaGroupMemberObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaGroupMember_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaGroupMember value;
    int convert_status=PyoaIntraPointerAppDef_oaGroupMember_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[56];
    sprintf(buffer,"<oaIntraPointerAppDef_oaGroupMember::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaGroupMember_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaGroupMember v1;
    PyParamoaIntraPointerAppDef_oaGroupMember v2;
    int convert_status1=PyoaIntraPointerAppDef_oaGroupMember_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaGroupMember_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaGroupMember_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaGroupMember* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaGroupMember_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaGroupMember**) ((PyoaIntraPointerAppDef_oaGroupMemberObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaGroupMember Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaGroupMember_FromoaIntraPointerAppDef_oaGroupMember(oaIntraPointerAppDef_oaGroupMember** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaGroupMember* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaGroupMember_Type.tp_alloc(&PyoaIntraPointerAppDef_oaGroupMember_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaGroupMemberObject* self = (PyoaIntraPointerAppDef_oaGroupMemberObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaGroupMember_FromoaIntraPointerAppDef_oaGroupMember(oaIntraPointerAppDef_oaGroupMember* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaGroupMember_Type.tp_alloc(&PyoaIntraPointerAppDef_oaGroupMember_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaGroupMemberObject* self = (PyoaIntraPointerAppDef_oaGroupMemberObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaGroupMember_get_doc[] = 
"Class: oaIntraPointerAppDef_oaGroupMember, Function: get\n"
"  Paramegers: (oaGroupMember)\n"
"    Calls: oaGroupMember* get(const oaGroupMember* object)\n"
"    Signature: get|ptr-oaGroupMember|cptr-oaGroupMember,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaGroupMember_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaGroupMember data;
    int convert_status=PyoaIntraPointerAppDef_oaGroupMember_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaGroupMemberObject* self=(PyoaIntraPointerAppDef_oaGroupMemberObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGroupMember p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaGroupMember_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaGroupMemberp result= (data.DataCall()->get(p1.Data()));
        return PyoaGroupMember_FromoaGroupMember(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaGroupMember_set_doc[] = 
"Class: oaIntraPointerAppDef_oaGroupMember, Function: set\n"
"  Paramegers: (oaGroupMember,oaGroupMember)\n"
"    Calls: void set(oaGroupMember* object,const oaGroupMember* otherObject)\n"
"    Signature: set|void-void|ptr-oaGroupMember,cptr-oaGroupMember,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaGroupMember_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaGroupMember data;
    int convert_status=PyoaIntraPointerAppDef_oaGroupMember_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaGroupMemberObject* self=(PyoaIntraPointerAppDef_oaGroupMemberObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGroupMember p1;
    PyParamoaGroupMember p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaGroupMember_Convert,&p1,
          &PyoaGroupMember_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaGroupMember_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaGroupMember, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaGroupMember_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaGroupMember data;
    int convert_status=PyoaIntraPointerAppDef_oaGroupMember_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaGroupMember_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaGroupMember, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaGroupMember_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaGroupMember data;
  int convert_status=PyoaIntraPointerAppDef_oaGroupMember_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaGroupMember p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaGroupMember_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaGroupMember_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaGroupMember_get,METH_VARARGS,oaIntraPointerAppDef_oaGroupMember_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaGroupMember_set,METH_VARARGS,oaIntraPointerAppDef_oaGroupMember_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaGroupMember_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaGroupMember_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaGroupMember_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaGroupMember_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaGroupMember_doc[] = 
"Class: oaIntraPointerAppDef_oaGroupMember\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaGroupMember)\n"
"    Calls: (const oaIntraPointerAppDef_oaGroupMember&)\n"
"    Signature: oaIntraPointerAppDef_oaGroupMember||cref-oaIntraPointerAppDef_oaGroupMember,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaGroupMember_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaGroupMember",
    sizeof(PyoaIntraPointerAppDef_oaGroupMemberObject),
    0,
    (destructor)oaIntraPointerAppDef_oaGroupMember_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaGroupMember_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaGroupMember_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaGroupMember_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaGroupMember_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaGroupMember_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaGroupMember_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaGroupMember, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaGroupMember* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaGroupMember|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaGroupMember* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaGroupMember|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaGroupMember_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaGroupMemberp result= (oaIntraPointerAppDef_oaGroupMember::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaGroupMember_FromoaIntraPointerAppDef_oaGroupMember(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaGroupMemberp result= (oaIntraPointerAppDef_oaGroupMember::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaGroupMember_FromoaIntraPointerAppDef_oaGroupMember(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaGroupMember, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaGroupMember_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaGroupMember, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaGroupMember* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaGroupMember|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaGroupMember* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaGroupMember|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaGroupMember* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaGroupMember|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaGroupMember* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaGroupMember|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaGroupMember_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaGroupMemberp result= (oaIntraPointerAppDef_oaGroupMember::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaGroupMember_FromoaIntraPointerAppDef_oaGroupMember(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaGroupMemberp result= (oaIntraPointerAppDef_oaGroupMember::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaGroupMember_FromoaIntraPointerAppDef_oaGroupMember(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaGroupMemberp result= (oaIntraPointerAppDef_oaGroupMember::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaGroupMember_FromoaIntraPointerAppDef_oaGroupMember(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaGroupMemberp result= (oaIntraPointerAppDef_oaGroupMember::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaGroupMember_FromoaIntraPointerAppDef_oaGroupMember(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaGroupMember, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaGroupMember_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaGroupMember_static_find,METH_VARARGS,oaIntraPointerAppDef_oaGroupMember_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaGroupMember_static_get,METH_VARARGS,oaIntraPointerAppDef_oaGroupMember_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaGroupMember_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaGroupMember_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaGroupMember\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaGroupMember",
           (PyObject*)(&PyoaIntraPointerAppDef_oaGroupMember_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaGroupMember\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaGroupMember_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaGroupMember_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaGuide
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaGuide_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaGuide_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaGuideObject* self = (PyoaIntraPointerAppDef_oaGuideObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaGuide)
    {
        PyParamoaIntraPointerAppDef_oaGuide p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaGuide_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaGuide, Choices are:\n"
        "    (oaIntraPointerAppDef_oaGuide)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaGuide_tp_dealloc(PyoaIntraPointerAppDef_oaGuideObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaGuide_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaGuide value;
    int convert_status=PyoaIntraPointerAppDef_oaGuide_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaIntraPointerAppDef_oaGuide::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaGuide_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaGuide v1;
    PyParamoaIntraPointerAppDef_oaGuide v2;
    int convert_status1=PyoaIntraPointerAppDef_oaGuide_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaGuide_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaGuide_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaGuide* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaGuide_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaGuide**) ((PyoaIntraPointerAppDef_oaGuideObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaGuide Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaGuide_FromoaIntraPointerAppDef_oaGuide(oaIntraPointerAppDef_oaGuide** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaGuide* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaGuide_Type.tp_alloc(&PyoaIntraPointerAppDef_oaGuide_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaGuideObject* self = (PyoaIntraPointerAppDef_oaGuideObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaGuide_FromoaIntraPointerAppDef_oaGuide(oaIntraPointerAppDef_oaGuide* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaGuide_Type.tp_alloc(&PyoaIntraPointerAppDef_oaGuide_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaGuideObject* self = (PyoaIntraPointerAppDef_oaGuideObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaGuide_get_doc[] = 
"Class: oaIntraPointerAppDef_oaGuide, Function: get\n"
"  Paramegers: (oaGuide)\n"
"    Calls: oaGuide* get(const oaGuide* object)\n"
"    Signature: get|ptr-oaGuide|cptr-oaGuide,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaGuide_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaGuide data;
    int convert_status=PyoaIntraPointerAppDef_oaGuide_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaGuideObject* self=(PyoaIntraPointerAppDef_oaGuideObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGuide p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaGuide_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaGuidep result= (data.DataCall()->get(p1.Data()));
        return PyoaGuide_FromoaGuide(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaGuide_set_doc[] = 
"Class: oaIntraPointerAppDef_oaGuide, Function: set\n"
"  Paramegers: (oaGuide,oaGuide)\n"
"    Calls: void set(oaGuide* object,const oaGuide* otherObject)\n"
"    Signature: set|void-void|ptr-oaGuide,cptr-oaGuide,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaGuide_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaGuide data;
    int convert_status=PyoaIntraPointerAppDef_oaGuide_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaGuideObject* self=(PyoaIntraPointerAppDef_oaGuideObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGuide p1;
    PyParamoaGuide p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaGuide_Convert,&p1,
          &PyoaGuide_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaGuide_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaGuide, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaGuide_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaGuide data;
    int convert_status=PyoaIntraPointerAppDef_oaGuide_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaGuide_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaGuide, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaGuide_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaGuide data;
  int convert_status=PyoaIntraPointerAppDef_oaGuide_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaGuide p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaGuide_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaGuide_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaGuide_get,METH_VARARGS,oaIntraPointerAppDef_oaGuide_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaGuide_set,METH_VARARGS,oaIntraPointerAppDef_oaGuide_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaGuide_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaGuide_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaGuide_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaGuide_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaGuide_doc[] = 
"Class: oaIntraPointerAppDef_oaGuide\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaGuide)\n"
"    Calls: (const oaIntraPointerAppDef_oaGuide&)\n"
"    Signature: oaIntraPointerAppDef_oaGuide||cref-oaIntraPointerAppDef_oaGuide,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaGuide_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaGuide",
    sizeof(PyoaIntraPointerAppDef_oaGuideObject),
    0,
    (destructor)oaIntraPointerAppDef_oaGuide_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaGuide_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaGuide_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaGuide_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaGuide_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaGuide_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaGuide_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaGuide, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaGuide* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaGuide|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaGuide* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaGuide|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaGuide_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaGuidep result= (oaIntraPointerAppDef_oaGuide::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaGuide_FromoaIntraPointerAppDef_oaGuide(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaGuidep result= (oaIntraPointerAppDef_oaGuide::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaGuide_FromoaIntraPointerAppDef_oaGuide(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaGuide, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaGuide_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaGuide, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaGuide* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaGuide|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaGuide* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaGuide|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaGuide* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaGuide|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaGuide* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaGuide|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaGuide_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaGuidep result= (oaIntraPointerAppDef_oaGuide::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaGuide_FromoaIntraPointerAppDef_oaGuide(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaGuidep result= (oaIntraPointerAppDef_oaGuide::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaGuide_FromoaIntraPointerAppDef_oaGuide(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaGuidep result= (oaIntraPointerAppDef_oaGuide::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaGuide_FromoaIntraPointerAppDef_oaGuide(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaGuidep result= (oaIntraPointerAppDef_oaGuide::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaGuide_FromoaIntraPointerAppDef_oaGuide(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaGuide, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaGuide_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaGuide_static_find,METH_VARARGS,oaIntraPointerAppDef_oaGuide_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaGuide_static_get,METH_VARARGS,oaIntraPointerAppDef_oaGuide_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaGuide_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaGuide_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaGuide\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaGuide",
           (PyObject*)(&PyoaIntraPointerAppDef_oaGuide_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaGuide\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaGuide_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaGuide_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaImage
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaImage_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaImage_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaImageObject* self = (PyoaIntraPointerAppDef_oaImageObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaImage)
    {
        PyParamoaIntraPointerAppDef_oaImage p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaImage_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaImage, Choices are:\n"
        "    (oaIntraPointerAppDef_oaImage)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaImage_tp_dealloc(PyoaIntraPointerAppDef_oaImageObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaImage_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaImage value;
    int convert_status=PyoaIntraPointerAppDef_oaImage_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaIntraPointerAppDef_oaImage::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaImage_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaImage v1;
    PyParamoaIntraPointerAppDef_oaImage v2;
    int convert_status1=PyoaIntraPointerAppDef_oaImage_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaImage_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaImage_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaImage* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaImage_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaImage**) ((PyoaIntraPointerAppDef_oaImageObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaImage Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaImage_FromoaIntraPointerAppDef_oaImage(oaIntraPointerAppDef_oaImage** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaImage* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaImage_Type.tp_alloc(&PyoaIntraPointerAppDef_oaImage_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaImageObject* self = (PyoaIntraPointerAppDef_oaImageObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaImage_FromoaIntraPointerAppDef_oaImage(oaIntraPointerAppDef_oaImage* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaImage_Type.tp_alloc(&PyoaIntraPointerAppDef_oaImage_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaImageObject* self = (PyoaIntraPointerAppDef_oaImageObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaImage_get_doc[] = 
"Class: oaIntraPointerAppDef_oaImage, Function: get\n"
"  Paramegers: (oaImage)\n"
"    Calls: oaImage* get(const oaImage* object)\n"
"    Signature: get|ptr-oaImage|cptr-oaImage,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaImage_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaImage data;
    int convert_status=PyoaIntraPointerAppDef_oaImage_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaImageObject* self=(PyoaIntraPointerAppDef_oaImageObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaImage p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaImage_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaImagep result= (data.DataCall()->get(p1.Data()));
        return PyoaImage_FromoaImage(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaImage_set_doc[] = 
"Class: oaIntraPointerAppDef_oaImage, Function: set\n"
"  Paramegers: (oaImage,oaImage)\n"
"    Calls: void set(oaImage* object,const oaImage* otherObject)\n"
"    Signature: set|void-void|ptr-oaImage,cptr-oaImage,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaImage_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaImage data;
    int convert_status=PyoaIntraPointerAppDef_oaImage_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaImageObject* self=(PyoaIntraPointerAppDef_oaImageObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaImage p1;
    PyParamoaImage p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaImage_Convert,&p1,
          &PyoaImage_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaImage_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaImage, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaImage_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaImage data;
    int convert_status=PyoaIntraPointerAppDef_oaImage_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaImage_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaImage, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaImage_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaImage data;
  int convert_status=PyoaIntraPointerAppDef_oaImage_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaImage p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaImage_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaImage_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaImage_get,METH_VARARGS,oaIntraPointerAppDef_oaImage_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaImage_set,METH_VARARGS,oaIntraPointerAppDef_oaImage_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaImage_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaImage_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaImage_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaImage_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaImage_doc[] = 
"Class: oaIntraPointerAppDef_oaImage\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaImage)\n"
"    Calls: (const oaIntraPointerAppDef_oaImage&)\n"
"    Signature: oaIntraPointerAppDef_oaImage||cref-oaIntraPointerAppDef_oaImage,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaImage_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaImage",
    sizeof(PyoaIntraPointerAppDef_oaImageObject),
    0,
    (destructor)oaIntraPointerAppDef_oaImage_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaImage_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaImage_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaImage_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaImage_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaImage_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaImage_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaImage, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaImage* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaImage|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaImage* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaImage|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaImage_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaImagep result= (oaIntraPointerAppDef_oaImage::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaImage_FromoaIntraPointerAppDef_oaImage(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaImagep result= (oaIntraPointerAppDef_oaImage::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaImage_FromoaIntraPointerAppDef_oaImage(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaImage, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaImage_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaImage, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaImage* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaImage|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaImage* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaImage|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaImage* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaImage|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaImage* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaImage|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaImage_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaImagep result= (oaIntraPointerAppDef_oaImage::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaImage_FromoaIntraPointerAppDef_oaImage(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaImagep result= (oaIntraPointerAppDef_oaImage::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaImage_FromoaIntraPointerAppDef_oaImage(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaImagep result= (oaIntraPointerAppDef_oaImage::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaImage_FromoaIntraPointerAppDef_oaImage(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaImagep result= (oaIntraPointerAppDef_oaImage::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaImage_FromoaIntraPointerAppDef_oaImage(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaImage, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaImage_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaImage_static_find,METH_VARARGS,oaIntraPointerAppDef_oaImage_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaImage_static_get,METH_VARARGS,oaIntraPointerAppDef_oaImage_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaImage_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaImage_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaImage\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaImage",
           (PyObject*)(&PyoaIntraPointerAppDef_oaImage_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaImage\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaImage_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaImage_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaInst
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaInst_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaInst_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaInstObject* self = (PyoaIntraPointerAppDef_oaInstObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaInst)
    {
        PyParamoaIntraPointerAppDef_oaInst p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaInst_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaInst, Choices are:\n"
        "    (oaIntraPointerAppDef_oaInst)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaInst_tp_dealloc(PyoaIntraPointerAppDef_oaInstObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaInst_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaInst value;
    int convert_status=PyoaIntraPointerAppDef_oaInst_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[49];
    sprintf(buffer,"<oaIntraPointerAppDef_oaInst::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaInst_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaInst v1;
    PyParamoaIntraPointerAppDef_oaInst v2;
    int convert_status1=PyoaIntraPointerAppDef_oaInst_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaInst_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaInst_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaInst* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaInst_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaInst**) ((PyoaIntraPointerAppDef_oaInstObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaInst Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaInst_FromoaIntraPointerAppDef_oaInst(oaIntraPointerAppDef_oaInst** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaInst* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaInst_Type.tp_alloc(&PyoaIntraPointerAppDef_oaInst_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaInstObject* self = (PyoaIntraPointerAppDef_oaInstObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaInst_FromoaIntraPointerAppDef_oaInst(oaIntraPointerAppDef_oaInst* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaInst_Type.tp_alloc(&PyoaIntraPointerAppDef_oaInst_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaInstObject* self = (PyoaIntraPointerAppDef_oaInstObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaInst_get_doc[] = 
"Class: oaIntraPointerAppDef_oaInst, Function: get\n"
"  Paramegers: (oaInst)\n"
"    Calls: oaInst* get(const oaInst* object)\n"
"    Signature: get|ptr-oaInst|cptr-oaInst,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaInst_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaInst data;
    int convert_status=PyoaIntraPointerAppDef_oaInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaInstObject* self=(PyoaIntraPointerAppDef_oaInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInstp result= (data.DataCall()->get(p1.Data()));
        return PyoaInst_FromoaInst(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaInst_set_doc[] = 
"Class: oaIntraPointerAppDef_oaInst, Function: set\n"
"  Paramegers: (oaInst,oaInst)\n"
"    Calls: void set(oaInst* object,const oaInst* otherObject)\n"
"    Signature: set|void-void|ptr-oaInst,cptr-oaInst,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaInst_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaInst data;
    int convert_status=PyoaIntraPointerAppDef_oaInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaInstObject* self=(PyoaIntraPointerAppDef_oaInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaInst p1;
    PyParamoaInst p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaInst_Convert,&p1,
          &PyoaInst_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaInst_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaInst, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaInst_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaInst data;
    int convert_status=PyoaIntraPointerAppDef_oaInst_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaInst_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaInst, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaInst_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaInst data;
  int convert_status=PyoaIntraPointerAppDef_oaInst_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaInst p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaInst_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaInst_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaInst_get,METH_VARARGS,oaIntraPointerAppDef_oaInst_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaInst_set,METH_VARARGS,oaIntraPointerAppDef_oaInst_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaInst_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaInst_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaInst_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaInst_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaInst_doc[] = 
"Class: oaIntraPointerAppDef_oaInst\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaInst)\n"
"    Calls: (const oaIntraPointerAppDef_oaInst&)\n"
"    Signature: oaIntraPointerAppDef_oaInst||cref-oaIntraPointerAppDef_oaInst,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaInst_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaInst",
    sizeof(PyoaIntraPointerAppDef_oaInstObject),
    0,
    (destructor)oaIntraPointerAppDef_oaInst_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaInst_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaInst_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaInst_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaInst_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaInst_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaInst_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaInst, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaInst* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaInst|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaInst* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaInst|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaInst_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaInstp result= (oaIntraPointerAppDef_oaInst::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaInst_FromoaIntraPointerAppDef_oaInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaInstp result= (oaIntraPointerAppDef_oaInst::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaInst_FromoaIntraPointerAppDef_oaInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaInst, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaInst_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaInst, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaInst* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaInst|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaInst* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaInst|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaInst* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaInst* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaInst_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaInstp result= (oaIntraPointerAppDef_oaInst::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaInst_FromoaIntraPointerAppDef_oaInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaInstp result= (oaIntraPointerAppDef_oaInst::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaInst_FromoaIntraPointerAppDef_oaInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaInstp result= (oaIntraPointerAppDef_oaInst::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaInst_FromoaIntraPointerAppDef_oaInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaInstp result= (oaIntraPointerAppDef_oaInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaInst_FromoaIntraPointerAppDef_oaInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaInst, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaInst_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaInst_static_find,METH_VARARGS,oaIntraPointerAppDef_oaInst_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaInst_static_get,METH_VARARGS,oaIntraPointerAppDef_oaInst_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaInst_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaInst_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaInst\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaInst",
           (PyObject*)(&PyoaIntraPointerAppDef_oaInst_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaInst\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaInst_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaInst_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaInstHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaInstHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaInstHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaInstHeaderObject* self = (PyoaIntraPointerAppDef_oaInstHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaInstHeader)
    {
        PyParamoaIntraPointerAppDef_oaInstHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaInstHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaInstHeader, Choices are:\n"
        "    (oaIntraPointerAppDef_oaInstHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaInstHeader_tp_dealloc(PyoaIntraPointerAppDef_oaInstHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaInstHeader_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaInstHeader value;
    int convert_status=PyoaIntraPointerAppDef_oaInstHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[55];
    sprintf(buffer,"<oaIntraPointerAppDef_oaInstHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaInstHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaInstHeader v1;
    PyParamoaIntraPointerAppDef_oaInstHeader v2;
    int convert_status1=PyoaIntraPointerAppDef_oaInstHeader_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaInstHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaInstHeader_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaInstHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaInstHeader_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaInstHeader**) ((PyoaIntraPointerAppDef_oaInstHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaInstHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaInstHeader_FromoaIntraPointerAppDef_oaInstHeader(oaIntraPointerAppDef_oaInstHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaInstHeader* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaInstHeader_Type.tp_alloc(&PyoaIntraPointerAppDef_oaInstHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaInstHeaderObject* self = (PyoaIntraPointerAppDef_oaInstHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaInstHeader_FromoaIntraPointerAppDef_oaInstHeader(oaIntraPointerAppDef_oaInstHeader* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaInstHeader_Type.tp_alloc(&PyoaIntraPointerAppDef_oaInstHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaInstHeaderObject* self = (PyoaIntraPointerAppDef_oaInstHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaInstHeader_get_doc[] = 
"Class: oaIntraPointerAppDef_oaInstHeader, Function: get\n"
"  Paramegers: (oaInstHeader)\n"
"    Calls: oaInstHeader* get(const oaInstHeader* object)\n"
"    Signature: get|ptr-oaInstHeader|cptr-oaInstHeader,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaInstHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaInstHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaInstHeaderObject* self=(PyoaIntraPointerAppDef_oaInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaInstHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaInstHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInstHeaderp result= (data.DataCall()->get(p1.Data()));
        return PyoaInstHeader_FromoaInstHeader(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaInstHeader_set_doc[] = 
"Class: oaIntraPointerAppDef_oaInstHeader, Function: set\n"
"  Paramegers: (oaInstHeader,oaInstHeader)\n"
"    Calls: void set(oaInstHeader* object,const oaInstHeader* otherObject)\n"
"    Signature: set|void-void|ptr-oaInstHeader,cptr-oaInstHeader,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaInstHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaInstHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaInstHeaderObject* self=(PyoaIntraPointerAppDef_oaInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaInstHeader p1;
    PyParamoaInstHeader p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaInstHeader_Convert,&p1,
          &PyoaInstHeader_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaInstHeader_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaInstHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaInstHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaInstHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaInstHeader_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaInstHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaInstHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaInstHeader data;
  int convert_status=PyoaIntraPointerAppDef_oaInstHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaInstHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaInstHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaInstHeader_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaInstHeader_get,METH_VARARGS,oaIntraPointerAppDef_oaInstHeader_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaInstHeader_set,METH_VARARGS,oaIntraPointerAppDef_oaInstHeader_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaInstHeader_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaInstHeader_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaInstHeader_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaInstHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaInstHeader_doc[] = 
"Class: oaIntraPointerAppDef_oaInstHeader\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaInstHeader)\n"
"    Calls: (const oaIntraPointerAppDef_oaInstHeader&)\n"
"    Signature: oaIntraPointerAppDef_oaInstHeader||cref-oaIntraPointerAppDef_oaInstHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaInstHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaInstHeader",
    sizeof(PyoaIntraPointerAppDef_oaInstHeaderObject),
    0,
    (destructor)oaIntraPointerAppDef_oaInstHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaInstHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaInstHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaInstHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaInstHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaInstHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaInstHeader_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaInstHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaInstHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaInstHeader|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaInstHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaInstHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaInstHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaInstHeaderp result= (oaIntraPointerAppDef_oaInstHeader::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaInstHeader_FromoaIntraPointerAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaInstHeaderp result= (oaIntraPointerAppDef_oaInstHeader::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaInstHeader_FromoaIntraPointerAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaInstHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaInstHeader_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaInstHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaInstHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaInstHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaInstHeader* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaInstHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaInstHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaInstHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaInstHeaderp result= (oaIntraPointerAppDef_oaInstHeader::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaInstHeader_FromoaIntraPointerAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaInstHeaderp result= (oaIntraPointerAppDef_oaInstHeader::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaInstHeader_FromoaIntraPointerAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaInstHeaderp result= (oaIntraPointerAppDef_oaInstHeader::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaInstHeader_FromoaIntraPointerAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaInstHeaderp result= (oaIntraPointerAppDef_oaInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaInstHeader_FromoaIntraPointerAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaInstHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaInstHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaInstHeader_static_find,METH_VARARGS,oaIntraPointerAppDef_oaInstHeader_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaInstHeader_static_get,METH_VARARGS,oaIntraPointerAppDef_oaInstHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaInstHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaInstHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaInstHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaInstHeader",
           (PyObject*)(&PyoaIntraPointerAppDef_oaInstHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaInstHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaInstHeader_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaInstHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaInstTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaInstTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaInstTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaInstTermObject* self = (PyoaIntraPointerAppDef_oaInstTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaInstTerm)
    {
        PyParamoaIntraPointerAppDef_oaInstTerm p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaInstTerm_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaInstTerm, Choices are:\n"
        "    (oaIntraPointerAppDef_oaInstTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaInstTerm_tp_dealloc(PyoaIntraPointerAppDef_oaInstTermObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaInstTerm_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaInstTerm value;
    int convert_status=PyoaIntraPointerAppDef_oaInstTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[53];
    sprintf(buffer,"<oaIntraPointerAppDef_oaInstTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaInstTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaInstTerm v1;
    PyParamoaIntraPointerAppDef_oaInstTerm v2;
    int convert_status1=PyoaIntraPointerAppDef_oaInstTerm_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaInstTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaInstTerm_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaInstTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaInstTerm_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaInstTerm**) ((PyoaIntraPointerAppDef_oaInstTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaInstTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaInstTerm_FromoaIntraPointerAppDef_oaInstTerm(oaIntraPointerAppDef_oaInstTerm** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaInstTerm* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaInstTerm_Type.tp_alloc(&PyoaIntraPointerAppDef_oaInstTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaInstTermObject* self = (PyoaIntraPointerAppDef_oaInstTermObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaInstTerm_FromoaIntraPointerAppDef_oaInstTerm(oaIntraPointerAppDef_oaInstTerm* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaInstTerm_Type.tp_alloc(&PyoaIntraPointerAppDef_oaInstTerm_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaInstTermObject* self = (PyoaIntraPointerAppDef_oaInstTermObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaInstTerm_get_doc[] = 
"Class: oaIntraPointerAppDef_oaInstTerm, Function: get\n"
"  Paramegers: (oaInstTerm)\n"
"    Calls: oaInstTerm* get(const oaInstTerm* object)\n"
"    Signature: get|ptr-oaInstTerm|cptr-oaInstTerm,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaInstTerm_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaInstTerm data;
    int convert_status=PyoaIntraPointerAppDef_oaInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaInstTermObject* self=(PyoaIntraPointerAppDef_oaInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaInstTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaInstTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInstTermp result= (data.DataCall()->get(p1.Data()));
        return PyoaInstTerm_FromoaInstTerm(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaInstTerm_set_doc[] = 
"Class: oaIntraPointerAppDef_oaInstTerm, Function: set\n"
"  Paramegers: (oaInstTerm,oaInstTerm)\n"
"    Calls: void set(oaInstTerm* object,const oaInstTerm* otherObject)\n"
"    Signature: set|void-void|ptr-oaInstTerm,cptr-oaInstTerm,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaInstTerm_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaInstTerm data;
    int convert_status=PyoaIntraPointerAppDef_oaInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaInstTermObject* self=(PyoaIntraPointerAppDef_oaInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaInstTerm p1;
    PyParamoaInstTerm p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaInstTerm_Convert,&p1,
          &PyoaInstTerm_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaInstTerm_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaInstTerm, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaInstTerm_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaInstTerm data;
    int convert_status=PyoaIntraPointerAppDef_oaInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaInstTerm_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaInstTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaInstTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaInstTerm data;
  int convert_status=PyoaIntraPointerAppDef_oaInstTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaInstTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaInstTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaInstTerm_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaInstTerm_get,METH_VARARGS,oaIntraPointerAppDef_oaInstTerm_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaInstTerm_set,METH_VARARGS,oaIntraPointerAppDef_oaInstTerm_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaInstTerm_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaInstTerm_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaInstTerm_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaInstTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaInstTerm_doc[] = 
"Class: oaIntraPointerAppDef_oaInstTerm\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaInstTerm)\n"
"    Calls: (const oaIntraPointerAppDef_oaInstTerm&)\n"
"    Signature: oaIntraPointerAppDef_oaInstTerm||cref-oaIntraPointerAppDef_oaInstTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaInstTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaInstTerm",
    sizeof(PyoaIntraPointerAppDef_oaInstTermObject),
    0,
    (destructor)oaIntraPointerAppDef_oaInstTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaInstTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaInstTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaInstTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaInstTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaInstTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaInstTerm_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaInstTerm, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaInstTerm* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaInstTerm|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaInstTerm* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaInstTerm|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaInstTerm_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaInstTermp result= (oaIntraPointerAppDef_oaInstTerm::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaInstTerm_FromoaIntraPointerAppDef_oaInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaInstTermp result= (oaIntraPointerAppDef_oaInstTerm::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaInstTerm_FromoaIntraPointerAppDef_oaInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaInstTerm, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaInstTerm_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaInstTerm, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaInstTerm* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaInstTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaInstTerm* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaInstTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaInstTerm* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaInstTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaInstTerm_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaInstTermp result= (oaIntraPointerAppDef_oaInstTerm::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaInstTerm_FromoaIntraPointerAppDef_oaInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaInstTermp result= (oaIntraPointerAppDef_oaInstTerm::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaInstTerm_FromoaIntraPointerAppDef_oaInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaInstTermp result= (oaIntraPointerAppDef_oaInstTerm::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaInstTerm_FromoaIntraPointerAppDef_oaInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaInstTermp result= (oaIntraPointerAppDef_oaInstTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaInstTerm_FromoaIntraPointerAppDef_oaInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaInstTerm, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaInstTerm_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaInstTerm_static_find,METH_VARARGS,oaIntraPointerAppDef_oaInstTerm_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaInstTerm_static_get,METH_VARARGS,oaIntraPointerAppDef_oaInstTerm_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaInstTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaInstTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaInstTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaInstTerm",
           (PyObject*)(&PyoaIntraPointerAppDef_oaInstTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaInstTerm\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaInstTerm_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaInstTerm_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaLPPHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaLPPHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaLPPHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaLPPHeaderObject* self = (PyoaIntraPointerAppDef_oaLPPHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaLPPHeader)
    {
        PyParamoaIntraPointerAppDef_oaLPPHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaLPPHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaLPPHeader, Choices are:\n"
        "    (oaIntraPointerAppDef_oaLPPHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaLPPHeader_tp_dealloc(PyoaIntraPointerAppDef_oaLPPHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaLPPHeader_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaLPPHeader value;
    int convert_status=PyoaIntraPointerAppDef_oaLPPHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[54];
    sprintf(buffer,"<oaIntraPointerAppDef_oaLPPHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaLPPHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaLPPHeader v1;
    PyParamoaIntraPointerAppDef_oaLPPHeader v2;
    int convert_status1=PyoaIntraPointerAppDef_oaLPPHeader_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaLPPHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaLPPHeader_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaLPPHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaLPPHeader_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaLPPHeader**) ((PyoaIntraPointerAppDef_oaLPPHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaLPPHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaLPPHeader_FromoaIntraPointerAppDef_oaLPPHeader(oaIntraPointerAppDef_oaLPPHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaLPPHeader* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaLPPHeader_Type.tp_alloc(&PyoaIntraPointerAppDef_oaLPPHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaLPPHeaderObject* self = (PyoaIntraPointerAppDef_oaLPPHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaLPPHeader_FromoaIntraPointerAppDef_oaLPPHeader(oaIntraPointerAppDef_oaLPPHeader* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaLPPHeader_Type.tp_alloc(&PyoaIntraPointerAppDef_oaLPPHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaLPPHeaderObject* self = (PyoaIntraPointerAppDef_oaLPPHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaLPPHeader_get_doc[] = 
"Class: oaIntraPointerAppDef_oaLPPHeader, Function: get\n"
"  Paramegers: (oaLPPHeader)\n"
"    Calls: oaLPPHeader* get(const oaLPPHeader* object)\n"
"    Signature: get|ptr-oaLPPHeader|cptr-oaLPPHeader,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaLPPHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaLPPHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaLPPHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaLPPHeaderObject* self=(PyoaIntraPointerAppDef_oaLPPHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLPPHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaLPPHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaLPPHeaderp result= (data.DataCall()->get(p1.Data()));
        return PyoaLPPHeader_FromoaLPPHeader(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaLPPHeader_set_doc[] = 
"Class: oaIntraPointerAppDef_oaLPPHeader, Function: set\n"
"  Paramegers: (oaLPPHeader,oaLPPHeader)\n"
"    Calls: void set(oaLPPHeader* object,const oaLPPHeader* otherObject)\n"
"    Signature: set|void-void|ptr-oaLPPHeader,cptr-oaLPPHeader,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaLPPHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaLPPHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaLPPHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaLPPHeaderObject* self=(PyoaIntraPointerAppDef_oaLPPHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLPPHeader p1;
    PyParamoaLPPHeader p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaLPPHeader_Convert,&p1,
          &PyoaLPPHeader_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaLPPHeader_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaLPPHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaLPPHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaLPPHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaLPPHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaLPPHeader_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaLPPHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaLPPHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaLPPHeader data;
  int convert_status=PyoaIntraPointerAppDef_oaLPPHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaLPPHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaLPPHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaLPPHeader_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaLPPHeader_get,METH_VARARGS,oaIntraPointerAppDef_oaLPPHeader_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaLPPHeader_set,METH_VARARGS,oaIntraPointerAppDef_oaLPPHeader_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaLPPHeader_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaLPPHeader_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaLPPHeader_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaLPPHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaLPPHeader_doc[] = 
"Class: oaIntraPointerAppDef_oaLPPHeader\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaLPPHeader)\n"
"    Calls: (const oaIntraPointerAppDef_oaLPPHeader&)\n"
"    Signature: oaIntraPointerAppDef_oaLPPHeader||cref-oaIntraPointerAppDef_oaLPPHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaLPPHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaLPPHeader",
    sizeof(PyoaIntraPointerAppDef_oaLPPHeaderObject),
    0,
    (destructor)oaIntraPointerAppDef_oaLPPHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaLPPHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaLPPHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaLPPHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaLPPHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaLPPHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaLPPHeader_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaLPPHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaLPPHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaLPPHeader|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaLPPHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaLPPHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaLPPHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaLPPHeaderp result= (oaIntraPointerAppDef_oaLPPHeader::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaLPPHeader_FromoaIntraPointerAppDef_oaLPPHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaLPPHeaderp result= (oaIntraPointerAppDef_oaLPPHeader::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaLPPHeader_FromoaIntraPointerAppDef_oaLPPHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaLPPHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaLPPHeader_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaLPPHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaLPPHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaLPPHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaLPPHeader* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaLPPHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaLPPHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaLPPHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaLPPHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaLPPHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaLPPHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaLPPHeaderp result= (oaIntraPointerAppDef_oaLPPHeader::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaLPPHeader_FromoaIntraPointerAppDef_oaLPPHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaLPPHeaderp result= (oaIntraPointerAppDef_oaLPPHeader::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaLPPHeader_FromoaIntraPointerAppDef_oaLPPHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaLPPHeaderp result= (oaIntraPointerAppDef_oaLPPHeader::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaLPPHeader_FromoaIntraPointerAppDef_oaLPPHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaLPPHeaderp result= (oaIntraPointerAppDef_oaLPPHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaLPPHeader_FromoaIntraPointerAppDef_oaLPPHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaLPPHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaLPPHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaLPPHeader_static_find,METH_VARARGS,oaIntraPointerAppDef_oaLPPHeader_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaLPPHeader_static_get,METH_VARARGS,oaIntraPointerAppDef_oaLPPHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaLPPHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaLPPHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaLPPHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaLPPHeader",
           (PyObject*)(&PyoaIntraPointerAppDef_oaLPPHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaLPPHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaLPPHeader_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaLPPHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaLayer
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaLayer_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaLayer_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaLayerObject* self = (PyoaIntraPointerAppDef_oaLayerObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaLayer)
    {
        PyParamoaIntraPointerAppDef_oaLayer p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaLayer_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaLayer, Choices are:\n"
        "    (oaIntraPointerAppDef_oaLayer)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaLayer_tp_dealloc(PyoaIntraPointerAppDef_oaLayerObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaLayer_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaLayer value;
    int convert_status=PyoaIntraPointerAppDef_oaLayer_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaIntraPointerAppDef_oaLayer::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaLayer_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaLayer v1;
    PyParamoaIntraPointerAppDef_oaLayer v2;
    int convert_status1=PyoaIntraPointerAppDef_oaLayer_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaLayer_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaLayer_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaLayer* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaLayer_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaLayer**) ((PyoaIntraPointerAppDef_oaLayerObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaLayer Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaLayer_FromoaIntraPointerAppDef_oaLayer(oaIntraPointerAppDef_oaLayer** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaLayer* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaLayer_Type.tp_alloc(&PyoaIntraPointerAppDef_oaLayer_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaLayerObject* self = (PyoaIntraPointerAppDef_oaLayerObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaLayer_FromoaIntraPointerAppDef_oaLayer(oaIntraPointerAppDef_oaLayer* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaLayer_Type.tp_alloc(&PyoaIntraPointerAppDef_oaLayer_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaLayerObject* self = (PyoaIntraPointerAppDef_oaLayerObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaLayer_get_doc[] = 
"Class: oaIntraPointerAppDef_oaLayer, Function: get\n"
"  Paramegers: (oaLayer)\n"
"    Calls: oaLayer* get(const oaLayer* object)\n"
"    Signature: get|ptr-oaLayer|cptr-oaLayer,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaLayer_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaLayer data;
    int convert_status=PyoaIntraPointerAppDef_oaLayer_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaLayerObject* self=(PyoaIntraPointerAppDef_oaLayerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLayer p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaLayer_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaLayerp result= (data.DataCall()->get(p1.Data()));
        return PyoaLayer_FromoaLayer(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaLayer_set_doc[] = 
"Class: oaIntraPointerAppDef_oaLayer, Function: set\n"
"  Paramegers: (oaLayer,oaLayer)\n"
"    Calls: void set(oaLayer* object,const oaLayer* otherObject)\n"
"    Signature: set|void-void|ptr-oaLayer,cptr-oaLayer,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaLayer_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaLayer data;
    int convert_status=PyoaIntraPointerAppDef_oaLayer_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaLayerObject* self=(PyoaIntraPointerAppDef_oaLayerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLayer p1;
    PyParamoaLayer p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaLayer_Convert,&p1,
          &PyoaLayer_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaLayer_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaLayer, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaLayer_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaLayer data;
    int convert_status=PyoaIntraPointerAppDef_oaLayer_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaLayer_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaLayer, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaLayer_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaLayer data;
  int convert_status=PyoaIntraPointerAppDef_oaLayer_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaLayer p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaLayer_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaLayer_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaLayer_get,METH_VARARGS,oaIntraPointerAppDef_oaLayer_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaLayer_set,METH_VARARGS,oaIntraPointerAppDef_oaLayer_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaLayer_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaLayer_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaLayer_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaLayer_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaLayer_doc[] = 
"Class: oaIntraPointerAppDef_oaLayer\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaLayer)\n"
"    Calls: (const oaIntraPointerAppDef_oaLayer&)\n"
"    Signature: oaIntraPointerAppDef_oaLayer||cref-oaIntraPointerAppDef_oaLayer,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaLayer_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaLayer",
    sizeof(PyoaIntraPointerAppDef_oaLayerObject),
    0,
    (destructor)oaIntraPointerAppDef_oaLayer_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaLayer_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaLayer_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaLayer_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaLayer_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaLayer_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaLayer_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaLayer, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaLayer* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaLayer|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaLayer* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaLayer|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaLayer_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaLayerp result= (oaIntraPointerAppDef_oaLayer::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaLayer_FromoaIntraPointerAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaLayerp result= (oaIntraPointerAppDef_oaLayer::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaLayer_FromoaIntraPointerAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaLayer, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaLayer_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaLayer, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaLayer* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaLayer|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaLayer* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaLayer|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaLayer* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaLayer|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaLayer* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaLayer|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaLayer_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaLayerp result= (oaIntraPointerAppDef_oaLayer::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaLayer_FromoaIntraPointerAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaLayerp result= (oaIntraPointerAppDef_oaLayer::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaLayer_FromoaIntraPointerAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaLayerp result= (oaIntraPointerAppDef_oaLayer::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaLayer_FromoaIntraPointerAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaLayerp result= (oaIntraPointerAppDef_oaLayer::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaLayer_FromoaIntraPointerAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaLayer, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaLayer_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaLayer_static_find,METH_VARARGS,oaIntraPointerAppDef_oaLayer_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaLayer_static_get,METH_VARARGS,oaIntraPointerAppDef_oaLayer_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaLayer_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaLayer_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaLayer\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaLayer",
           (PyObject*)(&PyoaIntraPointerAppDef_oaLayer_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaLayer\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaLayer_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaLayer_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaLayerHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaLayerHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaLayerHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaLayerHeaderObject* self = (PyoaIntraPointerAppDef_oaLayerHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaLayerHeader)
    {
        PyParamoaIntraPointerAppDef_oaLayerHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaLayerHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaLayerHeader, Choices are:\n"
        "    (oaIntraPointerAppDef_oaLayerHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaLayerHeader_tp_dealloc(PyoaIntraPointerAppDef_oaLayerHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaLayerHeader_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaLayerHeader value;
    int convert_status=PyoaIntraPointerAppDef_oaLayerHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[56];
    sprintf(buffer,"<oaIntraPointerAppDef_oaLayerHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaLayerHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaLayerHeader v1;
    PyParamoaIntraPointerAppDef_oaLayerHeader v2;
    int convert_status1=PyoaIntraPointerAppDef_oaLayerHeader_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaLayerHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaLayerHeader_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaLayerHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaLayerHeader_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaLayerHeader**) ((PyoaIntraPointerAppDef_oaLayerHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaLayerHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaLayerHeader_FromoaIntraPointerAppDef_oaLayerHeader(oaIntraPointerAppDef_oaLayerHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaLayerHeader* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaLayerHeader_Type.tp_alloc(&PyoaIntraPointerAppDef_oaLayerHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaLayerHeaderObject* self = (PyoaIntraPointerAppDef_oaLayerHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaLayerHeader_FromoaIntraPointerAppDef_oaLayerHeader(oaIntraPointerAppDef_oaLayerHeader* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaLayerHeader_Type.tp_alloc(&PyoaIntraPointerAppDef_oaLayerHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaLayerHeaderObject* self = (PyoaIntraPointerAppDef_oaLayerHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaLayerHeader_get_doc[] = 
"Class: oaIntraPointerAppDef_oaLayerHeader, Function: get\n"
"  Paramegers: (oaLayerHeader)\n"
"    Calls: oaLayerHeader* get(const oaLayerHeader* object)\n"
"    Signature: get|ptr-oaLayerHeader|cptr-oaLayerHeader,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaLayerHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaLayerHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaLayerHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaLayerHeaderObject* self=(PyoaIntraPointerAppDef_oaLayerHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLayerHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaLayerHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaLayerHeaderp result= (data.DataCall()->get(p1.Data()));
        return PyoaLayerHeader_FromoaLayerHeader(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaLayerHeader_set_doc[] = 
"Class: oaIntraPointerAppDef_oaLayerHeader, Function: set\n"
"  Paramegers: (oaLayerHeader,oaLayerHeader)\n"
"    Calls: void set(oaLayerHeader* object,const oaLayerHeader* otherObject)\n"
"    Signature: set|void-void|ptr-oaLayerHeader,cptr-oaLayerHeader,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaLayerHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaLayerHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaLayerHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaLayerHeaderObject* self=(PyoaIntraPointerAppDef_oaLayerHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLayerHeader p1;
    PyParamoaLayerHeader p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaLayerHeader_Convert,&p1,
          &PyoaLayerHeader_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaLayerHeader_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaLayerHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaLayerHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaLayerHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaLayerHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaLayerHeader_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaLayerHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaLayerHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaLayerHeader data;
  int convert_status=PyoaIntraPointerAppDef_oaLayerHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaLayerHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaLayerHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaLayerHeader_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaLayerHeader_get,METH_VARARGS,oaIntraPointerAppDef_oaLayerHeader_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaLayerHeader_set,METH_VARARGS,oaIntraPointerAppDef_oaLayerHeader_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaLayerHeader_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaLayerHeader_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaLayerHeader_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaLayerHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaLayerHeader_doc[] = 
"Class: oaIntraPointerAppDef_oaLayerHeader\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaLayerHeader)\n"
"    Calls: (const oaIntraPointerAppDef_oaLayerHeader&)\n"
"    Signature: oaIntraPointerAppDef_oaLayerHeader||cref-oaIntraPointerAppDef_oaLayerHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaLayerHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaLayerHeader",
    sizeof(PyoaIntraPointerAppDef_oaLayerHeaderObject),
    0,
    (destructor)oaIntraPointerAppDef_oaLayerHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaLayerHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaLayerHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaLayerHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaLayerHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaLayerHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaLayerHeader_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaLayerHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaLayerHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaLayerHeader|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaLayerHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaLayerHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaLayerHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaLayerHeaderp result= (oaIntraPointerAppDef_oaLayerHeader::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaLayerHeader_FromoaIntraPointerAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaLayerHeaderp result= (oaIntraPointerAppDef_oaLayerHeader::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaLayerHeader_FromoaIntraPointerAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaLayerHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaLayerHeader_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaLayerHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaLayerHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaLayerHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaLayerHeader* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaLayerHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaLayerHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaLayerHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaLayerHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaLayerHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaLayerHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaLayerHeaderp result= (oaIntraPointerAppDef_oaLayerHeader::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaLayerHeader_FromoaIntraPointerAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaLayerHeaderp result= (oaIntraPointerAppDef_oaLayerHeader::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaLayerHeader_FromoaIntraPointerAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaLayerHeaderp result= (oaIntraPointerAppDef_oaLayerHeader::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaLayerHeader_FromoaIntraPointerAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaLayerHeaderp result= (oaIntraPointerAppDef_oaLayerHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaLayerHeader_FromoaIntraPointerAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaLayerHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaLayerHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaLayerHeader_static_find,METH_VARARGS,oaIntraPointerAppDef_oaLayerHeader_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaLayerHeader_static_get,METH_VARARGS,oaIntraPointerAppDef_oaLayerHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaLayerHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaLayerHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaLayerHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaLayerHeader",
           (PyObject*)(&PyoaIntraPointerAppDef_oaLayerHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaLayerHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaLayerHeader_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaLayerHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaLib
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaLib_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaLib_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaLibObject* self = (PyoaIntraPointerAppDef_oaLibObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaLib)
    {
        PyParamoaIntraPointerAppDef_oaLib p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaLib_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaLib, Choices are:\n"
        "    (oaIntraPointerAppDef_oaLib)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaLib_tp_dealloc(PyoaIntraPointerAppDef_oaLibObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaLib_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaLib value;
    int convert_status=PyoaIntraPointerAppDef_oaLib_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[48];
    sprintf(buffer,"<oaIntraPointerAppDef_oaLib::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaLib_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaLib v1;
    PyParamoaIntraPointerAppDef_oaLib v2;
    int convert_status1=PyoaIntraPointerAppDef_oaLib_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaLib_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaLib_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaLib* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaLib_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaLib**) ((PyoaIntraPointerAppDef_oaLibObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaLib Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaLib_FromoaIntraPointerAppDef_oaLib(oaIntraPointerAppDef_oaLib** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaLib* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaLib_Type.tp_alloc(&PyoaIntraPointerAppDef_oaLib_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaLibObject* self = (PyoaIntraPointerAppDef_oaLibObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaLib_FromoaIntraPointerAppDef_oaLib(oaIntraPointerAppDef_oaLib* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaLib_Type.tp_alloc(&PyoaIntraPointerAppDef_oaLib_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaLibObject* self = (PyoaIntraPointerAppDef_oaLibObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaLib_get_doc[] = 
"Class: oaIntraPointerAppDef_oaLib, Function: get\n"
"  Paramegers: (oaLib)\n"
"    Calls: oaLib* get(const oaLib* object)\n"
"    Signature: get|ptr-oaLib|cptr-oaLib,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaLib_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaLib data;
    int convert_status=PyoaIntraPointerAppDef_oaLib_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaLibObject* self=(PyoaIntraPointerAppDef_oaLibObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLib p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaLib_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaLibp result= (data.DataCall()->get(p1.Data()));
        return PyoaLib_FromoaLib(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaLib_set_doc[] = 
"Class: oaIntraPointerAppDef_oaLib, Function: set\n"
"  Paramegers: (oaLib,oaLib)\n"
"    Calls: void set(oaLib* object,const oaLib* otherObject)\n"
"    Signature: set|void-void|ptr-oaLib,cptr-oaLib,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaLib_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaLib data;
    int convert_status=PyoaIntraPointerAppDef_oaLib_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaLibObject* self=(PyoaIntraPointerAppDef_oaLibObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLib p1;
    PyParamoaLib p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaLib_Convert,&p1,
          &PyoaLib_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaLib_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaLib, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaLib_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaLib data;
    int convert_status=PyoaIntraPointerAppDef_oaLib_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaLib_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaLib, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaLib_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaLib data;
  int convert_status=PyoaIntraPointerAppDef_oaLib_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaLib p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaLib_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaLib_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaLib_get,METH_VARARGS,oaIntraPointerAppDef_oaLib_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaLib_set,METH_VARARGS,oaIntraPointerAppDef_oaLib_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaLib_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaLib_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaLib_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaLib_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaLib_doc[] = 
"Class: oaIntraPointerAppDef_oaLib\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaLib)\n"
"    Calls: (const oaIntraPointerAppDef_oaLib&)\n"
"    Signature: oaIntraPointerAppDef_oaLib||cref-oaIntraPointerAppDef_oaLib,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaLib_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaLib",
    sizeof(PyoaIntraPointerAppDef_oaLibObject),
    0,
    (destructor)oaIntraPointerAppDef_oaLib_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaLib_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaLib_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaLib_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaLib_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaLib_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaLib_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaLib, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaLib* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaLib|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaLib* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaLib|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaLib_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaLibp result= (oaIntraPointerAppDef_oaLib::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaLib_FromoaIntraPointerAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaLibp result= (oaIntraPointerAppDef_oaLib::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaLib_FromoaIntraPointerAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaLib, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaLib_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaLib, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaLib* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaLib|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaLib* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaLib|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaLib* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaLib|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaLib* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaLib|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaLib_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaLibp result= (oaIntraPointerAppDef_oaLib::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaLib_FromoaIntraPointerAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaLibp result= (oaIntraPointerAppDef_oaLib::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaLib_FromoaIntraPointerAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaLibp result= (oaIntraPointerAppDef_oaLib::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaLib_FromoaIntraPointerAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaLibp result= (oaIntraPointerAppDef_oaLib::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaLib_FromoaIntraPointerAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaLib, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaLib_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaLib_static_find,METH_VARARGS,oaIntraPointerAppDef_oaLib_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaLib_static_get,METH_VARARGS,oaIntraPointerAppDef_oaLib_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaLib_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaLib_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaLib\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaLib",
           (PyObject*)(&PyoaIntraPointerAppDef_oaLib_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaLib\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaLib_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaLib_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaMarker
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaMarker_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaMarker_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaMarkerObject* self = (PyoaIntraPointerAppDef_oaMarkerObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaMarker)
    {
        PyParamoaIntraPointerAppDef_oaMarker p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaMarker_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaMarker, Choices are:\n"
        "    (oaIntraPointerAppDef_oaMarker)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaMarker_tp_dealloc(PyoaIntraPointerAppDef_oaMarkerObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaMarker_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaMarker value;
    int convert_status=PyoaIntraPointerAppDef_oaMarker_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[51];
    sprintf(buffer,"<oaIntraPointerAppDef_oaMarker::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaMarker_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaMarker v1;
    PyParamoaIntraPointerAppDef_oaMarker v2;
    int convert_status1=PyoaIntraPointerAppDef_oaMarker_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaMarker_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaMarker_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaMarker* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaMarker_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaMarker**) ((PyoaIntraPointerAppDef_oaMarkerObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaMarker Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaMarker_FromoaIntraPointerAppDef_oaMarker(oaIntraPointerAppDef_oaMarker** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaMarker* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaMarker_Type.tp_alloc(&PyoaIntraPointerAppDef_oaMarker_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaMarkerObject* self = (PyoaIntraPointerAppDef_oaMarkerObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaMarker_FromoaIntraPointerAppDef_oaMarker(oaIntraPointerAppDef_oaMarker* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaMarker_Type.tp_alloc(&PyoaIntraPointerAppDef_oaMarker_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaMarkerObject* self = (PyoaIntraPointerAppDef_oaMarkerObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaMarker_get_doc[] = 
"Class: oaIntraPointerAppDef_oaMarker, Function: get\n"
"  Paramegers: (oaMarker)\n"
"    Calls: oaMarker* get(const oaMarker* object)\n"
"    Signature: get|ptr-oaMarker|cptr-oaMarker,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaMarker_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaMarker data;
    int convert_status=PyoaIntraPointerAppDef_oaMarker_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaMarkerObject* self=(PyoaIntraPointerAppDef_oaMarkerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaMarker p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaMarker_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaMarkerp result= (data.DataCall()->get(p1.Data()));
        return PyoaMarker_FromoaMarker(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaMarker_set_doc[] = 
"Class: oaIntraPointerAppDef_oaMarker, Function: set\n"
"  Paramegers: (oaMarker,oaMarker)\n"
"    Calls: void set(oaMarker* object,const oaMarker* otherObject)\n"
"    Signature: set|void-void|ptr-oaMarker,cptr-oaMarker,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaMarker_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaMarker data;
    int convert_status=PyoaIntraPointerAppDef_oaMarker_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaMarkerObject* self=(PyoaIntraPointerAppDef_oaMarkerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaMarker p1;
    PyParamoaMarker p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaMarker_Convert,&p1,
          &PyoaMarker_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaMarker_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaMarker, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaMarker_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaMarker data;
    int convert_status=PyoaIntraPointerAppDef_oaMarker_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaMarker_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaMarker, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaMarker_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaMarker data;
  int convert_status=PyoaIntraPointerAppDef_oaMarker_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaMarker p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaMarker_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaMarker_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaMarker_get,METH_VARARGS,oaIntraPointerAppDef_oaMarker_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaMarker_set,METH_VARARGS,oaIntraPointerAppDef_oaMarker_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaMarker_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaMarker_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaMarker_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaMarker_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaMarker_doc[] = 
"Class: oaIntraPointerAppDef_oaMarker\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaMarker)\n"
"    Calls: (const oaIntraPointerAppDef_oaMarker&)\n"
"    Signature: oaIntraPointerAppDef_oaMarker||cref-oaIntraPointerAppDef_oaMarker,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaMarker_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaMarker",
    sizeof(PyoaIntraPointerAppDef_oaMarkerObject),
    0,
    (destructor)oaIntraPointerAppDef_oaMarker_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaMarker_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaMarker_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaMarker_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaMarker_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaMarker_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaMarker_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaMarker, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaMarker* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaMarker|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaMarker* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaMarker|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaMarker_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaMarkerp result= (oaIntraPointerAppDef_oaMarker::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaMarker_FromoaIntraPointerAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaMarkerp result= (oaIntraPointerAppDef_oaMarker::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaMarker_FromoaIntraPointerAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaMarker, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaMarker_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaMarker, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaMarker* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaMarker|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaMarker* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaMarker|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaMarker* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaMarker|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaMarker* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaMarker|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaMarker_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaMarkerp result= (oaIntraPointerAppDef_oaMarker::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaMarker_FromoaIntraPointerAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaMarkerp result= (oaIntraPointerAppDef_oaMarker::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaMarker_FromoaIntraPointerAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaMarkerp result= (oaIntraPointerAppDef_oaMarker::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaMarker_FromoaIntraPointerAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaMarkerp result= (oaIntraPointerAppDef_oaMarker::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaMarker_FromoaIntraPointerAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaMarker, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaMarker_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaMarker_static_find,METH_VARARGS,oaIntraPointerAppDef_oaMarker_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaMarker_static_get,METH_VARARGS,oaIntraPointerAppDef_oaMarker_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaMarker_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaMarker_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaMarker\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaMarker",
           (PyObject*)(&PyoaIntraPointerAppDef_oaMarker_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaMarker\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaMarker_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaMarker_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaModAssignment
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaModAssignment_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaModAssignment_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaModAssignmentObject* self = (PyoaIntraPointerAppDef_oaModAssignmentObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaModAssignment)
    {
        PyParamoaIntraPointerAppDef_oaModAssignment p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaModAssignment_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaModAssignment, Choices are:\n"
        "    (oaIntraPointerAppDef_oaModAssignment)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaModAssignment_tp_dealloc(PyoaIntraPointerAppDef_oaModAssignmentObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaModAssignment_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaModAssignment value;
    int convert_status=PyoaIntraPointerAppDef_oaModAssignment_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[58];
    sprintf(buffer,"<oaIntraPointerAppDef_oaModAssignment::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaModAssignment_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaModAssignment v1;
    PyParamoaIntraPointerAppDef_oaModAssignment v2;
    int convert_status1=PyoaIntraPointerAppDef_oaModAssignment_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaModAssignment_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaModAssignment_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaModAssignment* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaModAssignment_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaModAssignment**) ((PyoaIntraPointerAppDef_oaModAssignmentObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaModAssignment Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaModAssignment_FromoaIntraPointerAppDef_oaModAssignment(oaIntraPointerAppDef_oaModAssignment** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaModAssignment* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaModAssignment_Type.tp_alloc(&PyoaIntraPointerAppDef_oaModAssignment_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaModAssignmentObject* self = (PyoaIntraPointerAppDef_oaModAssignmentObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaModAssignment_FromoaIntraPointerAppDef_oaModAssignment(oaIntraPointerAppDef_oaModAssignment* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaModAssignment_Type.tp_alloc(&PyoaIntraPointerAppDef_oaModAssignment_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaModAssignmentObject* self = (PyoaIntraPointerAppDef_oaModAssignmentObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModAssignment_get_doc[] = 
"Class: oaIntraPointerAppDef_oaModAssignment, Function: get\n"
"  Paramegers: (oaModAssignment)\n"
"    Calls: oaModAssignment* get(const oaModAssignment* object)\n"
"    Signature: get|ptr-oaModAssignment|cptr-oaModAssignment,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaModAssignment_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaModAssignment data;
    int convert_status=PyoaIntraPointerAppDef_oaModAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaModAssignmentObject* self=(PyoaIntraPointerAppDef_oaModAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModAssignment p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModAssignment_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaModAssignmentp result= (data.DataCall()->get(p1.Data()));
        return PyoaModAssignment_FromoaModAssignment(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModAssignment_set_doc[] = 
"Class: oaIntraPointerAppDef_oaModAssignment, Function: set\n"
"  Paramegers: (oaModAssignment,oaModAssignment)\n"
"    Calls: void set(oaModAssignment* object,const oaModAssignment* otherObject)\n"
"    Signature: set|void-void|ptr-oaModAssignment,cptr-oaModAssignment,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaModAssignment_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaModAssignment data;
    int convert_status=PyoaIntraPointerAppDef_oaModAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaModAssignmentObject* self=(PyoaIntraPointerAppDef_oaModAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModAssignment p1;
    PyParamoaModAssignment p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModAssignment_Convert,&p1,
          &PyoaModAssignment_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModAssignment_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaModAssignment, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaModAssignment_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaModAssignment data;
    int convert_status=PyoaIntraPointerAppDef_oaModAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaModAssignment_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaModAssignment, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaModAssignment_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaModAssignment data;
  int convert_status=PyoaIntraPointerAppDef_oaModAssignment_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaModAssignment p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaModAssignment_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaModAssignment_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaModAssignment_get,METH_VARARGS,oaIntraPointerAppDef_oaModAssignment_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaModAssignment_set,METH_VARARGS,oaIntraPointerAppDef_oaModAssignment_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaModAssignment_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaModAssignment_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaModAssignment_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaModAssignment_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModAssignment_doc[] = 
"Class: oaIntraPointerAppDef_oaModAssignment\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaModAssignment)\n"
"    Calls: (const oaIntraPointerAppDef_oaModAssignment&)\n"
"    Signature: oaIntraPointerAppDef_oaModAssignment||cref-oaIntraPointerAppDef_oaModAssignment,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaModAssignment_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaModAssignment",
    sizeof(PyoaIntraPointerAppDef_oaModAssignmentObject),
    0,
    (destructor)oaIntraPointerAppDef_oaModAssignment_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaModAssignment_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaModAssignment_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaModAssignment_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaModAssignment_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaModAssignment_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModAssignment_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaModAssignment, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaModAssignment* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaModAssignment|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaModAssignment* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaModAssignment|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaModAssignment_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaModAssignmentp result= (oaIntraPointerAppDef_oaModAssignment::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaModAssignment_FromoaIntraPointerAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModAssignmentp result= (oaIntraPointerAppDef_oaModAssignment::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModAssignment_FromoaIntraPointerAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaModAssignment, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModAssignment_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaModAssignment, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaModAssignment* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModAssignment|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaModAssignment* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModAssignment|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaModAssignment* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaModAssignment* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaModAssignment_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaModAssignmentp result= (oaIntraPointerAppDef_oaModAssignment::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaModAssignment_FromoaIntraPointerAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaModAssignmentp result= (oaIntraPointerAppDef_oaModAssignment::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModAssignment_FromoaIntraPointerAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModAssignmentp result= (oaIntraPointerAppDef_oaModAssignment::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModAssignment_FromoaIntraPointerAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModAssignmentp result= (oaIntraPointerAppDef_oaModAssignment::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaModAssignment_FromoaIntraPointerAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaModAssignment, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaModAssignment_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaModAssignment_static_find,METH_VARARGS,oaIntraPointerAppDef_oaModAssignment_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaModAssignment_static_get,METH_VARARGS,oaIntraPointerAppDef_oaModAssignment_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaModAssignment_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaModAssignment_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaModAssignment\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaModAssignment",
           (PyObject*)(&PyoaIntraPointerAppDef_oaModAssignment_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaModAssignment\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaModAssignment_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaModAssignment_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaModBusNetDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaModBusNetDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaModBusNetDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaModBusNetDefObject* self = (PyoaIntraPointerAppDef_oaModBusNetDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaModBusNetDef)
    {
        PyParamoaIntraPointerAppDef_oaModBusNetDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaModBusNetDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaModBusNetDef, Choices are:\n"
        "    (oaIntraPointerAppDef_oaModBusNetDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaModBusNetDef_tp_dealloc(PyoaIntraPointerAppDef_oaModBusNetDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaModBusNetDef_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaModBusNetDef value;
    int convert_status=PyoaIntraPointerAppDef_oaModBusNetDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[57];
    sprintf(buffer,"<oaIntraPointerAppDef_oaModBusNetDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaModBusNetDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaModBusNetDef v1;
    PyParamoaIntraPointerAppDef_oaModBusNetDef v2;
    int convert_status1=PyoaIntraPointerAppDef_oaModBusNetDef_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaModBusNetDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaModBusNetDef_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaModBusNetDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaModBusNetDef_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaModBusNetDef**) ((PyoaIntraPointerAppDef_oaModBusNetDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaModBusNetDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaModBusNetDef_FromoaIntraPointerAppDef_oaModBusNetDef(oaIntraPointerAppDef_oaModBusNetDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaModBusNetDef* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaModBusNetDef_Type.tp_alloc(&PyoaIntraPointerAppDef_oaModBusNetDef_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaModBusNetDefObject* self = (PyoaIntraPointerAppDef_oaModBusNetDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaModBusNetDef_FromoaIntraPointerAppDef_oaModBusNetDef(oaIntraPointerAppDef_oaModBusNetDef* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaModBusNetDef_Type.tp_alloc(&PyoaIntraPointerAppDef_oaModBusNetDef_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaModBusNetDefObject* self = (PyoaIntraPointerAppDef_oaModBusNetDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModBusNetDef_get_doc[] = 
"Class: oaIntraPointerAppDef_oaModBusNetDef, Function: get\n"
"  Paramegers: (oaModBusNetDef)\n"
"    Calls: oaModBusNetDef* get(const oaModBusNetDef* object)\n"
"    Signature: get|ptr-oaModBusNetDef|cptr-oaModBusNetDef,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaModBusNetDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaModBusNetDef data;
    int convert_status=PyoaIntraPointerAppDef_oaModBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaModBusNetDefObject* self=(PyoaIntraPointerAppDef_oaModBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModBusNetDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModBusNetDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaModBusNetDefp result= (data.DataCall()->get(p1.Data()));
        return PyoaModBusNetDef_FromoaModBusNetDef(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModBusNetDef_set_doc[] = 
"Class: oaIntraPointerAppDef_oaModBusNetDef, Function: set\n"
"  Paramegers: (oaModBusNetDef,oaModBusNetDef)\n"
"    Calls: void set(oaModBusNetDef* object,const oaModBusNetDef* otherObject)\n"
"    Signature: set|void-void|ptr-oaModBusNetDef,cptr-oaModBusNetDef,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaModBusNetDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaModBusNetDef data;
    int convert_status=PyoaIntraPointerAppDef_oaModBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaModBusNetDefObject* self=(PyoaIntraPointerAppDef_oaModBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModBusNetDef p1;
    PyParamoaModBusNetDef p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModBusNetDef_Convert,&p1,
          &PyoaModBusNetDef_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModBusNetDef_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaModBusNetDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaModBusNetDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaModBusNetDef data;
    int convert_status=PyoaIntraPointerAppDef_oaModBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaModBusNetDef_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaModBusNetDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaModBusNetDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaModBusNetDef data;
  int convert_status=PyoaIntraPointerAppDef_oaModBusNetDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaModBusNetDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaModBusNetDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaModBusNetDef_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaModBusNetDef_get,METH_VARARGS,oaIntraPointerAppDef_oaModBusNetDef_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaModBusNetDef_set,METH_VARARGS,oaIntraPointerAppDef_oaModBusNetDef_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaModBusNetDef_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaModBusNetDef_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaModBusNetDef_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaModBusNetDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModBusNetDef_doc[] = 
"Class: oaIntraPointerAppDef_oaModBusNetDef\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaModBusNetDef)\n"
"    Calls: (const oaIntraPointerAppDef_oaModBusNetDef&)\n"
"    Signature: oaIntraPointerAppDef_oaModBusNetDef||cref-oaIntraPointerAppDef_oaModBusNetDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaModBusNetDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaModBusNetDef",
    sizeof(PyoaIntraPointerAppDef_oaModBusNetDefObject),
    0,
    (destructor)oaIntraPointerAppDef_oaModBusNetDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaModBusNetDef_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaModBusNetDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaModBusNetDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaModBusNetDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaModBusNetDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModBusNetDef_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaModBusNetDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaModBusNetDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaModBusNetDef|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaModBusNetDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaModBusNetDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaModBusNetDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaModBusNetDefp result= (oaIntraPointerAppDef_oaModBusNetDef::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaModBusNetDef_FromoaIntraPointerAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModBusNetDefp result= (oaIntraPointerAppDef_oaModBusNetDef::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModBusNetDef_FromoaIntraPointerAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaModBusNetDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModBusNetDef_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaModBusNetDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaModBusNetDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModBusNetDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaModBusNetDef* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModBusNetDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaModBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaModBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaModBusNetDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaModBusNetDefp result= (oaIntraPointerAppDef_oaModBusNetDef::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaModBusNetDef_FromoaIntraPointerAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaModBusNetDefp result= (oaIntraPointerAppDef_oaModBusNetDef::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModBusNetDef_FromoaIntraPointerAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModBusNetDefp result= (oaIntraPointerAppDef_oaModBusNetDef::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModBusNetDef_FromoaIntraPointerAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModBusNetDefp result= (oaIntraPointerAppDef_oaModBusNetDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaModBusNetDef_FromoaIntraPointerAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaModBusNetDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaModBusNetDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaModBusNetDef_static_find,METH_VARARGS,oaIntraPointerAppDef_oaModBusNetDef_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaModBusNetDef_static_get,METH_VARARGS,oaIntraPointerAppDef_oaModBusNetDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaModBusNetDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaModBusNetDef_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaModBusNetDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaModBusNetDef",
           (PyObject*)(&PyoaIntraPointerAppDef_oaModBusNetDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaModBusNetDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaModBusNetDef_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaModBusNetDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaModBusTermDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaModBusTermDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaModBusTermDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaModBusTermDefObject* self = (PyoaIntraPointerAppDef_oaModBusTermDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaModBusTermDef)
    {
        PyParamoaIntraPointerAppDef_oaModBusTermDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaModBusTermDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaModBusTermDef, Choices are:\n"
        "    (oaIntraPointerAppDef_oaModBusTermDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaModBusTermDef_tp_dealloc(PyoaIntraPointerAppDef_oaModBusTermDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaModBusTermDef_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaModBusTermDef value;
    int convert_status=PyoaIntraPointerAppDef_oaModBusTermDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[58];
    sprintf(buffer,"<oaIntraPointerAppDef_oaModBusTermDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaModBusTermDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaModBusTermDef v1;
    PyParamoaIntraPointerAppDef_oaModBusTermDef v2;
    int convert_status1=PyoaIntraPointerAppDef_oaModBusTermDef_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaModBusTermDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaModBusTermDef_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaModBusTermDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaModBusTermDef_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaModBusTermDef**) ((PyoaIntraPointerAppDef_oaModBusTermDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaModBusTermDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaModBusTermDef_FromoaIntraPointerAppDef_oaModBusTermDef(oaIntraPointerAppDef_oaModBusTermDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaModBusTermDef* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaModBusTermDef_Type.tp_alloc(&PyoaIntraPointerAppDef_oaModBusTermDef_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaModBusTermDefObject* self = (PyoaIntraPointerAppDef_oaModBusTermDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaModBusTermDef_FromoaIntraPointerAppDef_oaModBusTermDef(oaIntraPointerAppDef_oaModBusTermDef* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaModBusTermDef_Type.tp_alloc(&PyoaIntraPointerAppDef_oaModBusTermDef_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaModBusTermDefObject* self = (PyoaIntraPointerAppDef_oaModBusTermDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModBusTermDef_get_doc[] = 
"Class: oaIntraPointerAppDef_oaModBusTermDef, Function: get\n"
"  Paramegers: (oaModBusTermDef)\n"
"    Calls: oaModBusTermDef* get(const oaModBusTermDef* object)\n"
"    Signature: get|ptr-oaModBusTermDef|cptr-oaModBusTermDef,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaModBusTermDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaModBusTermDef data;
    int convert_status=PyoaIntraPointerAppDef_oaModBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaModBusTermDefObject* self=(PyoaIntraPointerAppDef_oaModBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModBusTermDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModBusTermDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaModBusTermDefp result= (data.DataCall()->get(p1.Data()));
        return PyoaModBusTermDef_FromoaModBusTermDef(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModBusTermDef_set_doc[] = 
"Class: oaIntraPointerAppDef_oaModBusTermDef, Function: set\n"
"  Paramegers: (oaModBusTermDef,oaModBusTermDef)\n"
"    Calls: void set(oaModBusTermDef* object,const oaModBusTermDef* otherObject)\n"
"    Signature: set|void-void|ptr-oaModBusTermDef,cptr-oaModBusTermDef,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaModBusTermDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaModBusTermDef data;
    int convert_status=PyoaIntraPointerAppDef_oaModBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaModBusTermDefObject* self=(PyoaIntraPointerAppDef_oaModBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModBusTermDef p1;
    PyParamoaModBusTermDef p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModBusTermDef_Convert,&p1,
          &PyoaModBusTermDef_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModBusTermDef_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaModBusTermDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaModBusTermDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaModBusTermDef data;
    int convert_status=PyoaIntraPointerAppDef_oaModBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaModBusTermDef_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaModBusTermDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaModBusTermDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaModBusTermDef data;
  int convert_status=PyoaIntraPointerAppDef_oaModBusTermDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaModBusTermDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaModBusTermDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaModBusTermDef_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaModBusTermDef_get,METH_VARARGS,oaIntraPointerAppDef_oaModBusTermDef_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaModBusTermDef_set,METH_VARARGS,oaIntraPointerAppDef_oaModBusTermDef_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaModBusTermDef_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaModBusTermDef_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaModBusTermDef_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaModBusTermDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModBusTermDef_doc[] = 
"Class: oaIntraPointerAppDef_oaModBusTermDef\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaModBusTermDef)\n"
"    Calls: (const oaIntraPointerAppDef_oaModBusTermDef&)\n"
"    Signature: oaIntraPointerAppDef_oaModBusTermDef||cref-oaIntraPointerAppDef_oaModBusTermDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaModBusTermDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaModBusTermDef",
    sizeof(PyoaIntraPointerAppDef_oaModBusTermDefObject),
    0,
    (destructor)oaIntraPointerAppDef_oaModBusTermDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaModBusTermDef_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaModBusTermDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaModBusTermDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaModBusTermDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaModBusTermDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModBusTermDef_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaModBusTermDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaModBusTermDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaModBusTermDef|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaModBusTermDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaModBusTermDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaModBusTermDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaModBusTermDefp result= (oaIntraPointerAppDef_oaModBusTermDef::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaModBusTermDef_FromoaIntraPointerAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModBusTermDefp result= (oaIntraPointerAppDef_oaModBusTermDef::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModBusTermDef_FromoaIntraPointerAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaModBusTermDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModBusTermDef_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaModBusTermDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaModBusTermDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModBusTermDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaModBusTermDef* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModBusTermDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaModBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaModBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaModBusTermDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaModBusTermDefp result= (oaIntraPointerAppDef_oaModBusTermDef::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaModBusTermDef_FromoaIntraPointerAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaModBusTermDefp result= (oaIntraPointerAppDef_oaModBusTermDef::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModBusTermDef_FromoaIntraPointerAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModBusTermDefp result= (oaIntraPointerAppDef_oaModBusTermDef::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModBusTermDef_FromoaIntraPointerAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModBusTermDefp result= (oaIntraPointerAppDef_oaModBusTermDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaModBusTermDef_FromoaIntraPointerAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaModBusTermDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaModBusTermDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaModBusTermDef_static_find,METH_VARARGS,oaIntraPointerAppDef_oaModBusTermDef_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaModBusTermDef_static_get,METH_VARARGS,oaIntraPointerAppDef_oaModBusTermDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaModBusTermDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaModBusTermDef_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaModBusTermDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaModBusTermDef",
           (PyObject*)(&PyoaIntraPointerAppDef_oaModBusTermDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaModBusTermDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaModBusTermDef_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaModBusTermDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaModConnectDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaModConnectDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaModConnectDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaModConnectDefObject* self = (PyoaIntraPointerAppDef_oaModConnectDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaModConnectDef)
    {
        PyParamoaIntraPointerAppDef_oaModConnectDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaModConnectDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaModConnectDef, Choices are:\n"
        "    (oaIntraPointerAppDef_oaModConnectDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaModConnectDef_tp_dealloc(PyoaIntraPointerAppDef_oaModConnectDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaModConnectDef_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaModConnectDef value;
    int convert_status=PyoaIntraPointerAppDef_oaModConnectDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[58];
    sprintf(buffer,"<oaIntraPointerAppDef_oaModConnectDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaModConnectDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaModConnectDef v1;
    PyParamoaIntraPointerAppDef_oaModConnectDef v2;
    int convert_status1=PyoaIntraPointerAppDef_oaModConnectDef_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaModConnectDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaModConnectDef_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaModConnectDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaModConnectDef_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaModConnectDef**) ((PyoaIntraPointerAppDef_oaModConnectDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaModConnectDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaModConnectDef_FromoaIntraPointerAppDef_oaModConnectDef(oaIntraPointerAppDef_oaModConnectDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaModConnectDef* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaModConnectDef_Type.tp_alloc(&PyoaIntraPointerAppDef_oaModConnectDef_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaModConnectDefObject* self = (PyoaIntraPointerAppDef_oaModConnectDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaModConnectDef_FromoaIntraPointerAppDef_oaModConnectDef(oaIntraPointerAppDef_oaModConnectDef* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaModConnectDef_Type.tp_alloc(&PyoaIntraPointerAppDef_oaModConnectDef_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaModConnectDefObject* self = (PyoaIntraPointerAppDef_oaModConnectDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModConnectDef_get_doc[] = 
"Class: oaIntraPointerAppDef_oaModConnectDef, Function: get\n"
"  Paramegers: (oaModConnectDef)\n"
"    Calls: oaModConnectDef* get(const oaModConnectDef* object)\n"
"    Signature: get|ptr-oaModConnectDef|cptr-oaModConnectDef,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaModConnectDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaModConnectDef data;
    int convert_status=PyoaIntraPointerAppDef_oaModConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaModConnectDefObject* self=(PyoaIntraPointerAppDef_oaModConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModConnectDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModConnectDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaModConnectDefp result= (data.DataCall()->get(p1.Data()));
        return PyoaModConnectDef_FromoaModConnectDef(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModConnectDef_set_doc[] = 
"Class: oaIntraPointerAppDef_oaModConnectDef, Function: set\n"
"  Paramegers: (oaModConnectDef,oaModConnectDef)\n"
"    Calls: void set(oaModConnectDef* object,const oaModConnectDef* otherObject)\n"
"    Signature: set|void-void|ptr-oaModConnectDef,cptr-oaModConnectDef,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaModConnectDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaModConnectDef data;
    int convert_status=PyoaIntraPointerAppDef_oaModConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaModConnectDefObject* self=(PyoaIntraPointerAppDef_oaModConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModConnectDef p1;
    PyParamoaModConnectDef p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModConnectDef_Convert,&p1,
          &PyoaModConnectDef_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModConnectDef_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaModConnectDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaModConnectDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaModConnectDef data;
    int convert_status=PyoaIntraPointerAppDef_oaModConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaModConnectDef_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaModConnectDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaModConnectDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaModConnectDef data;
  int convert_status=PyoaIntraPointerAppDef_oaModConnectDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaModConnectDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaModConnectDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaModConnectDef_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaModConnectDef_get,METH_VARARGS,oaIntraPointerAppDef_oaModConnectDef_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaModConnectDef_set,METH_VARARGS,oaIntraPointerAppDef_oaModConnectDef_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaModConnectDef_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaModConnectDef_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaModConnectDef_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaModConnectDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModConnectDef_doc[] = 
"Class: oaIntraPointerAppDef_oaModConnectDef\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaModConnectDef)\n"
"    Calls: (const oaIntraPointerAppDef_oaModConnectDef&)\n"
"    Signature: oaIntraPointerAppDef_oaModConnectDef||cref-oaIntraPointerAppDef_oaModConnectDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaModConnectDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaModConnectDef",
    sizeof(PyoaIntraPointerAppDef_oaModConnectDefObject),
    0,
    (destructor)oaIntraPointerAppDef_oaModConnectDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaModConnectDef_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaModConnectDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaModConnectDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaModConnectDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaModConnectDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModConnectDef_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaModConnectDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaModConnectDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaModConnectDef|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaModConnectDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaModConnectDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaModConnectDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaModConnectDefp result= (oaIntraPointerAppDef_oaModConnectDef::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaModConnectDef_FromoaIntraPointerAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModConnectDefp result= (oaIntraPointerAppDef_oaModConnectDef::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModConnectDef_FromoaIntraPointerAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaModConnectDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModConnectDef_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaModConnectDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaModConnectDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModConnectDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaModConnectDef* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModConnectDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaModConnectDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaModConnectDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaModConnectDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaModConnectDefp result= (oaIntraPointerAppDef_oaModConnectDef::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaModConnectDef_FromoaIntraPointerAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaModConnectDefp result= (oaIntraPointerAppDef_oaModConnectDef::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModConnectDef_FromoaIntraPointerAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModConnectDefp result= (oaIntraPointerAppDef_oaModConnectDef::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModConnectDef_FromoaIntraPointerAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModConnectDefp result= (oaIntraPointerAppDef_oaModConnectDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaModConnectDef_FromoaIntraPointerAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaModConnectDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaModConnectDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaModConnectDef_static_find,METH_VARARGS,oaIntraPointerAppDef_oaModConnectDef_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaModConnectDef_static_get,METH_VARARGS,oaIntraPointerAppDef_oaModConnectDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaModConnectDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaModConnectDef_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaModConnectDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaModConnectDef",
           (PyObject*)(&PyoaIntraPointerAppDef_oaModConnectDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaModConnectDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaModConnectDef_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaModConnectDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaModInst
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaModInst_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaModInst_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaModInstObject* self = (PyoaIntraPointerAppDef_oaModInstObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaModInst)
    {
        PyParamoaIntraPointerAppDef_oaModInst p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaModInst_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaModInst, Choices are:\n"
        "    (oaIntraPointerAppDef_oaModInst)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaModInst_tp_dealloc(PyoaIntraPointerAppDef_oaModInstObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaModInst_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaModInst value;
    int convert_status=PyoaIntraPointerAppDef_oaModInst_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaIntraPointerAppDef_oaModInst::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaModInst_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaModInst v1;
    PyParamoaIntraPointerAppDef_oaModInst v2;
    int convert_status1=PyoaIntraPointerAppDef_oaModInst_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaModInst_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaModInst_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaModInst* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaModInst_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaModInst**) ((PyoaIntraPointerAppDef_oaModInstObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaModInst Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaModInst_FromoaIntraPointerAppDef_oaModInst(oaIntraPointerAppDef_oaModInst** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaModInst* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaModInst_Type.tp_alloc(&PyoaIntraPointerAppDef_oaModInst_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaModInstObject* self = (PyoaIntraPointerAppDef_oaModInstObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaModInst_FromoaIntraPointerAppDef_oaModInst(oaIntraPointerAppDef_oaModInst* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaModInst_Type.tp_alloc(&PyoaIntraPointerAppDef_oaModInst_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaModInstObject* self = (PyoaIntraPointerAppDef_oaModInstObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModInst_get_doc[] = 
"Class: oaIntraPointerAppDef_oaModInst, Function: get\n"
"  Paramegers: (oaModInst)\n"
"    Calls: oaModInst* get(const oaModInst* object)\n"
"    Signature: get|ptr-oaModInst|cptr-oaModInst,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaModInst_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaModInst data;
    int convert_status=PyoaIntraPointerAppDef_oaModInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaModInstObject* self=(PyoaIntraPointerAppDef_oaModInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaModInstp result= (data.DataCall()->get(p1.Data()));
        return PyoaModInst_FromoaModInst(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModInst_set_doc[] = 
"Class: oaIntraPointerAppDef_oaModInst, Function: set\n"
"  Paramegers: (oaModInst,oaModInst)\n"
"    Calls: void set(oaModInst* object,const oaModInst* otherObject)\n"
"    Signature: set|void-void|ptr-oaModInst,cptr-oaModInst,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaModInst_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaModInst data;
    int convert_status=PyoaIntraPointerAppDef_oaModInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaModInstObject* self=(PyoaIntraPointerAppDef_oaModInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInst p1;
    PyParamoaModInst p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModInst_Convert,&p1,
          &PyoaModInst_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModInst_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaModInst, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaModInst_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaModInst data;
    int convert_status=PyoaIntraPointerAppDef_oaModInst_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaModInst_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaModInst, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaModInst_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaModInst data;
  int convert_status=PyoaIntraPointerAppDef_oaModInst_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaModInst p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaModInst_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaModInst_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaModInst_get,METH_VARARGS,oaIntraPointerAppDef_oaModInst_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaModInst_set,METH_VARARGS,oaIntraPointerAppDef_oaModInst_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaModInst_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaModInst_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaModInst_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaModInst_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModInst_doc[] = 
"Class: oaIntraPointerAppDef_oaModInst\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaModInst)\n"
"    Calls: (const oaIntraPointerAppDef_oaModInst&)\n"
"    Signature: oaIntraPointerAppDef_oaModInst||cref-oaIntraPointerAppDef_oaModInst,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaModInst_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaModInst",
    sizeof(PyoaIntraPointerAppDef_oaModInstObject),
    0,
    (destructor)oaIntraPointerAppDef_oaModInst_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaModInst_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaModInst_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaModInst_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaModInst_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaModInst_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModInst_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaModInst, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaModInst* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaModInst|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaModInst* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaModInst|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaModInst_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaModInstp result= (oaIntraPointerAppDef_oaModInst::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaModInst_FromoaIntraPointerAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModInstp result= (oaIntraPointerAppDef_oaModInst::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModInst_FromoaIntraPointerAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaModInst, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModInst_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaModInst, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaModInst* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModInst|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaModInst* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModInst|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaModInst* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaModInst* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaModInst_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaModInstp result= (oaIntraPointerAppDef_oaModInst::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaModInst_FromoaIntraPointerAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaModInstp result= (oaIntraPointerAppDef_oaModInst::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModInst_FromoaIntraPointerAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModInstp result= (oaIntraPointerAppDef_oaModInst::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModInst_FromoaIntraPointerAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModInstp result= (oaIntraPointerAppDef_oaModInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaModInst_FromoaIntraPointerAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaModInst, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaModInst_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaModInst_static_find,METH_VARARGS,oaIntraPointerAppDef_oaModInst_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaModInst_static_get,METH_VARARGS,oaIntraPointerAppDef_oaModInst_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaModInst_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaModInst_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaModInst\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaModInst",
           (PyObject*)(&PyoaIntraPointerAppDef_oaModInst_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaModInst\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaModInst_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaModInst_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaModInstHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaModInstHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaModInstHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaModInstHeaderObject* self = (PyoaIntraPointerAppDef_oaModInstHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaModInstHeader)
    {
        PyParamoaIntraPointerAppDef_oaModInstHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaModInstHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaModInstHeader, Choices are:\n"
        "    (oaIntraPointerAppDef_oaModInstHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaModInstHeader_tp_dealloc(PyoaIntraPointerAppDef_oaModInstHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaModInstHeader_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaModInstHeader value;
    int convert_status=PyoaIntraPointerAppDef_oaModInstHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[58];
    sprintf(buffer,"<oaIntraPointerAppDef_oaModInstHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaModInstHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaModInstHeader v1;
    PyParamoaIntraPointerAppDef_oaModInstHeader v2;
    int convert_status1=PyoaIntraPointerAppDef_oaModInstHeader_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaModInstHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaModInstHeader_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaModInstHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaModInstHeader_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaModInstHeader**) ((PyoaIntraPointerAppDef_oaModInstHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaModInstHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaModInstHeader_FromoaIntraPointerAppDef_oaModInstHeader(oaIntraPointerAppDef_oaModInstHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaModInstHeader* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaModInstHeader_Type.tp_alloc(&PyoaIntraPointerAppDef_oaModInstHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaModInstHeaderObject* self = (PyoaIntraPointerAppDef_oaModInstHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaModInstHeader_FromoaIntraPointerAppDef_oaModInstHeader(oaIntraPointerAppDef_oaModInstHeader* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaModInstHeader_Type.tp_alloc(&PyoaIntraPointerAppDef_oaModInstHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaModInstHeaderObject* self = (PyoaIntraPointerAppDef_oaModInstHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModInstHeader_get_doc[] = 
"Class: oaIntraPointerAppDef_oaModInstHeader, Function: get\n"
"  Paramegers: (oaModInstHeader)\n"
"    Calls: oaModInstHeader* get(const oaModInstHeader* object)\n"
"    Signature: get|ptr-oaModInstHeader|cptr-oaModInstHeader,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaModInstHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaModInstHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaModInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaModInstHeaderObject* self=(PyoaIntraPointerAppDef_oaModInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInstHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModInstHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaModInstHeaderp result= (data.DataCall()->get(p1.Data()));
        return PyoaModInstHeader_FromoaModInstHeader(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModInstHeader_set_doc[] = 
"Class: oaIntraPointerAppDef_oaModInstHeader, Function: set\n"
"  Paramegers: (oaModInstHeader,oaModInstHeader)\n"
"    Calls: void set(oaModInstHeader* object,const oaModInstHeader* otherObject)\n"
"    Signature: set|void-void|ptr-oaModInstHeader,cptr-oaModInstHeader,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaModInstHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaModInstHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaModInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaModInstHeaderObject* self=(PyoaIntraPointerAppDef_oaModInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInstHeader p1;
    PyParamoaModInstHeader p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModInstHeader_Convert,&p1,
          &PyoaModInstHeader_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModInstHeader_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaModInstHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaModInstHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaModInstHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaModInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaModInstHeader_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaModInstHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaModInstHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaModInstHeader data;
  int convert_status=PyoaIntraPointerAppDef_oaModInstHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaModInstHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaModInstHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaModInstHeader_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaModInstHeader_get,METH_VARARGS,oaIntraPointerAppDef_oaModInstHeader_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaModInstHeader_set,METH_VARARGS,oaIntraPointerAppDef_oaModInstHeader_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaModInstHeader_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaModInstHeader_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaModInstHeader_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaModInstHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModInstHeader_doc[] = 
"Class: oaIntraPointerAppDef_oaModInstHeader\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaModInstHeader)\n"
"    Calls: (const oaIntraPointerAppDef_oaModInstHeader&)\n"
"    Signature: oaIntraPointerAppDef_oaModInstHeader||cref-oaIntraPointerAppDef_oaModInstHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaModInstHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaModInstHeader",
    sizeof(PyoaIntraPointerAppDef_oaModInstHeaderObject),
    0,
    (destructor)oaIntraPointerAppDef_oaModInstHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaModInstHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaModInstHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaModInstHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaModInstHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaModInstHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModInstHeader_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaModInstHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaModInstHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaModInstHeader|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaModInstHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaModInstHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaModInstHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaModInstHeaderp result= (oaIntraPointerAppDef_oaModInstHeader::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaModInstHeader_FromoaIntraPointerAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModInstHeaderp result= (oaIntraPointerAppDef_oaModInstHeader::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModInstHeader_FromoaIntraPointerAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaModInstHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModInstHeader_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaModInstHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaModInstHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModInstHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaModInstHeader* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModInstHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaModInstHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaModInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaModInstHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaModInstHeaderp result= (oaIntraPointerAppDef_oaModInstHeader::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaModInstHeader_FromoaIntraPointerAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaModInstHeaderp result= (oaIntraPointerAppDef_oaModInstHeader::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModInstHeader_FromoaIntraPointerAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModInstHeaderp result= (oaIntraPointerAppDef_oaModInstHeader::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModInstHeader_FromoaIntraPointerAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModInstHeaderp result= (oaIntraPointerAppDef_oaModInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaModInstHeader_FromoaIntraPointerAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaModInstHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaModInstHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaModInstHeader_static_find,METH_VARARGS,oaIntraPointerAppDef_oaModInstHeader_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaModInstHeader_static_get,METH_VARARGS,oaIntraPointerAppDef_oaModInstHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaModInstHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaModInstHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaModInstHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaModInstHeader",
           (PyObject*)(&PyoaIntraPointerAppDef_oaModInstHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaModInstHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaModInstHeader_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaModInstHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaModInstTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaModInstTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaModInstTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaModInstTermObject* self = (PyoaIntraPointerAppDef_oaModInstTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaModInstTerm)
    {
        PyParamoaIntraPointerAppDef_oaModInstTerm p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaModInstTerm_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaModInstTerm, Choices are:\n"
        "    (oaIntraPointerAppDef_oaModInstTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaModInstTerm_tp_dealloc(PyoaIntraPointerAppDef_oaModInstTermObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaModInstTerm_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaModInstTerm value;
    int convert_status=PyoaIntraPointerAppDef_oaModInstTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[56];
    sprintf(buffer,"<oaIntraPointerAppDef_oaModInstTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaModInstTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaModInstTerm v1;
    PyParamoaIntraPointerAppDef_oaModInstTerm v2;
    int convert_status1=PyoaIntraPointerAppDef_oaModInstTerm_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaModInstTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaModInstTerm_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaModInstTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaModInstTerm_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaModInstTerm**) ((PyoaIntraPointerAppDef_oaModInstTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaModInstTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaModInstTerm_FromoaIntraPointerAppDef_oaModInstTerm(oaIntraPointerAppDef_oaModInstTerm** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaModInstTerm* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaModInstTerm_Type.tp_alloc(&PyoaIntraPointerAppDef_oaModInstTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaModInstTermObject* self = (PyoaIntraPointerAppDef_oaModInstTermObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaModInstTerm_FromoaIntraPointerAppDef_oaModInstTerm(oaIntraPointerAppDef_oaModInstTerm* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaModInstTerm_Type.tp_alloc(&PyoaIntraPointerAppDef_oaModInstTerm_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaModInstTermObject* self = (PyoaIntraPointerAppDef_oaModInstTermObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModInstTerm_get_doc[] = 
"Class: oaIntraPointerAppDef_oaModInstTerm, Function: get\n"
"  Paramegers: (oaModInstTerm)\n"
"    Calls: oaModInstTerm* get(const oaModInstTerm* object)\n"
"    Signature: get|ptr-oaModInstTerm|cptr-oaModInstTerm,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaModInstTerm_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaModInstTerm data;
    int convert_status=PyoaIntraPointerAppDef_oaModInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaModInstTermObject* self=(PyoaIntraPointerAppDef_oaModInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInstTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModInstTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaModInstTermp result= (data.DataCall()->get(p1.Data()));
        return PyoaModInstTerm_FromoaModInstTerm(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModInstTerm_set_doc[] = 
"Class: oaIntraPointerAppDef_oaModInstTerm, Function: set\n"
"  Paramegers: (oaModInstTerm,oaModInstTerm)\n"
"    Calls: void set(oaModInstTerm* object,const oaModInstTerm* otherObject)\n"
"    Signature: set|void-void|ptr-oaModInstTerm,cptr-oaModInstTerm,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaModInstTerm_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaModInstTerm data;
    int convert_status=PyoaIntraPointerAppDef_oaModInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaModInstTermObject* self=(PyoaIntraPointerAppDef_oaModInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInstTerm p1;
    PyParamoaModInstTerm p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModInstTerm_Convert,&p1,
          &PyoaModInstTerm_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModInstTerm_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaModInstTerm, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaModInstTerm_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaModInstTerm data;
    int convert_status=PyoaIntraPointerAppDef_oaModInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaModInstTerm_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaModInstTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaModInstTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaModInstTerm data;
  int convert_status=PyoaIntraPointerAppDef_oaModInstTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaModInstTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaModInstTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaModInstTerm_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaModInstTerm_get,METH_VARARGS,oaIntraPointerAppDef_oaModInstTerm_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaModInstTerm_set,METH_VARARGS,oaIntraPointerAppDef_oaModInstTerm_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaModInstTerm_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaModInstTerm_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaModInstTerm_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaModInstTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModInstTerm_doc[] = 
"Class: oaIntraPointerAppDef_oaModInstTerm\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaModInstTerm)\n"
"    Calls: (const oaIntraPointerAppDef_oaModInstTerm&)\n"
"    Signature: oaIntraPointerAppDef_oaModInstTerm||cref-oaIntraPointerAppDef_oaModInstTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaModInstTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaModInstTerm",
    sizeof(PyoaIntraPointerAppDef_oaModInstTermObject),
    0,
    (destructor)oaIntraPointerAppDef_oaModInstTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaModInstTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaModInstTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaModInstTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaModInstTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaModInstTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModInstTerm_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaModInstTerm, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaModInstTerm* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaModInstTerm|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaModInstTerm* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaModInstTerm|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaModInstTerm_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaModInstTermp result= (oaIntraPointerAppDef_oaModInstTerm::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaModInstTerm_FromoaIntraPointerAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModInstTermp result= (oaIntraPointerAppDef_oaModInstTerm::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModInstTerm_FromoaIntraPointerAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaModInstTerm, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModInstTerm_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaModInstTerm, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaModInstTerm* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModInstTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaModInstTerm* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModInstTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaModInstTerm* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaModInstTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaModInstTerm_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaModInstTermp result= (oaIntraPointerAppDef_oaModInstTerm::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaModInstTerm_FromoaIntraPointerAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaModInstTermp result= (oaIntraPointerAppDef_oaModInstTerm::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModInstTerm_FromoaIntraPointerAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModInstTermp result= (oaIntraPointerAppDef_oaModInstTerm::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModInstTerm_FromoaIntraPointerAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModInstTermp result= (oaIntraPointerAppDef_oaModInstTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaModInstTerm_FromoaIntraPointerAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaModInstTerm, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaModInstTerm_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaModInstTerm_static_find,METH_VARARGS,oaIntraPointerAppDef_oaModInstTerm_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaModInstTerm_static_get,METH_VARARGS,oaIntraPointerAppDef_oaModInstTerm_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaModInstTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaModInstTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaModInstTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaModInstTerm",
           (PyObject*)(&PyoaIntraPointerAppDef_oaModInstTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaModInstTerm\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaModInstTerm_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaModInstTerm_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaModModuleInstHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaModModuleInstHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaModModuleInstHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaModModuleInstHeaderObject* self = (PyoaIntraPointerAppDef_oaModModuleInstHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaModModuleInstHeader)
    {
        PyParamoaIntraPointerAppDef_oaModModuleInstHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaModModuleInstHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaModModuleInstHeader, Choices are:\n"
        "    (oaIntraPointerAppDef_oaModModuleInstHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaModModuleInstHeader_tp_dealloc(PyoaIntraPointerAppDef_oaModModuleInstHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaModModuleInstHeader_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaModModuleInstHeader value;
    int convert_status=PyoaIntraPointerAppDef_oaModModuleInstHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[64];
    sprintf(buffer,"<oaIntraPointerAppDef_oaModModuleInstHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaModModuleInstHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaModModuleInstHeader v1;
    PyParamoaIntraPointerAppDef_oaModModuleInstHeader v2;
    int convert_status1=PyoaIntraPointerAppDef_oaModModuleInstHeader_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaModModuleInstHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaModModuleInstHeader_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaModModuleInstHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaModModuleInstHeader_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaModModuleInstHeader**) ((PyoaIntraPointerAppDef_oaModModuleInstHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaModModuleInstHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaModModuleInstHeader_FromoaIntraPointerAppDef_oaModModuleInstHeader(oaIntraPointerAppDef_oaModModuleInstHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaModModuleInstHeader* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaModModuleInstHeader_Type.tp_alloc(&PyoaIntraPointerAppDef_oaModModuleInstHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaModModuleInstHeaderObject* self = (PyoaIntraPointerAppDef_oaModModuleInstHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaModModuleInstHeader_FromoaIntraPointerAppDef_oaModModuleInstHeader(oaIntraPointerAppDef_oaModModuleInstHeader* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaModModuleInstHeader_Type.tp_alloc(&PyoaIntraPointerAppDef_oaModModuleInstHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaModModuleInstHeaderObject* self = (PyoaIntraPointerAppDef_oaModModuleInstHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModModuleInstHeader_get_doc[] = 
"Class: oaIntraPointerAppDef_oaModModuleInstHeader, Function: get\n"
"  Paramegers: (oaModModuleInstHeader)\n"
"    Calls: oaModModuleInstHeader* get(const oaModModuleInstHeader* object)\n"
"    Signature: get|ptr-oaModModuleInstHeader|cptr-oaModModuleInstHeader,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaModModuleInstHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaModModuleInstHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaModModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaModModuleInstHeaderObject* self=(PyoaIntraPointerAppDef_oaModModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModModuleInstHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModModuleInstHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaModModuleInstHeaderp result= (data.DataCall()->get(p1.Data()));
        return PyoaModModuleInstHeader_FromoaModModuleInstHeader(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModModuleInstHeader_set_doc[] = 
"Class: oaIntraPointerAppDef_oaModModuleInstHeader, Function: set\n"
"  Paramegers: (oaModModuleInstHeader,oaModModuleInstHeader)\n"
"    Calls: void set(oaModModuleInstHeader* object,const oaModModuleInstHeader* otherObject)\n"
"    Signature: set|void-void|ptr-oaModModuleInstHeader,cptr-oaModModuleInstHeader,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaModModuleInstHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaModModuleInstHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaModModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaModModuleInstHeaderObject* self=(PyoaIntraPointerAppDef_oaModModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModModuleInstHeader p1;
    PyParamoaModModuleInstHeader p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModModuleInstHeader_Convert,&p1,
          &PyoaModModuleInstHeader_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModModuleInstHeader_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaModModuleInstHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaModModuleInstHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaModModuleInstHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaModModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaModModuleInstHeader_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaModModuleInstHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaModModuleInstHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaModModuleInstHeader data;
  int convert_status=PyoaIntraPointerAppDef_oaModModuleInstHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaModModuleInstHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaModModuleInstHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaModModuleInstHeader_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaModModuleInstHeader_get,METH_VARARGS,oaIntraPointerAppDef_oaModModuleInstHeader_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaModModuleInstHeader_set,METH_VARARGS,oaIntraPointerAppDef_oaModModuleInstHeader_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaModModuleInstHeader_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaModModuleInstHeader_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaModModuleInstHeader_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaModModuleInstHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModModuleInstHeader_doc[] = 
"Class: oaIntraPointerAppDef_oaModModuleInstHeader\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaModModuleInstHeader)\n"
"    Calls: (const oaIntraPointerAppDef_oaModModuleInstHeader&)\n"
"    Signature: oaIntraPointerAppDef_oaModModuleInstHeader||cref-oaIntraPointerAppDef_oaModModuleInstHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaModModuleInstHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaModModuleInstHeader",
    sizeof(PyoaIntraPointerAppDef_oaModModuleInstHeaderObject),
    0,
    (destructor)oaIntraPointerAppDef_oaModModuleInstHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaModModuleInstHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaModModuleInstHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaModModuleInstHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaModModuleInstHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaModModuleInstHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModModuleInstHeader_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaModModuleInstHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaModModuleInstHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaModModuleInstHeader|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaModModuleInstHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaModModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaModModuleInstHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaModModuleInstHeaderp result= (oaIntraPointerAppDef_oaModModuleInstHeader::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaModModuleInstHeader_FromoaIntraPointerAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModModuleInstHeaderp result= (oaIntraPointerAppDef_oaModModuleInstHeader::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModModuleInstHeader_FromoaIntraPointerAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaModModuleInstHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModModuleInstHeader_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaModModuleInstHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaModModuleInstHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModModuleInstHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaModModuleInstHeader* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModModuleInstHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaModModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaModModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaModModuleInstHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaModModuleInstHeaderp result= (oaIntraPointerAppDef_oaModModuleInstHeader::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaModModuleInstHeader_FromoaIntraPointerAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaModModuleInstHeaderp result= (oaIntraPointerAppDef_oaModModuleInstHeader::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModModuleInstHeader_FromoaIntraPointerAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModModuleInstHeaderp result= (oaIntraPointerAppDef_oaModModuleInstHeader::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModModuleInstHeader_FromoaIntraPointerAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModModuleInstHeaderp result= (oaIntraPointerAppDef_oaModModuleInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaModModuleInstHeader_FromoaIntraPointerAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaModModuleInstHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaModModuleInstHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaModModuleInstHeader_static_find,METH_VARARGS,oaIntraPointerAppDef_oaModModuleInstHeader_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaModModuleInstHeader_static_get,METH_VARARGS,oaIntraPointerAppDef_oaModModuleInstHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaModModuleInstHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaModModuleInstHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaModModuleInstHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaModModuleInstHeader",
           (PyObject*)(&PyoaIntraPointerAppDef_oaModModuleInstHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaModModuleInstHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaModModuleInstHeader_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaModModuleInstHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaModNet
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaModNet_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaModNet_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaModNetObject* self = (PyoaIntraPointerAppDef_oaModNetObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaModNet)
    {
        PyParamoaIntraPointerAppDef_oaModNet p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaModNet_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaModNet, Choices are:\n"
        "    (oaIntraPointerAppDef_oaModNet)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaModNet_tp_dealloc(PyoaIntraPointerAppDef_oaModNetObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaModNet_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaModNet value;
    int convert_status=PyoaIntraPointerAppDef_oaModNet_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[51];
    sprintf(buffer,"<oaIntraPointerAppDef_oaModNet::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaModNet_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaModNet v1;
    PyParamoaIntraPointerAppDef_oaModNet v2;
    int convert_status1=PyoaIntraPointerAppDef_oaModNet_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaModNet_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaModNet_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaModNet* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaModNet_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaModNet**) ((PyoaIntraPointerAppDef_oaModNetObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaModNet Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaModNet_FromoaIntraPointerAppDef_oaModNet(oaIntraPointerAppDef_oaModNet** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaModNet* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaModNet_Type.tp_alloc(&PyoaIntraPointerAppDef_oaModNet_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaModNetObject* self = (PyoaIntraPointerAppDef_oaModNetObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaModNet_FromoaIntraPointerAppDef_oaModNet(oaIntraPointerAppDef_oaModNet* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaModNet_Type.tp_alloc(&PyoaIntraPointerAppDef_oaModNet_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaModNetObject* self = (PyoaIntraPointerAppDef_oaModNetObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModNet_get_doc[] = 
"Class: oaIntraPointerAppDef_oaModNet, Function: get\n"
"  Paramegers: (oaModNet)\n"
"    Calls: oaModNet* get(const oaModNet* object)\n"
"    Signature: get|ptr-oaModNet|cptr-oaModNet,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaModNet_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaModNet data;
    int convert_status=PyoaIntraPointerAppDef_oaModNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaModNetObject* self=(PyoaIntraPointerAppDef_oaModNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModNet p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModNet_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaModNetp result= (data.DataCall()->get(p1.Data()));
        return PyoaModNet_FromoaModNet(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModNet_set_doc[] = 
"Class: oaIntraPointerAppDef_oaModNet, Function: set\n"
"  Paramegers: (oaModNet,oaModNet)\n"
"    Calls: void set(oaModNet* object,const oaModNet* otherObject)\n"
"    Signature: set|void-void|ptr-oaModNet,cptr-oaModNet,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaModNet_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaModNet data;
    int convert_status=PyoaIntraPointerAppDef_oaModNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaModNetObject* self=(PyoaIntraPointerAppDef_oaModNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModNet p1;
    PyParamoaModNet p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModNet_Convert,&p1,
          &PyoaModNet_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModNet_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaModNet, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaModNet_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaModNet data;
    int convert_status=PyoaIntraPointerAppDef_oaModNet_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaModNet_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaModNet, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaModNet_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaModNet data;
  int convert_status=PyoaIntraPointerAppDef_oaModNet_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaModNet p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaModNet_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaModNet_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaModNet_get,METH_VARARGS,oaIntraPointerAppDef_oaModNet_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaModNet_set,METH_VARARGS,oaIntraPointerAppDef_oaModNet_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaModNet_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaModNet_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaModNet_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaModNet_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModNet_doc[] = 
"Class: oaIntraPointerAppDef_oaModNet\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaModNet)\n"
"    Calls: (const oaIntraPointerAppDef_oaModNet&)\n"
"    Signature: oaIntraPointerAppDef_oaModNet||cref-oaIntraPointerAppDef_oaModNet,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaModNet_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaModNet",
    sizeof(PyoaIntraPointerAppDef_oaModNetObject),
    0,
    (destructor)oaIntraPointerAppDef_oaModNet_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaModNet_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaModNet_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaModNet_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaModNet_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaModNet_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModNet_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaModNet, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaModNet* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaModNet|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaModNet* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaModNet|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaModNet_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaModNetp result= (oaIntraPointerAppDef_oaModNet::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaModNet_FromoaIntraPointerAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModNetp result= (oaIntraPointerAppDef_oaModNet::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModNet_FromoaIntraPointerAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaModNet, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModNet_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaModNet, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaModNet* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModNet|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaModNet* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModNet|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaModNet* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModNet|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaModNet* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModNet|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaModNet_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaModNetp result= (oaIntraPointerAppDef_oaModNet::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaModNet_FromoaIntraPointerAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaModNetp result= (oaIntraPointerAppDef_oaModNet::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModNet_FromoaIntraPointerAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModNetp result= (oaIntraPointerAppDef_oaModNet::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModNet_FromoaIntraPointerAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModNetp result= (oaIntraPointerAppDef_oaModNet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaModNet_FromoaIntraPointerAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaModNet, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaModNet_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaModNet_static_find,METH_VARARGS,oaIntraPointerAppDef_oaModNet_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaModNet_static_get,METH_VARARGS,oaIntraPointerAppDef_oaModNet_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaModNet_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaModNet_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaModNet\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaModNet",
           (PyObject*)(&PyoaIntraPointerAppDef_oaModNet_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaModNet\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaModNet_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaModNet_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaModTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaModTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaModTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaModTermObject* self = (PyoaIntraPointerAppDef_oaModTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaModTerm)
    {
        PyParamoaIntraPointerAppDef_oaModTerm p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaModTerm_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaModTerm, Choices are:\n"
        "    (oaIntraPointerAppDef_oaModTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaModTerm_tp_dealloc(PyoaIntraPointerAppDef_oaModTermObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaModTerm_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaModTerm value;
    int convert_status=PyoaIntraPointerAppDef_oaModTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaIntraPointerAppDef_oaModTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaModTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaModTerm v1;
    PyParamoaIntraPointerAppDef_oaModTerm v2;
    int convert_status1=PyoaIntraPointerAppDef_oaModTerm_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaModTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaModTerm_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaModTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaModTerm_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaModTerm**) ((PyoaIntraPointerAppDef_oaModTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaModTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaModTerm_FromoaIntraPointerAppDef_oaModTerm(oaIntraPointerAppDef_oaModTerm** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaModTerm* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaModTerm_Type.tp_alloc(&PyoaIntraPointerAppDef_oaModTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaModTermObject* self = (PyoaIntraPointerAppDef_oaModTermObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaModTerm_FromoaIntraPointerAppDef_oaModTerm(oaIntraPointerAppDef_oaModTerm* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaModTerm_Type.tp_alloc(&PyoaIntraPointerAppDef_oaModTerm_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaModTermObject* self = (PyoaIntraPointerAppDef_oaModTermObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModTerm_get_doc[] = 
"Class: oaIntraPointerAppDef_oaModTerm, Function: get\n"
"  Paramegers: (oaModTerm)\n"
"    Calls: oaModTerm* get(const oaModTerm* object)\n"
"    Signature: get|ptr-oaModTerm|cptr-oaModTerm,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaModTerm_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaModTerm data;
    int convert_status=PyoaIntraPointerAppDef_oaModTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaModTermObject* self=(PyoaIntraPointerAppDef_oaModTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaModTermp result= (data.DataCall()->get(p1.Data()));
        return PyoaModTerm_FromoaModTerm(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModTerm_set_doc[] = 
"Class: oaIntraPointerAppDef_oaModTerm, Function: set\n"
"  Paramegers: (oaModTerm,oaModTerm)\n"
"    Calls: void set(oaModTerm* object,const oaModTerm* otherObject)\n"
"    Signature: set|void-void|ptr-oaModTerm,cptr-oaModTerm,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaModTerm_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaModTerm data;
    int convert_status=PyoaIntraPointerAppDef_oaModTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaModTermObject* self=(PyoaIntraPointerAppDef_oaModTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModTerm p1;
    PyParamoaModTerm p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModTerm_Convert,&p1,
          &PyoaModTerm_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModTerm_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaModTerm, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaModTerm_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaModTerm data;
    int convert_status=PyoaIntraPointerAppDef_oaModTerm_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaModTerm_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaModTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaModTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaModTerm data;
  int convert_status=PyoaIntraPointerAppDef_oaModTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaModTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaModTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaModTerm_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaModTerm_get,METH_VARARGS,oaIntraPointerAppDef_oaModTerm_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaModTerm_set,METH_VARARGS,oaIntraPointerAppDef_oaModTerm_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaModTerm_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaModTerm_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaModTerm_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaModTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModTerm_doc[] = 
"Class: oaIntraPointerAppDef_oaModTerm\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaModTerm)\n"
"    Calls: (const oaIntraPointerAppDef_oaModTerm&)\n"
"    Signature: oaIntraPointerAppDef_oaModTerm||cref-oaIntraPointerAppDef_oaModTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaModTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaModTerm",
    sizeof(PyoaIntraPointerAppDef_oaModTermObject),
    0,
    (destructor)oaIntraPointerAppDef_oaModTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaModTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaModTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaModTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaModTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaModTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModTerm_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaModTerm, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaModTerm* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaModTerm|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaModTerm* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaModTerm|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaModTerm_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaModTermp result= (oaIntraPointerAppDef_oaModTerm::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaModTerm_FromoaIntraPointerAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModTermp result= (oaIntraPointerAppDef_oaModTerm::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModTerm_FromoaIntraPointerAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaModTerm, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModTerm_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaModTerm, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaModTerm* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaModTerm* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaModTerm* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaModTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaModTerm_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaModTermp result= (oaIntraPointerAppDef_oaModTerm::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaModTerm_FromoaIntraPointerAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaModTermp result= (oaIntraPointerAppDef_oaModTerm::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModTerm_FromoaIntraPointerAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModTermp result= (oaIntraPointerAppDef_oaModTerm::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModTerm_FromoaIntraPointerAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModTermp result= (oaIntraPointerAppDef_oaModTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaModTerm_FromoaIntraPointerAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaModTerm, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaModTerm_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaModTerm_static_find,METH_VARARGS,oaIntraPointerAppDef_oaModTerm_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaModTerm_static_get,METH_VARARGS,oaIntraPointerAppDef_oaModTerm_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaModTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaModTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaModTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaModTerm",
           (PyObject*)(&PyoaIntraPointerAppDef_oaModTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaModTerm\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaModTerm_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaModTerm_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaModVectorInstDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaModVectorInstDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaModVectorInstDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaModVectorInstDefObject* self = (PyoaIntraPointerAppDef_oaModVectorInstDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaModVectorInstDef)
    {
        PyParamoaIntraPointerAppDef_oaModVectorInstDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaModVectorInstDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaModVectorInstDef, Choices are:\n"
        "    (oaIntraPointerAppDef_oaModVectorInstDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaModVectorInstDef_tp_dealloc(PyoaIntraPointerAppDef_oaModVectorInstDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaModVectorInstDef_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaModVectorInstDef value;
    int convert_status=PyoaIntraPointerAppDef_oaModVectorInstDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[61];
    sprintf(buffer,"<oaIntraPointerAppDef_oaModVectorInstDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaModVectorInstDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaModVectorInstDef v1;
    PyParamoaIntraPointerAppDef_oaModVectorInstDef v2;
    int convert_status1=PyoaIntraPointerAppDef_oaModVectorInstDef_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaModVectorInstDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaModVectorInstDef_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaModVectorInstDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaModVectorInstDef_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaModVectorInstDef**) ((PyoaIntraPointerAppDef_oaModVectorInstDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaModVectorInstDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaModVectorInstDef_FromoaIntraPointerAppDef_oaModVectorInstDef(oaIntraPointerAppDef_oaModVectorInstDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaModVectorInstDef* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaModVectorInstDef_Type.tp_alloc(&PyoaIntraPointerAppDef_oaModVectorInstDef_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaModVectorInstDefObject* self = (PyoaIntraPointerAppDef_oaModVectorInstDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaModVectorInstDef_FromoaIntraPointerAppDef_oaModVectorInstDef(oaIntraPointerAppDef_oaModVectorInstDef* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaModVectorInstDef_Type.tp_alloc(&PyoaIntraPointerAppDef_oaModVectorInstDef_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaModVectorInstDefObject* self = (PyoaIntraPointerAppDef_oaModVectorInstDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModVectorInstDef_get_doc[] = 
"Class: oaIntraPointerAppDef_oaModVectorInstDef, Function: get\n"
"  Paramegers: (oaModVectorInstDef)\n"
"    Calls: oaModVectorInstDef* get(const oaModVectorInstDef* object)\n"
"    Signature: get|ptr-oaModVectorInstDef|cptr-oaModVectorInstDef,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaModVectorInstDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaModVectorInstDef data;
    int convert_status=PyoaIntraPointerAppDef_oaModVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaModVectorInstDefObject* self=(PyoaIntraPointerAppDef_oaModVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModVectorInstDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModVectorInstDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaModVectorInstDefp result= (data.DataCall()->get(p1.Data()));
        return PyoaModVectorInstDef_FromoaModVectorInstDef(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModVectorInstDef_set_doc[] = 
"Class: oaIntraPointerAppDef_oaModVectorInstDef, Function: set\n"
"  Paramegers: (oaModVectorInstDef,oaModVectorInstDef)\n"
"    Calls: void set(oaModVectorInstDef* object,const oaModVectorInstDef* otherObject)\n"
"    Signature: set|void-void|ptr-oaModVectorInstDef,cptr-oaModVectorInstDef,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaModVectorInstDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaModVectorInstDef data;
    int convert_status=PyoaIntraPointerAppDef_oaModVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaModVectorInstDefObject* self=(PyoaIntraPointerAppDef_oaModVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModVectorInstDef p1;
    PyParamoaModVectorInstDef p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModVectorInstDef_Convert,&p1,
          &PyoaModVectorInstDef_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModVectorInstDef_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaModVectorInstDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaModVectorInstDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaModVectorInstDef data;
    int convert_status=PyoaIntraPointerAppDef_oaModVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaModVectorInstDef_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaModVectorInstDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaModVectorInstDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaModVectorInstDef data;
  int convert_status=PyoaIntraPointerAppDef_oaModVectorInstDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaModVectorInstDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaModVectorInstDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaModVectorInstDef_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaModVectorInstDef_get,METH_VARARGS,oaIntraPointerAppDef_oaModVectorInstDef_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaModVectorInstDef_set,METH_VARARGS,oaIntraPointerAppDef_oaModVectorInstDef_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaModVectorInstDef_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaModVectorInstDef_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaModVectorInstDef_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaModVectorInstDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModVectorInstDef_doc[] = 
"Class: oaIntraPointerAppDef_oaModVectorInstDef\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaModVectorInstDef)\n"
"    Calls: (const oaIntraPointerAppDef_oaModVectorInstDef&)\n"
"    Signature: oaIntraPointerAppDef_oaModVectorInstDef||cref-oaIntraPointerAppDef_oaModVectorInstDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaModVectorInstDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaModVectorInstDef",
    sizeof(PyoaIntraPointerAppDef_oaModVectorInstDefObject),
    0,
    (destructor)oaIntraPointerAppDef_oaModVectorInstDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaModVectorInstDef_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaModVectorInstDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaModVectorInstDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaModVectorInstDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaModVectorInstDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModVectorInstDef_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaModVectorInstDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaModVectorInstDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaModVectorInstDef|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaModVectorInstDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaModVectorInstDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaModVectorInstDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaModVectorInstDefp result= (oaIntraPointerAppDef_oaModVectorInstDef::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaModVectorInstDef_FromoaIntraPointerAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModVectorInstDefp result= (oaIntraPointerAppDef_oaModVectorInstDef::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModVectorInstDef_FromoaIntraPointerAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaModVectorInstDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModVectorInstDef_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaModVectorInstDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaModVectorInstDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModVectorInstDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaModVectorInstDef* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModVectorInstDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaModVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaModVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaModVectorInstDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaModVectorInstDefp result= (oaIntraPointerAppDef_oaModVectorInstDef::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaModVectorInstDef_FromoaIntraPointerAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaModVectorInstDefp result= (oaIntraPointerAppDef_oaModVectorInstDef::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModVectorInstDef_FromoaIntraPointerAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModVectorInstDefp result= (oaIntraPointerAppDef_oaModVectorInstDef::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModVectorInstDef_FromoaIntraPointerAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModVectorInstDefp result= (oaIntraPointerAppDef_oaModVectorInstDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaModVectorInstDef_FromoaIntraPointerAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaModVectorInstDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaModVectorInstDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaModVectorInstDef_static_find,METH_VARARGS,oaIntraPointerAppDef_oaModVectorInstDef_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaModVectorInstDef_static_get,METH_VARARGS,oaIntraPointerAppDef_oaModVectorInstDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaModVectorInstDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaModVectorInstDef_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaModVectorInstDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaModVectorInstDef",
           (PyObject*)(&PyoaIntraPointerAppDef_oaModVectorInstDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaModVectorInstDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaModVectorInstDef_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaModVectorInstDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaModule
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaModule_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaModule_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaModuleObject* self = (PyoaIntraPointerAppDef_oaModuleObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaModule)
    {
        PyParamoaIntraPointerAppDef_oaModule p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaModule_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaModule, Choices are:\n"
        "    (oaIntraPointerAppDef_oaModule)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaModule_tp_dealloc(PyoaIntraPointerAppDef_oaModuleObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaModule_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaModule value;
    int convert_status=PyoaIntraPointerAppDef_oaModule_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[51];
    sprintf(buffer,"<oaIntraPointerAppDef_oaModule::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaModule_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaModule v1;
    PyParamoaIntraPointerAppDef_oaModule v2;
    int convert_status1=PyoaIntraPointerAppDef_oaModule_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaModule_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaModule_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaModule* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaModule_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaModule**) ((PyoaIntraPointerAppDef_oaModuleObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaModule Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaModule_FromoaIntraPointerAppDef_oaModule(oaIntraPointerAppDef_oaModule** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaModule* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaModule_Type.tp_alloc(&PyoaIntraPointerAppDef_oaModule_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaModuleObject* self = (PyoaIntraPointerAppDef_oaModuleObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaModule_FromoaIntraPointerAppDef_oaModule(oaIntraPointerAppDef_oaModule* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaModule_Type.tp_alloc(&PyoaIntraPointerAppDef_oaModule_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaModuleObject* self = (PyoaIntraPointerAppDef_oaModuleObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModule_get_doc[] = 
"Class: oaIntraPointerAppDef_oaModule, Function: get\n"
"  Paramegers: (oaModule)\n"
"    Calls: oaModule* get(const oaModule* object)\n"
"    Signature: get|ptr-oaModule|cptr-oaModule,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaModule_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaModule data;
    int convert_status=PyoaIntraPointerAppDef_oaModule_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaModuleObject* self=(PyoaIntraPointerAppDef_oaModuleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModule p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModule_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaModulep result= (data.DataCall()->get(p1.Data()));
        return PyoaModule_FromoaModule(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModule_set_doc[] = 
"Class: oaIntraPointerAppDef_oaModule, Function: set\n"
"  Paramegers: (oaModule,oaModule)\n"
"    Calls: void set(oaModule* object,const oaModule* otherObject)\n"
"    Signature: set|void-void|ptr-oaModule,cptr-oaModule,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaModule_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaModule data;
    int convert_status=PyoaIntraPointerAppDef_oaModule_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaModuleObject* self=(PyoaIntraPointerAppDef_oaModuleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModule p1;
    PyParamoaModule p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModule_Convert,&p1,
          &PyoaModule_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModule_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaModule, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaModule_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaModule data;
    int convert_status=PyoaIntraPointerAppDef_oaModule_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaModule_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaModule, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaModule_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaModule data;
  int convert_status=PyoaIntraPointerAppDef_oaModule_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaModule p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaModule_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaModule_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaModule_get,METH_VARARGS,oaIntraPointerAppDef_oaModule_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaModule_set,METH_VARARGS,oaIntraPointerAppDef_oaModule_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaModule_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaModule_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaModule_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaModule_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModule_doc[] = 
"Class: oaIntraPointerAppDef_oaModule\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaModule)\n"
"    Calls: (const oaIntraPointerAppDef_oaModule&)\n"
"    Signature: oaIntraPointerAppDef_oaModule||cref-oaIntraPointerAppDef_oaModule,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaModule_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaModule",
    sizeof(PyoaIntraPointerAppDef_oaModuleObject),
    0,
    (destructor)oaIntraPointerAppDef_oaModule_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaModule_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaModule_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaModule_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaModule_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaModule_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModule_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaModule, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaModule* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaModule|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaModule* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaModule|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaModule_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaModulep result= (oaIntraPointerAppDef_oaModule::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaModule_FromoaIntraPointerAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModulep result= (oaIntraPointerAppDef_oaModule::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModule_FromoaIntraPointerAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaModule, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaModule_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaModule, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaModule* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModule|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaModule* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModule|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaModule* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModule|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaModule* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaModule|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaModule_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaModulep result= (oaIntraPointerAppDef_oaModule::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaModule_FromoaIntraPointerAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaModulep result= (oaIntraPointerAppDef_oaModule::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModule_FromoaIntraPointerAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModulep result= (oaIntraPointerAppDef_oaModule::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaModule_FromoaIntraPointerAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaModulep result= (oaIntraPointerAppDef_oaModule::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaModule_FromoaIntraPointerAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaModule, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaModule_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaModule_static_find,METH_VARARGS,oaIntraPointerAppDef_oaModule_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaModule_static_get,METH_VARARGS,oaIntraPointerAppDef_oaModule_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaModule_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaModule_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaModule\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaModule",
           (PyObject*)(&PyoaIntraPointerAppDef_oaModule_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaModule\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaModule_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaModule_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaNet
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaNet_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaNet_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaNetObject* self = (PyoaIntraPointerAppDef_oaNetObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaNet)
    {
        PyParamoaIntraPointerAppDef_oaNet p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaNet_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaNet, Choices are:\n"
        "    (oaIntraPointerAppDef_oaNet)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaNet_tp_dealloc(PyoaIntraPointerAppDef_oaNetObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaNet_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaNet value;
    int convert_status=PyoaIntraPointerAppDef_oaNet_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[48];
    sprintf(buffer,"<oaIntraPointerAppDef_oaNet::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaNet_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaNet v1;
    PyParamoaIntraPointerAppDef_oaNet v2;
    int convert_status1=PyoaIntraPointerAppDef_oaNet_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaNet_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaNet_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaNet* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaNet_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaNet**) ((PyoaIntraPointerAppDef_oaNetObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaNet Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaNet_FromoaIntraPointerAppDef_oaNet(oaIntraPointerAppDef_oaNet** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaNet* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaNet_Type.tp_alloc(&PyoaIntraPointerAppDef_oaNet_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaNetObject* self = (PyoaIntraPointerAppDef_oaNetObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaNet_FromoaIntraPointerAppDef_oaNet(oaIntraPointerAppDef_oaNet* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaNet_Type.tp_alloc(&PyoaIntraPointerAppDef_oaNet_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaNetObject* self = (PyoaIntraPointerAppDef_oaNetObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaNet_get_doc[] = 
"Class: oaIntraPointerAppDef_oaNet, Function: get\n"
"  Paramegers: (oaNet)\n"
"    Calls: oaNet* get(const oaNet* object)\n"
"    Signature: get|ptr-oaNet|cptr-oaNet,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaNet_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaNet data;
    int convert_status=PyoaIntraPointerAppDef_oaNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaNetObject* self=(PyoaIntraPointerAppDef_oaNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaNet p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaNet_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaNetp result= (data.DataCall()->get(p1.Data()));
        return PyoaNet_FromoaNet(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaNet_set_doc[] = 
"Class: oaIntraPointerAppDef_oaNet, Function: set\n"
"  Paramegers: (oaNet,oaNet)\n"
"    Calls: void set(oaNet* object,const oaNet* otherObject)\n"
"    Signature: set|void-void|ptr-oaNet,cptr-oaNet,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaNet_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaNet data;
    int convert_status=PyoaIntraPointerAppDef_oaNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaNetObject* self=(PyoaIntraPointerAppDef_oaNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaNet p1;
    PyParamoaNet p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaNet_Convert,&p1,
          &PyoaNet_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaNet_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaNet, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaNet_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaNet data;
    int convert_status=PyoaIntraPointerAppDef_oaNet_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaNet_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaNet, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaNet_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaNet data;
  int convert_status=PyoaIntraPointerAppDef_oaNet_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaNet p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaNet_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaNet_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaNet_get,METH_VARARGS,oaIntraPointerAppDef_oaNet_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaNet_set,METH_VARARGS,oaIntraPointerAppDef_oaNet_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaNet_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaNet_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaNet_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaNet_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaNet_doc[] = 
"Class: oaIntraPointerAppDef_oaNet\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaNet)\n"
"    Calls: (const oaIntraPointerAppDef_oaNet&)\n"
"    Signature: oaIntraPointerAppDef_oaNet||cref-oaIntraPointerAppDef_oaNet,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaNet_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaNet",
    sizeof(PyoaIntraPointerAppDef_oaNetObject),
    0,
    (destructor)oaIntraPointerAppDef_oaNet_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaNet_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaNet_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaNet_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaNet_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaNet_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaNet_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaNet, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaNet* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaNet|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaNet* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaNet|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaNet_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaNetp result= (oaIntraPointerAppDef_oaNet::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaNet_FromoaIntraPointerAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaNetp result= (oaIntraPointerAppDef_oaNet::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaNet_FromoaIntraPointerAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaNet, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaNet_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaNet, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaNet* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaNet|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaNet* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaNet|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaNet* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaNet|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaNet* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaNet|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaNet_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaNetp result= (oaIntraPointerAppDef_oaNet::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaNet_FromoaIntraPointerAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaNetp result= (oaIntraPointerAppDef_oaNet::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaNet_FromoaIntraPointerAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaNetp result= (oaIntraPointerAppDef_oaNet::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaNet_FromoaIntraPointerAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaNetp result= (oaIntraPointerAppDef_oaNet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaNet_FromoaIntraPointerAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaNet, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaNet_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaNet_static_find,METH_VARARGS,oaIntraPointerAppDef_oaNet_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaNet_static_get,METH_VARARGS,oaIntraPointerAppDef_oaNet_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaNet_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaNet_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaNet\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaNet",
           (PyObject*)(&PyoaIntraPointerAppDef_oaNet_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaNet\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaNet_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaNet_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaNode
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaNode_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaNode_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaNodeObject* self = (PyoaIntraPointerAppDef_oaNodeObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaNode)
    {
        PyParamoaIntraPointerAppDef_oaNode p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaNode_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaNode, Choices are:\n"
        "    (oaIntraPointerAppDef_oaNode)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaNode_tp_dealloc(PyoaIntraPointerAppDef_oaNodeObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaNode_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaNode value;
    int convert_status=PyoaIntraPointerAppDef_oaNode_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[49];
    sprintf(buffer,"<oaIntraPointerAppDef_oaNode::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaNode_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaNode v1;
    PyParamoaIntraPointerAppDef_oaNode v2;
    int convert_status1=PyoaIntraPointerAppDef_oaNode_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaNode_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaNode_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaNode* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaNode_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaNode**) ((PyoaIntraPointerAppDef_oaNodeObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaNode Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaNode_FromoaIntraPointerAppDef_oaNode(oaIntraPointerAppDef_oaNode** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaNode* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaNode_Type.tp_alloc(&PyoaIntraPointerAppDef_oaNode_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaNodeObject* self = (PyoaIntraPointerAppDef_oaNodeObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaNode_FromoaIntraPointerAppDef_oaNode(oaIntraPointerAppDef_oaNode* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaNode_Type.tp_alloc(&PyoaIntraPointerAppDef_oaNode_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaNodeObject* self = (PyoaIntraPointerAppDef_oaNodeObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaNode_get_doc[] = 
"Class: oaIntraPointerAppDef_oaNode, Function: get\n"
"  Paramegers: (oaNode)\n"
"    Calls: oaNode* get(const oaNode* object)\n"
"    Signature: get|ptr-oaNode|cptr-oaNode,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaNode_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaNode data;
    int convert_status=PyoaIntraPointerAppDef_oaNode_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaNodeObject* self=(PyoaIntraPointerAppDef_oaNodeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaNode p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaNode_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaNodep result= (data.DataCall()->get(p1.Data()));
        return PyoaNode_FromoaNode(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaNode_set_doc[] = 
"Class: oaIntraPointerAppDef_oaNode, Function: set\n"
"  Paramegers: (oaNode,oaNode)\n"
"    Calls: void set(oaNode* object,const oaNode* otherObject)\n"
"    Signature: set|void-void|ptr-oaNode,cptr-oaNode,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaNode_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaNode data;
    int convert_status=PyoaIntraPointerAppDef_oaNode_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaNodeObject* self=(PyoaIntraPointerAppDef_oaNodeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaNode p1;
    PyParamoaNode p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaNode_Convert,&p1,
          &PyoaNode_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaNode_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaNode, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaNode_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaNode data;
    int convert_status=PyoaIntraPointerAppDef_oaNode_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaNode_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaNode, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaNode_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaNode data;
  int convert_status=PyoaIntraPointerAppDef_oaNode_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaNode p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaNode_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaNode_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaNode_get,METH_VARARGS,oaIntraPointerAppDef_oaNode_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaNode_set,METH_VARARGS,oaIntraPointerAppDef_oaNode_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaNode_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaNode_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaNode_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaNode_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaNode_doc[] = 
"Class: oaIntraPointerAppDef_oaNode\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaNode)\n"
"    Calls: (const oaIntraPointerAppDef_oaNode&)\n"
"    Signature: oaIntraPointerAppDef_oaNode||cref-oaIntraPointerAppDef_oaNode,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaNode_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaNode",
    sizeof(PyoaIntraPointerAppDef_oaNodeObject),
    0,
    (destructor)oaIntraPointerAppDef_oaNode_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaNode_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaNode_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaNode_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaNode_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaNode_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaNode_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaNode, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaNode* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaNode|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaNode* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaNode|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaNode_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaNodep result= (oaIntraPointerAppDef_oaNode::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaNode_FromoaIntraPointerAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaNodep result= (oaIntraPointerAppDef_oaNode::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaNode_FromoaIntraPointerAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaNode, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaNode_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaNode, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaNode* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaNode|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaNode* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaNode|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaNode* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaNode|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaNode* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaNode|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaNode_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaNodep result= (oaIntraPointerAppDef_oaNode::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaNode_FromoaIntraPointerAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaNodep result= (oaIntraPointerAppDef_oaNode::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaNode_FromoaIntraPointerAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaNodep result= (oaIntraPointerAppDef_oaNode::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaNode_FromoaIntraPointerAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaNodep result= (oaIntraPointerAppDef_oaNode::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaNode_FromoaIntraPointerAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaNode, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaNode_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaNode_static_find,METH_VARARGS,oaIntraPointerAppDef_oaNode_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaNode_static_get,METH_VARARGS,oaIntraPointerAppDef_oaNode_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaNode_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaNode_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaNode\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaNode",
           (PyObject*)(&PyoaIntraPointerAppDef_oaNode_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaNode\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaNode_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaNode_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaOccAssignment
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaOccAssignment_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaOccAssignment_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaOccAssignmentObject* self = (PyoaIntraPointerAppDef_oaOccAssignmentObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaOccAssignment)
    {
        PyParamoaIntraPointerAppDef_oaOccAssignment p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaOccAssignment_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaOccAssignment, Choices are:\n"
        "    (oaIntraPointerAppDef_oaOccAssignment)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaOccAssignment_tp_dealloc(PyoaIntraPointerAppDef_oaOccAssignmentObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaOccAssignment_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaOccAssignment value;
    int convert_status=PyoaIntraPointerAppDef_oaOccAssignment_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[58];
    sprintf(buffer,"<oaIntraPointerAppDef_oaOccAssignment::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaOccAssignment_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaOccAssignment v1;
    PyParamoaIntraPointerAppDef_oaOccAssignment v2;
    int convert_status1=PyoaIntraPointerAppDef_oaOccAssignment_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaOccAssignment_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaOccAssignment_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaOccAssignment* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaOccAssignment_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaOccAssignment**) ((PyoaIntraPointerAppDef_oaOccAssignmentObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaOccAssignment Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaOccAssignment_FromoaIntraPointerAppDef_oaOccAssignment(oaIntraPointerAppDef_oaOccAssignment** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaOccAssignment* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaOccAssignment_Type.tp_alloc(&PyoaIntraPointerAppDef_oaOccAssignment_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaOccAssignmentObject* self = (PyoaIntraPointerAppDef_oaOccAssignmentObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaOccAssignment_FromoaIntraPointerAppDef_oaOccAssignment(oaIntraPointerAppDef_oaOccAssignment* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaOccAssignment_Type.tp_alloc(&PyoaIntraPointerAppDef_oaOccAssignment_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaOccAssignmentObject* self = (PyoaIntraPointerAppDef_oaOccAssignmentObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccAssignment_get_doc[] = 
"Class: oaIntraPointerAppDef_oaOccAssignment, Function: get\n"
"  Paramegers: (oaOccAssignment)\n"
"    Calls: oaOccAssignment* get(const oaOccAssignment* object)\n"
"    Signature: get|ptr-oaOccAssignment|cptr-oaOccAssignment,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccAssignment_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaOccAssignment data;
    int convert_status=PyoaIntraPointerAppDef_oaOccAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaOccAssignmentObject* self=(PyoaIntraPointerAppDef_oaOccAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccAssignment p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccAssignment_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaOccAssignmentp result= (data.DataCall()->get(p1.Data()));
        return PyoaOccAssignment_FromoaOccAssignment(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccAssignment_set_doc[] = 
"Class: oaIntraPointerAppDef_oaOccAssignment, Function: set\n"
"  Paramegers: (oaOccAssignment,oaOccAssignment)\n"
"    Calls: void set(oaOccAssignment* object,const oaOccAssignment* otherObject)\n"
"    Signature: set|void-void|ptr-oaOccAssignment,cptr-oaOccAssignment,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccAssignment_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaOccAssignment data;
    int convert_status=PyoaIntraPointerAppDef_oaOccAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaOccAssignmentObject* self=(PyoaIntraPointerAppDef_oaOccAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccAssignment p1;
    PyParamoaOccAssignment p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccAssignment_Convert,&p1,
          &PyoaOccAssignment_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccAssignment_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaOccAssignment, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccAssignment_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaOccAssignment data;
    int convert_status=PyoaIntraPointerAppDef_oaOccAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaOccAssignment_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaOccAssignment, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccAssignment_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaOccAssignment data;
  int convert_status=PyoaIntraPointerAppDef_oaOccAssignment_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaOccAssignment p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaOccAssignment_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaOccAssignment_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaOccAssignment_get,METH_VARARGS,oaIntraPointerAppDef_oaOccAssignment_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaOccAssignment_set,METH_VARARGS,oaIntraPointerAppDef_oaOccAssignment_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaOccAssignment_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaOccAssignment_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaOccAssignment_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaOccAssignment_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccAssignment_doc[] = 
"Class: oaIntraPointerAppDef_oaOccAssignment\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaOccAssignment)\n"
"    Calls: (const oaIntraPointerAppDef_oaOccAssignment&)\n"
"    Signature: oaIntraPointerAppDef_oaOccAssignment||cref-oaIntraPointerAppDef_oaOccAssignment,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaOccAssignment_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaOccAssignment",
    sizeof(PyoaIntraPointerAppDef_oaOccAssignmentObject),
    0,
    (destructor)oaIntraPointerAppDef_oaOccAssignment_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaOccAssignment_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaOccAssignment_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaOccAssignment_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaOccAssignment_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaOccAssignment_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccAssignment_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaOccAssignment, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaOccAssignment* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaOccAssignment|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaOccAssignment* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaOccAssignment|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccAssignment_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaOccAssignmentp result= (oaIntraPointerAppDef_oaOccAssignment::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaOccAssignment_FromoaIntraPointerAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccAssignmentp result= (oaIntraPointerAppDef_oaOccAssignment::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccAssignment_FromoaIntraPointerAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaOccAssignment, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccAssignment_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaOccAssignment, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaOccAssignment* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccAssignment|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaOccAssignment* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccAssignment|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaOccAssignment* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaOccAssignment* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccAssignment_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaOccAssignmentp result= (oaIntraPointerAppDef_oaOccAssignment::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaOccAssignment_FromoaIntraPointerAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaOccAssignmentp result= (oaIntraPointerAppDef_oaOccAssignment::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccAssignment_FromoaIntraPointerAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccAssignmentp result= (oaIntraPointerAppDef_oaOccAssignment::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccAssignment_FromoaIntraPointerAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccAssignmentp result= (oaIntraPointerAppDef_oaOccAssignment::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaOccAssignment_FromoaIntraPointerAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaOccAssignment, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaOccAssignment_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaOccAssignment_static_find,METH_VARARGS,oaIntraPointerAppDef_oaOccAssignment_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaOccAssignment_static_get,METH_VARARGS,oaIntraPointerAppDef_oaOccAssignment_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaOccAssignment_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaOccAssignment_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaOccAssignment\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaOccAssignment",
           (PyObject*)(&PyoaIntraPointerAppDef_oaOccAssignment_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaOccAssignment\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaOccAssignment_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaOccAssignment_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaOccBusNetDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaOccBusNetDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaOccBusNetDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaOccBusNetDefObject* self = (PyoaIntraPointerAppDef_oaOccBusNetDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaOccBusNetDef)
    {
        PyParamoaIntraPointerAppDef_oaOccBusNetDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaOccBusNetDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaOccBusNetDef, Choices are:\n"
        "    (oaIntraPointerAppDef_oaOccBusNetDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaOccBusNetDef_tp_dealloc(PyoaIntraPointerAppDef_oaOccBusNetDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaOccBusNetDef_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaOccBusNetDef value;
    int convert_status=PyoaIntraPointerAppDef_oaOccBusNetDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[57];
    sprintf(buffer,"<oaIntraPointerAppDef_oaOccBusNetDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaOccBusNetDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaOccBusNetDef v1;
    PyParamoaIntraPointerAppDef_oaOccBusNetDef v2;
    int convert_status1=PyoaIntraPointerAppDef_oaOccBusNetDef_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaOccBusNetDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaOccBusNetDef_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaOccBusNetDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaOccBusNetDef_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaOccBusNetDef**) ((PyoaIntraPointerAppDef_oaOccBusNetDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaOccBusNetDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaOccBusNetDef_FromoaIntraPointerAppDef_oaOccBusNetDef(oaIntraPointerAppDef_oaOccBusNetDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaOccBusNetDef* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaOccBusNetDef_Type.tp_alloc(&PyoaIntraPointerAppDef_oaOccBusNetDef_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaOccBusNetDefObject* self = (PyoaIntraPointerAppDef_oaOccBusNetDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaOccBusNetDef_FromoaIntraPointerAppDef_oaOccBusNetDef(oaIntraPointerAppDef_oaOccBusNetDef* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaOccBusNetDef_Type.tp_alloc(&PyoaIntraPointerAppDef_oaOccBusNetDef_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaOccBusNetDefObject* self = (PyoaIntraPointerAppDef_oaOccBusNetDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccBusNetDef_get_doc[] = 
"Class: oaIntraPointerAppDef_oaOccBusNetDef, Function: get\n"
"  Paramegers: (oaOccBusNetDef)\n"
"    Calls: oaOccBusNetDef* get(const oaOccBusNetDef* object)\n"
"    Signature: get|ptr-oaOccBusNetDef|cptr-oaOccBusNetDef,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccBusNetDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaOccBusNetDef data;
    int convert_status=PyoaIntraPointerAppDef_oaOccBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaOccBusNetDefObject* self=(PyoaIntraPointerAppDef_oaOccBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccBusNetDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccBusNetDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaOccBusNetDefp result= (data.DataCall()->get(p1.Data()));
        return PyoaOccBusNetDef_FromoaOccBusNetDef(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccBusNetDef_set_doc[] = 
"Class: oaIntraPointerAppDef_oaOccBusNetDef, Function: set\n"
"  Paramegers: (oaOccBusNetDef,oaOccBusNetDef)\n"
"    Calls: void set(oaOccBusNetDef* object,const oaOccBusNetDef* otherObject)\n"
"    Signature: set|void-void|ptr-oaOccBusNetDef,cptr-oaOccBusNetDef,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccBusNetDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaOccBusNetDef data;
    int convert_status=PyoaIntraPointerAppDef_oaOccBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaOccBusNetDefObject* self=(PyoaIntraPointerAppDef_oaOccBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccBusNetDef p1;
    PyParamoaOccBusNetDef p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccBusNetDef_Convert,&p1,
          &PyoaOccBusNetDef_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccBusNetDef_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaOccBusNetDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccBusNetDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaOccBusNetDef data;
    int convert_status=PyoaIntraPointerAppDef_oaOccBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaOccBusNetDef_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaOccBusNetDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccBusNetDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaOccBusNetDef data;
  int convert_status=PyoaIntraPointerAppDef_oaOccBusNetDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaOccBusNetDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaOccBusNetDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaOccBusNetDef_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaOccBusNetDef_get,METH_VARARGS,oaIntraPointerAppDef_oaOccBusNetDef_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaOccBusNetDef_set,METH_VARARGS,oaIntraPointerAppDef_oaOccBusNetDef_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaOccBusNetDef_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaOccBusNetDef_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaOccBusNetDef_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaOccBusNetDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccBusNetDef_doc[] = 
"Class: oaIntraPointerAppDef_oaOccBusNetDef\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaOccBusNetDef)\n"
"    Calls: (const oaIntraPointerAppDef_oaOccBusNetDef&)\n"
"    Signature: oaIntraPointerAppDef_oaOccBusNetDef||cref-oaIntraPointerAppDef_oaOccBusNetDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaOccBusNetDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaOccBusNetDef",
    sizeof(PyoaIntraPointerAppDef_oaOccBusNetDefObject),
    0,
    (destructor)oaIntraPointerAppDef_oaOccBusNetDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaOccBusNetDef_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaOccBusNetDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaOccBusNetDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaOccBusNetDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaOccBusNetDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccBusNetDef_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaOccBusNetDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaOccBusNetDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaOccBusNetDef|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaOccBusNetDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaOccBusNetDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccBusNetDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaOccBusNetDefp result= (oaIntraPointerAppDef_oaOccBusNetDef::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaOccBusNetDef_FromoaIntraPointerAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccBusNetDefp result= (oaIntraPointerAppDef_oaOccBusNetDef::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccBusNetDef_FromoaIntraPointerAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaOccBusNetDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccBusNetDef_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaOccBusNetDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaOccBusNetDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccBusNetDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaOccBusNetDef* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccBusNetDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaOccBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaOccBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccBusNetDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaOccBusNetDefp result= (oaIntraPointerAppDef_oaOccBusNetDef::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaOccBusNetDef_FromoaIntraPointerAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaOccBusNetDefp result= (oaIntraPointerAppDef_oaOccBusNetDef::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccBusNetDef_FromoaIntraPointerAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccBusNetDefp result= (oaIntraPointerAppDef_oaOccBusNetDef::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccBusNetDef_FromoaIntraPointerAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccBusNetDefp result= (oaIntraPointerAppDef_oaOccBusNetDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaOccBusNetDef_FromoaIntraPointerAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaOccBusNetDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaOccBusNetDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaOccBusNetDef_static_find,METH_VARARGS,oaIntraPointerAppDef_oaOccBusNetDef_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaOccBusNetDef_static_get,METH_VARARGS,oaIntraPointerAppDef_oaOccBusNetDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaOccBusNetDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaOccBusNetDef_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaOccBusNetDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaOccBusNetDef",
           (PyObject*)(&PyoaIntraPointerAppDef_oaOccBusNetDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaOccBusNetDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaOccBusNetDef_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaOccBusNetDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaOccBusTermDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaOccBusTermDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaOccBusTermDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaOccBusTermDefObject* self = (PyoaIntraPointerAppDef_oaOccBusTermDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaOccBusTermDef)
    {
        PyParamoaIntraPointerAppDef_oaOccBusTermDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaOccBusTermDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaOccBusTermDef, Choices are:\n"
        "    (oaIntraPointerAppDef_oaOccBusTermDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaOccBusTermDef_tp_dealloc(PyoaIntraPointerAppDef_oaOccBusTermDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaOccBusTermDef_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaOccBusTermDef value;
    int convert_status=PyoaIntraPointerAppDef_oaOccBusTermDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[58];
    sprintf(buffer,"<oaIntraPointerAppDef_oaOccBusTermDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaOccBusTermDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaOccBusTermDef v1;
    PyParamoaIntraPointerAppDef_oaOccBusTermDef v2;
    int convert_status1=PyoaIntraPointerAppDef_oaOccBusTermDef_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaOccBusTermDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaOccBusTermDef_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaOccBusTermDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaOccBusTermDef_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaOccBusTermDef**) ((PyoaIntraPointerAppDef_oaOccBusTermDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaOccBusTermDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaOccBusTermDef_FromoaIntraPointerAppDef_oaOccBusTermDef(oaIntraPointerAppDef_oaOccBusTermDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaOccBusTermDef* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaOccBusTermDef_Type.tp_alloc(&PyoaIntraPointerAppDef_oaOccBusTermDef_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaOccBusTermDefObject* self = (PyoaIntraPointerAppDef_oaOccBusTermDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaOccBusTermDef_FromoaIntraPointerAppDef_oaOccBusTermDef(oaIntraPointerAppDef_oaOccBusTermDef* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaOccBusTermDef_Type.tp_alloc(&PyoaIntraPointerAppDef_oaOccBusTermDef_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaOccBusTermDefObject* self = (PyoaIntraPointerAppDef_oaOccBusTermDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccBusTermDef_get_doc[] = 
"Class: oaIntraPointerAppDef_oaOccBusTermDef, Function: get\n"
"  Paramegers: (oaOccBusTermDef)\n"
"    Calls: oaOccBusTermDef* get(const oaOccBusTermDef* object)\n"
"    Signature: get|ptr-oaOccBusTermDef|cptr-oaOccBusTermDef,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccBusTermDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaOccBusTermDef data;
    int convert_status=PyoaIntraPointerAppDef_oaOccBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaOccBusTermDefObject* self=(PyoaIntraPointerAppDef_oaOccBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccBusTermDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccBusTermDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaOccBusTermDefp result= (data.DataCall()->get(p1.Data()));
        return PyoaOccBusTermDef_FromoaOccBusTermDef(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccBusTermDef_set_doc[] = 
"Class: oaIntraPointerAppDef_oaOccBusTermDef, Function: set\n"
"  Paramegers: (oaOccBusTermDef,oaOccBusTermDef)\n"
"    Calls: void set(oaOccBusTermDef* object,const oaOccBusTermDef* otherObject)\n"
"    Signature: set|void-void|ptr-oaOccBusTermDef,cptr-oaOccBusTermDef,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccBusTermDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaOccBusTermDef data;
    int convert_status=PyoaIntraPointerAppDef_oaOccBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaOccBusTermDefObject* self=(PyoaIntraPointerAppDef_oaOccBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccBusTermDef p1;
    PyParamoaOccBusTermDef p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccBusTermDef_Convert,&p1,
          &PyoaOccBusTermDef_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccBusTermDef_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaOccBusTermDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccBusTermDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaOccBusTermDef data;
    int convert_status=PyoaIntraPointerAppDef_oaOccBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaOccBusTermDef_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaOccBusTermDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccBusTermDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaOccBusTermDef data;
  int convert_status=PyoaIntraPointerAppDef_oaOccBusTermDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaOccBusTermDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaOccBusTermDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaOccBusTermDef_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaOccBusTermDef_get,METH_VARARGS,oaIntraPointerAppDef_oaOccBusTermDef_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaOccBusTermDef_set,METH_VARARGS,oaIntraPointerAppDef_oaOccBusTermDef_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaOccBusTermDef_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaOccBusTermDef_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaOccBusTermDef_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaOccBusTermDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccBusTermDef_doc[] = 
"Class: oaIntraPointerAppDef_oaOccBusTermDef\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaOccBusTermDef)\n"
"    Calls: (const oaIntraPointerAppDef_oaOccBusTermDef&)\n"
"    Signature: oaIntraPointerAppDef_oaOccBusTermDef||cref-oaIntraPointerAppDef_oaOccBusTermDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaOccBusTermDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaOccBusTermDef",
    sizeof(PyoaIntraPointerAppDef_oaOccBusTermDefObject),
    0,
    (destructor)oaIntraPointerAppDef_oaOccBusTermDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaOccBusTermDef_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaOccBusTermDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaOccBusTermDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaOccBusTermDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaOccBusTermDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccBusTermDef_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaOccBusTermDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaOccBusTermDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaOccBusTermDef|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaOccBusTermDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaOccBusTermDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccBusTermDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaOccBusTermDefp result= (oaIntraPointerAppDef_oaOccBusTermDef::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaOccBusTermDef_FromoaIntraPointerAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccBusTermDefp result= (oaIntraPointerAppDef_oaOccBusTermDef::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccBusTermDef_FromoaIntraPointerAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaOccBusTermDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccBusTermDef_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaOccBusTermDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaOccBusTermDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccBusTermDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaOccBusTermDef* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccBusTermDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaOccBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaOccBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccBusTermDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaOccBusTermDefp result= (oaIntraPointerAppDef_oaOccBusTermDef::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaOccBusTermDef_FromoaIntraPointerAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaOccBusTermDefp result= (oaIntraPointerAppDef_oaOccBusTermDef::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccBusTermDef_FromoaIntraPointerAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccBusTermDefp result= (oaIntraPointerAppDef_oaOccBusTermDef::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccBusTermDef_FromoaIntraPointerAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccBusTermDefp result= (oaIntraPointerAppDef_oaOccBusTermDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaOccBusTermDef_FromoaIntraPointerAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaOccBusTermDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaOccBusTermDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaOccBusTermDef_static_find,METH_VARARGS,oaIntraPointerAppDef_oaOccBusTermDef_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaOccBusTermDef_static_get,METH_VARARGS,oaIntraPointerAppDef_oaOccBusTermDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaOccBusTermDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaOccBusTermDef_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaOccBusTermDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaOccBusTermDef",
           (PyObject*)(&PyoaIntraPointerAppDef_oaOccBusTermDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaOccBusTermDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaOccBusTermDef_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaOccBusTermDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaOccConnectDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaOccConnectDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaOccConnectDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaOccConnectDefObject* self = (PyoaIntraPointerAppDef_oaOccConnectDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaOccConnectDef)
    {
        PyParamoaIntraPointerAppDef_oaOccConnectDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaOccConnectDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaOccConnectDef, Choices are:\n"
        "    (oaIntraPointerAppDef_oaOccConnectDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaOccConnectDef_tp_dealloc(PyoaIntraPointerAppDef_oaOccConnectDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaOccConnectDef_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaOccConnectDef value;
    int convert_status=PyoaIntraPointerAppDef_oaOccConnectDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[58];
    sprintf(buffer,"<oaIntraPointerAppDef_oaOccConnectDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaOccConnectDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaOccConnectDef v1;
    PyParamoaIntraPointerAppDef_oaOccConnectDef v2;
    int convert_status1=PyoaIntraPointerAppDef_oaOccConnectDef_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaOccConnectDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaOccConnectDef_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaOccConnectDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaOccConnectDef_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaOccConnectDef**) ((PyoaIntraPointerAppDef_oaOccConnectDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaOccConnectDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaOccConnectDef_FromoaIntraPointerAppDef_oaOccConnectDef(oaIntraPointerAppDef_oaOccConnectDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaOccConnectDef* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaOccConnectDef_Type.tp_alloc(&PyoaIntraPointerAppDef_oaOccConnectDef_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaOccConnectDefObject* self = (PyoaIntraPointerAppDef_oaOccConnectDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaOccConnectDef_FromoaIntraPointerAppDef_oaOccConnectDef(oaIntraPointerAppDef_oaOccConnectDef* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaOccConnectDef_Type.tp_alloc(&PyoaIntraPointerAppDef_oaOccConnectDef_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaOccConnectDefObject* self = (PyoaIntraPointerAppDef_oaOccConnectDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccConnectDef_get_doc[] = 
"Class: oaIntraPointerAppDef_oaOccConnectDef, Function: get\n"
"  Paramegers: (oaOccConnectDef)\n"
"    Calls: oaOccConnectDef* get(const oaOccConnectDef* object)\n"
"    Signature: get|ptr-oaOccConnectDef|cptr-oaOccConnectDef,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccConnectDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaOccConnectDef data;
    int convert_status=PyoaIntraPointerAppDef_oaOccConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaOccConnectDefObject* self=(PyoaIntraPointerAppDef_oaOccConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccConnectDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccConnectDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaOccConnectDefp result= (data.DataCall()->get(p1.Data()));
        return PyoaOccConnectDef_FromoaOccConnectDef(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccConnectDef_set_doc[] = 
"Class: oaIntraPointerAppDef_oaOccConnectDef, Function: set\n"
"  Paramegers: (oaOccConnectDef,oaOccConnectDef)\n"
"    Calls: void set(oaOccConnectDef* object,const oaOccConnectDef* otherObject)\n"
"    Signature: set|void-void|ptr-oaOccConnectDef,cptr-oaOccConnectDef,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccConnectDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaOccConnectDef data;
    int convert_status=PyoaIntraPointerAppDef_oaOccConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaOccConnectDefObject* self=(PyoaIntraPointerAppDef_oaOccConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccConnectDef p1;
    PyParamoaOccConnectDef p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccConnectDef_Convert,&p1,
          &PyoaOccConnectDef_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccConnectDef_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaOccConnectDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccConnectDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaOccConnectDef data;
    int convert_status=PyoaIntraPointerAppDef_oaOccConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaOccConnectDef_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaOccConnectDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccConnectDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaOccConnectDef data;
  int convert_status=PyoaIntraPointerAppDef_oaOccConnectDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaOccConnectDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaOccConnectDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaOccConnectDef_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaOccConnectDef_get,METH_VARARGS,oaIntraPointerAppDef_oaOccConnectDef_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaOccConnectDef_set,METH_VARARGS,oaIntraPointerAppDef_oaOccConnectDef_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaOccConnectDef_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaOccConnectDef_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaOccConnectDef_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaOccConnectDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccConnectDef_doc[] = 
"Class: oaIntraPointerAppDef_oaOccConnectDef\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaOccConnectDef)\n"
"    Calls: (const oaIntraPointerAppDef_oaOccConnectDef&)\n"
"    Signature: oaIntraPointerAppDef_oaOccConnectDef||cref-oaIntraPointerAppDef_oaOccConnectDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaOccConnectDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaOccConnectDef",
    sizeof(PyoaIntraPointerAppDef_oaOccConnectDefObject),
    0,
    (destructor)oaIntraPointerAppDef_oaOccConnectDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaOccConnectDef_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaOccConnectDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaOccConnectDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaOccConnectDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaOccConnectDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccConnectDef_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaOccConnectDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaOccConnectDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaOccConnectDef|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaOccConnectDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaOccConnectDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccConnectDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaOccConnectDefp result= (oaIntraPointerAppDef_oaOccConnectDef::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaOccConnectDef_FromoaIntraPointerAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccConnectDefp result= (oaIntraPointerAppDef_oaOccConnectDef::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccConnectDef_FromoaIntraPointerAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaOccConnectDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccConnectDef_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaOccConnectDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaOccConnectDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccConnectDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaOccConnectDef* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccConnectDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaOccConnectDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaOccConnectDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccConnectDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaOccConnectDefp result= (oaIntraPointerAppDef_oaOccConnectDef::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaOccConnectDef_FromoaIntraPointerAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaOccConnectDefp result= (oaIntraPointerAppDef_oaOccConnectDef::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccConnectDef_FromoaIntraPointerAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccConnectDefp result= (oaIntraPointerAppDef_oaOccConnectDef::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccConnectDef_FromoaIntraPointerAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccConnectDefp result= (oaIntraPointerAppDef_oaOccConnectDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaOccConnectDef_FromoaIntraPointerAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaOccConnectDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaOccConnectDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaOccConnectDef_static_find,METH_VARARGS,oaIntraPointerAppDef_oaOccConnectDef_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaOccConnectDef_static_get,METH_VARARGS,oaIntraPointerAppDef_oaOccConnectDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaOccConnectDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaOccConnectDef_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaOccConnectDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaOccConnectDef",
           (PyObject*)(&PyoaIntraPointerAppDef_oaOccConnectDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaOccConnectDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaOccConnectDef_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaOccConnectDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaOccInst
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaOccInst_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaOccInst_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaOccInstObject* self = (PyoaIntraPointerAppDef_oaOccInstObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaOccInst)
    {
        PyParamoaIntraPointerAppDef_oaOccInst p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaOccInst_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaOccInst, Choices are:\n"
        "    (oaIntraPointerAppDef_oaOccInst)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaOccInst_tp_dealloc(PyoaIntraPointerAppDef_oaOccInstObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaOccInst_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaOccInst value;
    int convert_status=PyoaIntraPointerAppDef_oaOccInst_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaIntraPointerAppDef_oaOccInst::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaOccInst_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaOccInst v1;
    PyParamoaIntraPointerAppDef_oaOccInst v2;
    int convert_status1=PyoaIntraPointerAppDef_oaOccInst_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaOccInst_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaOccInst_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaOccInst* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaOccInst_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaOccInst**) ((PyoaIntraPointerAppDef_oaOccInstObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaOccInst Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaOccInst_FromoaIntraPointerAppDef_oaOccInst(oaIntraPointerAppDef_oaOccInst** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaOccInst* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaOccInst_Type.tp_alloc(&PyoaIntraPointerAppDef_oaOccInst_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaOccInstObject* self = (PyoaIntraPointerAppDef_oaOccInstObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaOccInst_FromoaIntraPointerAppDef_oaOccInst(oaIntraPointerAppDef_oaOccInst* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaOccInst_Type.tp_alloc(&PyoaIntraPointerAppDef_oaOccInst_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaOccInstObject* self = (PyoaIntraPointerAppDef_oaOccInstObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccInst_get_doc[] = 
"Class: oaIntraPointerAppDef_oaOccInst, Function: get\n"
"  Paramegers: (oaOccInst)\n"
"    Calls: oaOccInst* get(const oaOccInst* object)\n"
"    Signature: get|ptr-oaOccInst|cptr-oaOccInst,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccInst_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaOccInst data;
    int convert_status=PyoaIntraPointerAppDef_oaOccInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaOccInstObject* self=(PyoaIntraPointerAppDef_oaOccInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaOccInstp result= (data.DataCall()->get(p1.Data()));
        return PyoaOccInst_FromoaOccInst(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccInst_set_doc[] = 
"Class: oaIntraPointerAppDef_oaOccInst, Function: set\n"
"  Paramegers: (oaOccInst,oaOccInst)\n"
"    Calls: void set(oaOccInst* object,const oaOccInst* otherObject)\n"
"    Signature: set|void-void|ptr-oaOccInst,cptr-oaOccInst,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccInst_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaOccInst data;
    int convert_status=PyoaIntraPointerAppDef_oaOccInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaOccInstObject* self=(PyoaIntraPointerAppDef_oaOccInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInst p1;
    PyParamoaOccInst p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccInst_Convert,&p1,
          &PyoaOccInst_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccInst_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaOccInst, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccInst_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaOccInst data;
    int convert_status=PyoaIntraPointerAppDef_oaOccInst_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaOccInst_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaOccInst, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccInst_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaOccInst data;
  int convert_status=PyoaIntraPointerAppDef_oaOccInst_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaOccInst p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaOccInst_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaOccInst_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaOccInst_get,METH_VARARGS,oaIntraPointerAppDef_oaOccInst_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaOccInst_set,METH_VARARGS,oaIntraPointerAppDef_oaOccInst_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaOccInst_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaOccInst_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaOccInst_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaOccInst_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccInst_doc[] = 
"Class: oaIntraPointerAppDef_oaOccInst\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaOccInst)\n"
"    Calls: (const oaIntraPointerAppDef_oaOccInst&)\n"
"    Signature: oaIntraPointerAppDef_oaOccInst||cref-oaIntraPointerAppDef_oaOccInst,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaOccInst_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaOccInst",
    sizeof(PyoaIntraPointerAppDef_oaOccInstObject),
    0,
    (destructor)oaIntraPointerAppDef_oaOccInst_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaOccInst_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaOccInst_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaOccInst_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaOccInst_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaOccInst_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccInst_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaOccInst, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaOccInst* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaOccInst|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaOccInst* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaOccInst|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccInst_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaOccInstp result= (oaIntraPointerAppDef_oaOccInst::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaOccInst_FromoaIntraPointerAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccInstp result= (oaIntraPointerAppDef_oaOccInst::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccInst_FromoaIntraPointerAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaOccInst, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccInst_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaOccInst, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaOccInst* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccInst|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaOccInst* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccInst|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaOccInst* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaOccInst* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccInst_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaOccInstp result= (oaIntraPointerAppDef_oaOccInst::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaOccInst_FromoaIntraPointerAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaOccInstp result= (oaIntraPointerAppDef_oaOccInst::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccInst_FromoaIntraPointerAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccInstp result= (oaIntraPointerAppDef_oaOccInst::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccInst_FromoaIntraPointerAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccInstp result= (oaIntraPointerAppDef_oaOccInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaOccInst_FromoaIntraPointerAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaOccInst, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaOccInst_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaOccInst_static_find,METH_VARARGS,oaIntraPointerAppDef_oaOccInst_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaOccInst_static_get,METH_VARARGS,oaIntraPointerAppDef_oaOccInst_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaOccInst_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaOccInst_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaOccInst\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaOccInst",
           (PyObject*)(&PyoaIntraPointerAppDef_oaOccInst_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaOccInst\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaOccInst_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaOccInst_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaOccInstHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaOccInstHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaOccInstHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaOccInstHeaderObject* self = (PyoaIntraPointerAppDef_oaOccInstHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaOccInstHeader)
    {
        PyParamoaIntraPointerAppDef_oaOccInstHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaOccInstHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaOccInstHeader, Choices are:\n"
        "    (oaIntraPointerAppDef_oaOccInstHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaOccInstHeader_tp_dealloc(PyoaIntraPointerAppDef_oaOccInstHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaOccInstHeader_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaOccInstHeader value;
    int convert_status=PyoaIntraPointerAppDef_oaOccInstHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[58];
    sprintf(buffer,"<oaIntraPointerAppDef_oaOccInstHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaOccInstHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaOccInstHeader v1;
    PyParamoaIntraPointerAppDef_oaOccInstHeader v2;
    int convert_status1=PyoaIntraPointerAppDef_oaOccInstHeader_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaOccInstHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaOccInstHeader_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaOccInstHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaOccInstHeader_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaOccInstHeader**) ((PyoaIntraPointerAppDef_oaOccInstHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaOccInstHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaOccInstHeader_FromoaIntraPointerAppDef_oaOccInstHeader(oaIntraPointerAppDef_oaOccInstHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaOccInstHeader* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaOccInstHeader_Type.tp_alloc(&PyoaIntraPointerAppDef_oaOccInstHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaOccInstHeaderObject* self = (PyoaIntraPointerAppDef_oaOccInstHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaOccInstHeader_FromoaIntraPointerAppDef_oaOccInstHeader(oaIntraPointerAppDef_oaOccInstHeader* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaOccInstHeader_Type.tp_alloc(&PyoaIntraPointerAppDef_oaOccInstHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaOccInstHeaderObject* self = (PyoaIntraPointerAppDef_oaOccInstHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccInstHeader_get_doc[] = 
"Class: oaIntraPointerAppDef_oaOccInstHeader, Function: get\n"
"  Paramegers: (oaOccInstHeader)\n"
"    Calls: oaOccInstHeader* get(const oaOccInstHeader* object)\n"
"    Signature: get|ptr-oaOccInstHeader|cptr-oaOccInstHeader,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccInstHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaOccInstHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaOccInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaOccInstHeaderObject* self=(PyoaIntraPointerAppDef_oaOccInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInstHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccInstHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaOccInstHeaderp result= (data.DataCall()->get(p1.Data()));
        return PyoaOccInstHeader_FromoaOccInstHeader(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccInstHeader_set_doc[] = 
"Class: oaIntraPointerAppDef_oaOccInstHeader, Function: set\n"
"  Paramegers: (oaOccInstHeader,oaOccInstHeader)\n"
"    Calls: void set(oaOccInstHeader* object,const oaOccInstHeader* otherObject)\n"
"    Signature: set|void-void|ptr-oaOccInstHeader,cptr-oaOccInstHeader,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccInstHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaOccInstHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaOccInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaOccInstHeaderObject* self=(PyoaIntraPointerAppDef_oaOccInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInstHeader p1;
    PyParamoaOccInstHeader p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccInstHeader_Convert,&p1,
          &PyoaOccInstHeader_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccInstHeader_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaOccInstHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccInstHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaOccInstHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaOccInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaOccInstHeader_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaOccInstHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccInstHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaOccInstHeader data;
  int convert_status=PyoaIntraPointerAppDef_oaOccInstHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaOccInstHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaOccInstHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaOccInstHeader_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaOccInstHeader_get,METH_VARARGS,oaIntraPointerAppDef_oaOccInstHeader_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaOccInstHeader_set,METH_VARARGS,oaIntraPointerAppDef_oaOccInstHeader_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaOccInstHeader_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaOccInstHeader_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaOccInstHeader_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaOccInstHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccInstHeader_doc[] = 
"Class: oaIntraPointerAppDef_oaOccInstHeader\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaOccInstHeader)\n"
"    Calls: (const oaIntraPointerAppDef_oaOccInstHeader&)\n"
"    Signature: oaIntraPointerAppDef_oaOccInstHeader||cref-oaIntraPointerAppDef_oaOccInstHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaOccInstHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaOccInstHeader",
    sizeof(PyoaIntraPointerAppDef_oaOccInstHeaderObject),
    0,
    (destructor)oaIntraPointerAppDef_oaOccInstHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaOccInstHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaOccInstHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaOccInstHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaOccInstHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaOccInstHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccInstHeader_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaOccInstHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaOccInstHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaOccInstHeader|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaOccInstHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaOccInstHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccInstHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaOccInstHeaderp result= (oaIntraPointerAppDef_oaOccInstHeader::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaOccInstHeader_FromoaIntraPointerAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccInstHeaderp result= (oaIntraPointerAppDef_oaOccInstHeader::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccInstHeader_FromoaIntraPointerAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaOccInstHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccInstHeader_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaOccInstHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaOccInstHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccInstHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaOccInstHeader* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccInstHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaOccInstHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaOccInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccInstHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaOccInstHeaderp result= (oaIntraPointerAppDef_oaOccInstHeader::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaOccInstHeader_FromoaIntraPointerAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaOccInstHeaderp result= (oaIntraPointerAppDef_oaOccInstHeader::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccInstHeader_FromoaIntraPointerAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccInstHeaderp result= (oaIntraPointerAppDef_oaOccInstHeader::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccInstHeader_FromoaIntraPointerAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccInstHeaderp result= (oaIntraPointerAppDef_oaOccInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaOccInstHeader_FromoaIntraPointerAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaOccInstHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaOccInstHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaOccInstHeader_static_find,METH_VARARGS,oaIntraPointerAppDef_oaOccInstHeader_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaOccInstHeader_static_get,METH_VARARGS,oaIntraPointerAppDef_oaOccInstHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaOccInstHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaOccInstHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaOccInstHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaOccInstHeader",
           (PyObject*)(&PyoaIntraPointerAppDef_oaOccInstHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaOccInstHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaOccInstHeader_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaOccInstHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaOccInstTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaOccInstTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaOccInstTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaOccInstTermObject* self = (PyoaIntraPointerAppDef_oaOccInstTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaOccInstTerm)
    {
        PyParamoaIntraPointerAppDef_oaOccInstTerm p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaOccInstTerm_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaOccInstTerm, Choices are:\n"
        "    (oaIntraPointerAppDef_oaOccInstTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaOccInstTerm_tp_dealloc(PyoaIntraPointerAppDef_oaOccInstTermObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaOccInstTerm_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaOccInstTerm value;
    int convert_status=PyoaIntraPointerAppDef_oaOccInstTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[56];
    sprintf(buffer,"<oaIntraPointerAppDef_oaOccInstTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaOccInstTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaOccInstTerm v1;
    PyParamoaIntraPointerAppDef_oaOccInstTerm v2;
    int convert_status1=PyoaIntraPointerAppDef_oaOccInstTerm_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaOccInstTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaOccInstTerm_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaOccInstTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaOccInstTerm_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaOccInstTerm**) ((PyoaIntraPointerAppDef_oaOccInstTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaOccInstTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaOccInstTerm_FromoaIntraPointerAppDef_oaOccInstTerm(oaIntraPointerAppDef_oaOccInstTerm** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaOccInstTerm* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaOccInstTerm_Type.tp_alloc(&PyoaIntraPointerAppDef_oaOccInstTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaOccInstTermObject* self = (PyoaIntraPointerAppDef_oaOccInstTermObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaOccInstTerm_FromoaIntraPointerAppDef_oaOccInstTerm(oaIntraPointerAppDef_oaOccInstTerm* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaOccInstTerm_Type.tp_alloc(&PyoaIntraPointerAppDef_oaOccInstTerm_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaOccInstTermObject* self = (PyoaIntraPointerAppDef_oaOccInstTermObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccInstTerm_get_doc[] = 
"Class: oaIntraPointerAppDef_oaOccInstTerm, Function: get\n"
"  Paramegers: (oaOccInstTerm)\n"
"    Calls: oaOccInstTerm* get(const oaOccInstTerm* object)\n"
"    Signature: get|ptr-oaOccInstTerm|cptr-oaOccInstTerm,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccInstTerm_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaOccInstTerm data;
    int convert_status=PyoaIntraPointerAppDef_oaOccInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaOccInstTermObject* self=(PyoaIntraPointerAppDef_oaOccInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInstTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccInstTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaOccInstTermp result= (data.DataCall()->get(p1.Data()));
        return PyoaOccInstTerm_FromoaOccInstTerm(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccInstTerm_set_doc[] = 
"Class: oaIntraPointerAppDef_oaOccInstTerm, Function: set\n"
"  Paramegers: (oaOccInstTerm,oaOccInstTerm)\n"
"    Calls: void set(oaOccInstTerm* object,const oaOccInstTerm* otherObject)\n"
"    Signature: set|void-void|ptr-oaOccInstTerm,cptr-oaOccInstTerm,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccInstTerm_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaOccInstTerm data;
    int convert_status=PyoaIntraPointerAppDef_oaOccInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaOccInstTermObject* self=(PyoaIntraPointerAppDef_oaOccInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInstTerm p1;
    PyParamoaOccInstTerm p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccInstTerm_Convert,&p1,
          &PyoaOccInstTerm_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccInstTerm_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaOccInstTerm, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccInstTerm_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaOccInstTerm data;
    int convert_status=PyoaIntraPointerAppDef_oaOccInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaOccInstTerm_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaOccInstTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccInstTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaOccInstTerm data;
  int convert_status=PyoaIntraPointerAppDef_oaOccInstTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaOccInstTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaOccInstTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaOccInstTerm_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaOccInstTerm_get,METH_VARARGS,oaIntraPointerAppDef_oaOccInstTerm_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaOccInstTerm_set,METH_VARARGS,oaIntraPointerAppDef_oaOccInstTerm_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaOccInstTerm_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaOccInstTerm_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaOccInstTerm_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaOccInstTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccInstTerm_doc[] = 
"Class: oaIntraPointerAppDef_oaOccInstTerm\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaOccInstTerm)\n"
"    Calls: (const oaIntraPointerAppDef_oaOccInstTerm&)\n"
"    Signature: oaIntraPointerAppDef_oaOccInstTerm||cref-oaIntraPointerAppDef_oaOccInstTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaOccInstTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaOccInstTerm",
    sizeof(PyoaIntraPointerAppDef_oaOccInstTermObject),
    0,
    (destructor)oaIntraPointerAppDef_oaOccInstTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaOccInstTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaOccInstTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaOccInstTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaOccInstTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaOccInstTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccInstTerm_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaOccInstTerm, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaOccInstTerm* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaOccInstTerm|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaOccInstTerm* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaOccInstTerm|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccInstTerm_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaOccInstTermp result= (oaIntraPointerAppDef_oaOccInstTerm::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaOccInstTerm_FromoaIntraPointerAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccInstTermp result= (oaIntraPointerAppDef_oaOccInstTerm::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccInstTerm_FromoaIntraPointerAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaOccInstTerm, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccInstTerm_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaOccInstTerm, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaOccInstTerm* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccInstTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaOccInstTerm* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccInstTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaOccInstTerm* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaOccInstTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccInstTerm_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaOccInstTermp result= (oaIntraPointerAppDef_oaOccInstTerm::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaOccInstTerm_FromoaIntraPointerAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaOccInstTermp result= (oaIntraPointerAppDef_oaOccInstTerm::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccInstTerm_FromoaIntraPointerAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccInstTermp result= (oaIntraPointerAppDef_oaOccInstTerm::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccInstTerm_FromoaIntraPointerAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccInstTermp result= (oaIntraPointerAppDef_oaOccInstTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaOccInstTerm_FromoaIntraPointerAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaOccInstTerm, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaOccInstTerm_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaOccInstTerm_static_find,METH_VARARGS,oaIntraPointerAppDef_oaOccInstTerm_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaOccInstTerm_static_get,METH_VARARGS,oaIntraPointerAppDef_oaOccInstTerm_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaOccInstTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaOccInstTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaOccInstTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaOccInstTerm",
           (PyObject*)(&PyoaIntraPointerAppDef_oaOccInstTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaOccInstTerm\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaOccInstTerm_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaOccInstTerm_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaOccModuleInstHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaOccModuleInstHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaOccModuleInstHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaOccModuleInstHeaderObject* self = (PyoaIntraPointerAppDef_oaOccModuleInstHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaOccModuleInstHeader)
    {
        PyParamoaIntraPointerAppDef_oaOccModuleInstHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaOccModuleInstHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaOccModuleInstHeader, Choices are:\n"
        "    (oaIntraPointerAppDef_oaOccModuleInstHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaOccModuleInstHeader_tp_dealloc(PyoaIntraPointerAppDef_oaOccModuleInstHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaOccModuleInstHeader_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaOccModuleInstHeader value;
    int convert_status=PyoaIntraPointerAppDef_oaOccModuleInstHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[64];
    sprintf(buffer,"<oaIntraPointerAppDef_oaOccModuleInstHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaOccModuleInstHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaOccModuleInstHeader v1;
    PyParamoaIntraPointerAppDef_oaOccModuleInstHeader v2;
    int convert_status1=PyoaIntraPointerAppDef_oaOccModuleInstHeader_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaOccModuleInstHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaOccModuleInstHeader_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaOccModuleInstHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaOccModuleInstHeader_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaOccModuleInstHeader**) ((PyoaIntraPointerAppDef_oaOccModuleInstHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaOccModuleInstHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaOccModuleInstHeader_FromoaIntraPointerAppDef_oaOccModuleInstHeader(oaIntraPointerAppDef_oaOccModuleInstHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaOccModuleInstHeader* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaOccModuleInstHeader_Type.tp_alloc(&PyoaIntraPointerAppDef_oaOccModuleInstHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaOccModuleInstHeaderObject* self = (PyoaIntraPointerAppDef_oaOccModuleInstHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaOccModuleInstHeader_FromoaIntraPointerAppDef_oaOccModuleInstHeader(oaIntraPointerAppDef_oaOccModuleInstHeader* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaOccModuleInstHeader_Type.tp_alloc(&PyoaIntraPointerAppDef_oaOccModuleInstHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaOccModuleInstHeaderObject* self = (PyoaIntraPointerAppDef_oaOccModuleInstHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccModuleInstHeader_get_doc[] = 
"Class: oaIntraPointerAppDef_oaOccModuleInstHeader, Function: get\n"
"  Paramegers: (oaOccModuleInstHeader)\n"
"    Calls: oaOccModuleInstHeader* get(const oaOccModuleInstHeader* object)\n"
"    Signature: get|ptr-oaOccModuleInstHeader|cptr-oaOccModuleInstHeader,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccModuleInstHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaOccModuleInstHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaOccModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaOccModuleInstHeaderObject* self=(PyoaIntraPointerAppDef_oaOccModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccModuleInstHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccModuleInstHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaOccModuleInstHeaderp result= (data.DataCall()->get(p1.Data()));
        return PyoaOccModuleInstHeader_FromoaOccModuleInstHeader(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccModuleInstHeader_set_doc[] = 
"Class: oaIntraPointerAppDef_oaOccModuleInstHeader, Function: set\n"
"  Paramegers: (oaOccModuleInstHeader,oaOccModuleInstHeader)\n"
"    Calls: void set(oaOccModuleInstHeader* object,const oaOccModuleInstHeader* otherObject)\n"
"    Signature: set|void-void|ptr-oaOccModuleInstHeader,cptr-oaOccModuleInstHeader,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccModuleInstHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaOccModuleInstHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaOccModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaOccModuleInstHeaderObject* self=(PyoaIntraPointerAppDef_oaOccModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccModuleInstHeader p1;
    PyParamoaOccModuleInstHeader p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccModuleInstHeader_Convert,&p1,
          &PyoaOccModuleInstHeader_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccModuleInstHeader_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaOccModuleInstHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccModuleInstHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaOccModuleInstHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaOccModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaOccModuleInstHeader_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaOccModuleInstHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccModuleInstHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaOccModuleInstHeader data;
  int convert_status=PyoaIntraPointerAppDef_oaOccModuleInstHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaOccModuleInstHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaOccModuleInstHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaOccModuleInstHeader_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaOccModuleInstHeader_get,METH_VARARGS,oaIntraPointerAppDef_oaOccModuleInstHeader_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaOccModuleInstHeader_set,METH_VARARGS,oaIntraPointerAppDef_oaOccModuleInstHeader_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaOccModuleInstHeader_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaOccModuleInstHeader_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaOccModuleInstHeader_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaOccModuleInstHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccModuleInstHeader_doc[] = 
"Class: oaIntraPointerAppDef_oaOccModuleInstHeader\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaOccModuleInstHeader)\n"
"    Calls: (const oaIntraPointerAppDef_oaOccModuleInstHeader&)\n"
"    Signature: oaIntraPointerAppDef_oaOccModuleInstHeader||cref-oaIntraPointerAppDef_oaOccModuleInstHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaOccModuleInstHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaOccModuleInstHeader",
    sizeof(PyoaIntraPointerAppDef_oaOccModuleInstHeaderObject),
    0,
    (destructor)oaIntraPointerAppDef_oaOccModuleInstHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaOccModuleInstHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaOccModuleInstHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaOccModuleInstHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaOccModuleInstHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaOccModuleInstHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccModuleInstHeader_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaOccModuleInstHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaOccModuleInstHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaOccModuleInstHeader|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaOccModuleInstHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaOccModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccModuleInstHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaOccModuleInstHeaderp result= (oaIntraPointerAppDef_oaOccModuleInstHeader::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaOccModuleInstHeader_FromoaIntraPointerAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccModuleInstHeaderp result= (oaIntraPointerAppDef_oaOccModuleInstHeader::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccModuleInstHeader_FromoaIntraPointerAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaOccModuleInstHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccModuleInstHeader_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaOccModuleInstHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaOccModuleInstHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccModuleInstHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaOccModuleInstHeader* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccModuleInstHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaOccModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaOccModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccModuleInstHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaOccModuleInstHeaderp result= (oaIntraPointerAppDef_oaOccModuleInstHeader::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaOccModuleInstHeader_FromoaIntraPointerAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaOccModuleInstHeaderp result= (oaIntraPointerAppDef_oaOccModuleInstHeader::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccModuleInstHeader_FromoaIntraPointerAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccModuleInstHeaderp result= (oaIntraPointerAppDef_oaOccModuleInstHeader::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccModuleInstHeader_FromoaIntraPointerAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccModuleInstHeaderp result= (oaIntraPointerAppDef_oaOccModuleInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaOccModuleInstHeader_FromoaIntraPointerAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaOccModuleInstHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaOccModuleInstHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaOccModuleInstHeader_static_find,METH_VARARGS,oaIntraPointerAppDef_oaOccModuleInstHeader_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaOccModuleInstHeader_static_get,METH_VARARGS,oaIntraPointerAppDef_oaOccModuleInstHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaOccModuleInstHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaOccModuleInstHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaOccModuleInstHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaOccModuleInstHeader",
           (PyObject*)(&PyoaIntraPointerAppDef_oaOccModuleInstHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaOccModuleInstHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaOccModuleInstHeader_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaOccModuleInstHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaOccNet
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaOccNet_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaOccNet_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaOccNetObject* self = (PyoaIntraPointerAppDef_oaOccNetObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaOccNet)
    {
        PyParamoaIntraPointerAppDef_oaOccNet p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaOccNet_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaOccNet, Choices are:\n"
        "    (oaIntraPointerAppDef_oaOccNet)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaOccNet_tp_dealloc(PyoaIntraPointerAppDef_oaOccNetObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaOccNet_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaOccNet value;
    int convert_status=PyoaIntraPointerAppDef_oaOccNet_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[51];
    sprintf(buffer,"<oaIntraPointerAppDef_oaOccNet::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaOccNet_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaOccNet v1;
    PyParamoaIntraPointerAppDef_oaOccNet v2;
    int convert_status1=PyoaIntraPointerAppDef_oaOccNet_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaOccNet_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaOccNet_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaOccNet* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaOccNet_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaOccNet**) ((PyoaIntraPointerAppDef_oaOccNetObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaOccNet Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaOccNet_FromoaIntraPointerAppDef_oaOccNet(oaIntraPointerAppDef_oaOccNet** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaOccNet* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaOccNet_Type.tp_alloc(&PyoaIntraPointerAppDef_oaOccNet_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaOccNetObject* self = (PyoaIntraPointerAppDef_oaOccNetObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaOccNet_FromoaIntraPointerAppDef_oaOccNet(oaIntraPointerAppDef_oaOccNet* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaOccNet_Type.tp_alloc(&PyoaIntraPointerAppDef_oaOccNet_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaOccNetObject* self = (PyoaIntraPointerAppDef_oaOccNetObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccNet_get_doc[] = 
"Class: oaIntraPointerAppDef_oaOccNet, Function: get\n"
"  Paramegers: (oaOccNet)\n"
"    Calls: oaOccNet* get(const oaOccNet* object)\n"
"    Signature: get|ptr-oaOccNet|cptr-oaOccNet,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccNet_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaOccNet data;
    int convert_status=PyoaIntraPointerAppDef_oaOccNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaOccNetObject* self=(PyoaIntraPointerAppDef_oaOccNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccNet p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccNet_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaOccNetp result= (data.DataCall()->get(p1.Data()));
        return PyoaOccNet_FromoaOccNet(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccNet_set_doc[] = 
"Class: oaIntraPointerAppDef_oaOccNet, Function: set\n"
"  Paramegers: (oaOccNet,oaOccNet)\n"
"    Calls: void set(oaOccNet* object,const oaOccNet* otherObject)\n"
"    Signature: set|void-void|ptr-oaOccNet,cptr-oaOccNet,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccNet_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaOccNet data;
    int convert_status=PyoaIntraPointerAppDef_oaOccNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaOccNetObject* self=(PyoaIntraPointerAppDef_oaOccNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccNet p1;
    PyParamoaOccNet p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccNet_Convert,&p1,
          &PyoaOccNet_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccNet_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaOccNet, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccNet_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaOccNet data;
    int convert_status=PyoaIntraPointerAppDef_oaOccNet_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaOccNet_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaOccNet, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccNet_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaOccNet data;
  int convert_status=PyoaIntraPointerAppDef_oaOccNet_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaOccNet p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaOccNet_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaOccNet_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaOccNet_get,METH_VARARGS,oaIntraPointerAppDef_oaOccNet_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaOccNet_set,METH_VARARGS,oaIntraPointerAppDef_oaOccNet_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaOccNet_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaOccNet_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaOccNet_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaOccNet_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccNet_doc[] = 
"Class: oaIntraPointerAppDef_oaOccNet\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaOccNet)\n"
"    Calls: (const oaIntraPointerAppDef_oaOccNet&)\n"
"    Signature: oaIntraPointerAppDef_oaOccNet||cref-oaIntraPointerAppDef_oaOccNet,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaOccNet_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaOccNet",
    sizeof(PyoaIntraPointerAppDef_oaOccNetObject),
    0,
    (destructor)oaIntraPointerAppDef_oaOccNet_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaOccNet_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaOccNet_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaOccNet_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaOccNet_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaOccNet_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccNet_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaOccNet, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaOccNet* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaOccNet|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaOccNet* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaOccNet|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccNet_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaOccNetp result= (oaIntraPointerAppDef_oaOccNet::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaOccNet_FromoaIntraPointerAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccNetp result= (oaIntraPointerAppDef_oaOccNet::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccNet_FromoaIntraPointerAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaOccNet, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccNet_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaOccNet, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaOccNet* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccNet|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaOccNet* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccNet|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaOccNet* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccNet|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaOccNet* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccNet|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccNet_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaOccNetp result= (oaIntraPointerAppDef_oaOccNet::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaOccNet_FromoaIntraPointerAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaOccNetp result= (oaIntraPointerAppDef_oaOccNet::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccNet_FromoaIntraPointerAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccNetp result= (oaIntraPointerAppDef_oaOccNet::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccNet_FromoaIntraPointerAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccNetp result= (oaIntraPointerAppDef_oaOccNet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaOccNet_FromoaIntraPointerAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaOccNet, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaOccNet_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaOccNet_static_find,METH_VARARGS,oaIntraPointerAppDef_oaOccNet_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaOccNet_static_get,METH_VARARGS,oaIntraPointerAppDef_oaOccNet_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaOccNet_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaOccNet_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaOccNet\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaOccNet",
           (PyObject*)(&PyoaIntraPointerAppDef_oaOccNet_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaOccNet\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaOccNet_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaOccNet_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaOccShape
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaOccShape_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaOccShape_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaOccShapeObject* self = (PyoaIntraPointerAppDef_oaOccShapeObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaOccShape)
    {
        PyParamoaIntraPointerAppDef_oaOccShape p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaOccShape_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaOccShape, Choices are:\n"
        "    (oaIntraPointerAppDef_oaOccShape)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaOccShape_tp_dealloc(PyoaIntraPointerAppDef_oaOccShapeObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaOccShape_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaOccShape value;
    int convert_status=PyoaIntraPointerAppDef_oaOccShape_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[53];
    sprintf(buffer,"<oaIntraPointerAppDef_oaOccShape::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaOccShape_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaOccShape v1;
    PyParamoaIntraPointerAppDef_oaOccShape v2;
    int convert_status1=PyoaIntraPointerAppDef_oaOccShape_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaOccShape_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaOccShape_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaOccShape* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaOccShape_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaOccShape**) ((PyoaIntraPointerAppDef_oaOccShapeObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaOccShape Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaOccShape_FromoaIntraPointerAppDef_oaOccShape(oaIntraPointerAppDef_oaOccShape** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaOccShape* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaOccShape_Type.tp_alloc(&PyoaIntraPointerAppDef_oaOccShape_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaOccShapeObject* self = (PyoaIntraPointerAppDef_oaOccShapeObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaOccShape_FromoaIntraPointerAppDef_oaOccShape(oaIntraPointerAppDef_oaOccShape* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaOccShape_Type.tp_alloc(&PyoaIntraPointerAppDef_oaOccShape_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaOccShapeObject* self = (PyoaIntraPointerAppDef_oaOccShapeObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccShape_get_doc[] = 
"Class: oaIntraPointerAppDef_oaOccShape, Function: get\n"
"  Paramegers: (oaOccShape)\n"
"    Calls: oaOccShape* get(const oaOccShape* object)\n"
"    Signature: get|ptr-oaOccShape|cptr-oaOccShape,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccShape_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaOccShape data;
    int convert_status=PyoaIntraPointerAppDef_oaOccShape_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaOccShapeObject* self=(PyoaIntraPointerAppDef_oaOccShapeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccShape p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccShape_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaOccShapep result= (data.DataCall()->get(p1.Data()));
        return PyoaOccShape_FromoaOccShape(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccShape_set_doc[] = 
"Class: oaIntraPointerAppDef_oaOccShape, Function: set\n"
"  Paramegers: (oaOccShape,oaOccShape)\n"
"    Calls: void set(oaOccShape* object,const oaOccShape* otherObject)\n"
"    Signature: set|void-void|ptr-oaOccShape,cptr-oaOccShape,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccShape_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaOccShape data;
    int convert_status=PyoaIntraPointerAppDef_oaOccShape_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaOccShapeObject* self=(PyoaIntraPointerAppDef_oaOccShapeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccShape p1;
    PyParamoaOccShape p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccShape_Convert,&p1,
          &PyoaOccShape_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccShape_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaOccShape, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccShape_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaOccShape data;
    int convert_status=PyoaIntraPointerAppDef_oaOccShape_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaOccShape_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaOccShape, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccShape_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaOccShape data;
  int convert_status=PyoaIntraPointerAppDef_oaOccShape_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaOccShape p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaOccShape_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaOccShape_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaOccShape_get,METH_VARARGS,oaIntraPointerAppDef_oaOccShape_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaOccShape_set,METH_VARARGS,oaIntraPointerAppDef_oaOccShape_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaOccShape_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaOccShape_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaOccShape_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaOccShape_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccShape_doc[] = 
"Class: oaIntraPointerAppDef_oaOccShape\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaOccShape)\n"
"    Calls: (const oaIntraPointerAppDef_oaOccShape&)\n"
"    Signature: oaIntraPointerAppDef_oaOccShape||cref-oaIntraPointerAppDef_oaOccShape,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaOccShape_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaOccShape",
    sizeof(PyoaIntraPointerAppDef_oaOccShapeObject),
    0,
    (destructor)oaIntraPointerAppDef_oaOccShape_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaOccShape_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaOccShape_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaOccShape_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaOccShape_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaOccShape_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccShape_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaOccShape, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaOccShape* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaOccShape|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaOccShape* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaOccShape|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccShape_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaOccShapep result= (oaIntraPointerAppDef_oaOccShape::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaOccShape_FromoaIntraPointerAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccShapep result= (oaIntraPointerAppDef_oaOccShape::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccShape_FromoaIntraPointerAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaOccShape, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccShape_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaOccShape, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaOccShape* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccShape|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaOccShape* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccShape|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaOccShape* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccShape|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaOccShape* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccShape|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccShape_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaOccShapep result= (oaIntraPointerAppDef_oaOccShape::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaOccShape_FromoaIntraPointerAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaOccShapep result= (oaIntraPointerAppDef_oaOccShape::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccShape_FromoaIntraPointerAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccShapep result= (oaIntraPointerAppDef_oaOccShape::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccShape_FromoaIntraPointerAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccShapep result= (oaIntraPointerAppDef_oaOccShape::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaOccShape_FromoaIntraPointerAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaOccShape, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaOccShape_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaOccShape_static_find,METH_VARARGS,oaIntraPointerAppDef_oaOccShape_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaOccShape_static_get,METH_VARARGS,oaIntraPointerAppDef_oaOccShape_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaOccShape_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaOccShape_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaOccShape\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaOccShape",
           (PyObject*)(&PyoaIntraPointerAppDef_oaOccShape_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaOccShape\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaOccShape_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaOccShape_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaOccTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaOccTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaOccTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaOccTermObject* self = (PyoaIntraPointerAppDef_oaOccTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaOccTerm)
    {
        PyParamoaIntraPointerAppDef_oaOccTerm p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaOccTerm_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaOccTerm, Choices are:\n"
        "    (oaIntraPointerAppDef_oaOccTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaOccTerm_tp_dealloc(PyoaIntraPointerAppDef_oaOccTermObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaOccTerm_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaOccTerm value;
    int convert_status=PyoaIntraPointerAppDef_oaOccTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaIntraPointerAppDef_oaOccTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaOccTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaOccTerm v1;
    PyParamoaIntraPointerAppDef_oaOccTerm v2;
    int convert_status1=PyoaIntraPointerAppDef_oaOccTerm_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaOccTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaOccTerm_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaOccTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaOccTerm_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaOccTerm**) ((PyoaIntraPointerAppDef_oaOccTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaOccTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaOccTerm_FromoaIntraPointerAppDef_oaOccTerm(oaIntraPointerAppDef_oaOccTerm** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaOccTerm* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaOccTerm_Type.tp_alloc(&PyoaIntraPointerAppDef_oaOccTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaOccTermObject* self = (PyoaIntraPointerAppDef_oaOccTermObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaOccTerm_FromoaIntraPointerAppDef_oaOccTerm(oaIntraPointerAppDef_oaOccTerm* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaOccTerm_Type.tp_alloc(&PyoaIntraPointerAppDef_oaOccTerm_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaOccTermObject* self = (PyoaIntraPointerAppDef_oaOccTermObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccTerm_get_doc[] = 
"Class: oaIntraPointerAppDef_oaOccTerm, Function: get\n"
"  Paramegers: (oaOccTerm)\n"
"    Calls: oaOccTerm* get(const oaOccTerm* object)\n"
"    Signature: get|ptr-oaOccTerm|cptr-oaOccTerm,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccTerm_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaOccTerm data;
    int convert_status=PyoaIntraPointerAppDef_oaOccTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaOccTermObject* self=(PyoaIntraPointerAppDef_oaOccTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaOccTermp result= (data.DataCall()->get(p1.Data()));
        return PyoaOccTerm_FromoaOccTerm(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccTerm_set_doc[] = 
"Class: oaIntraPointerAppDef_oaOccTerm, Function: set\n"
"  Paramegers: (oaOccTerm,oaOccTerm)\n"
"    Calls: void set(oaOccTerm* object,const oaOccTerm* otherObject)\n"
"    Signature: set|void-void|ptr-oaOccTerm,cptr-oaOccTerm,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccTerm_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaOccTerm data;
    int convert_status=PyoaIntraPointerAppDef_oaOccTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaOccTermObject* self=(PyoaIntraPointerAppDef_oaOccTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccTerm p1;
    PyParamoaOccTerm p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccTerm_Convert,&p1,
          &PyoaOccTerm_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccTerm_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaOccTerm, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccTerm_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaOccTerm data;
    int convert_status=PyoaIntraPointerAppDef_oaOccTerm_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaOccTerm_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaOccTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaOccTerm data;
  int convert_status=PyoaIntraPointerAppDef_oaOccTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaOccTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaOccTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaOccTerm_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaOccTerm_get,METH_VARARGS,oaIntraPointerAppDef_oaOccTerm_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaOccTerm_set,METH_VARARGS,oaIntraPointerAppDef_oaOccTerm_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaOccTerm_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaOccTerm_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaOccTerm_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaOccTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccTerm_doc[] = 
"Class: oaIntraPointerAppDef_oaOccTerm\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaOccTerm)\n"
"    Calls: (const oaIntraPointerAppDef_oaOccTerm&)\n"
"    Signature: oaIntraPointerAppDef_oaOccTerm||cref-oaIntraPointerAppDef_oaOccTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaOccTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaOccTerm",
    sizeof(PyoaIntraPointerAppDef_oaOccTermObject),
    0,
    (destructor)oaIntraPointerAppDef_oaOccTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaOccTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaOccTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaOccTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaOccTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaOccTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccTerm_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaOccTerm, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaOccTerm* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaOccTerm|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaOccTerm* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaOccTerm|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccTerm_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaOccTermp result= (oaIntraPointerAppDef_oaOccTerm::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaOccTerm_FromoaIntraPointerAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccTermp result= (oaIntraPointerAppDef_oaOccTerm::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccTerm_FromoaIntraPointerAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaOccTerm, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccTerm_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaOccTerm, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaOccTerm* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaOccTerm* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaOccTerm* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaOccTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccTerm_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaOccTermp result= (oaIntraPointerAppDef_oaOccTerm::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaOccTerm_FromoaIntraPointerAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaOccTermp result= (oaIntraPointerAppDef_oaOccTerm::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccTerm_FromoaIntraPointerAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccTermp result= (oaIntraPointerAppDef_oaOccTerm::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccTerm_FromoaIntraPointerAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccTermp result= (oaIntraPointerAppDef_oaOccTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaOccTerm_FromoaIntraPointerAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaOccTerm, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaOccTerm_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaOccTerm_static_find,METH_VARARGS,oaIntraPointerAppDef_oaOccTerm_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaOccTerm_static_get,METH_VARARGS,oaIntraPointerAppDef_oaOccTerm_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaOccTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaOccTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaOccTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaOccTerm",
           (PyObject*)(&PyoaIntraPointerAppDef_oaOccTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaOccTerm\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaOccTerm_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaOccTerm_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaOccVectorInstDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaOccVectorInstDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaOccVectorInstDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaOccVectorInstDefObject* self = (PyoaIntraPointerAppDef_oaOccVectorInstDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaOccVectorInstDef)
    {
        PyParamoaIntraPointerAppDef_oaOccVectorInstDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaOccVectorInstDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaOccVectorInstDef, Choices are:\n"
        "    (oaIntraPointerAppDef_oaOccVectorInstDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaOccVectorInstDef_tp_dealloc(PyoaIntraPointerAppDef_oaOccVectorInstDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaOccVectorInstDef_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaOccVectorInstDef value;
    int convert_status=PyoaIntraPointerAppDef_oaOccVectorInstDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[61];
    sprintf(buffer,"<oaIntraPointerAppDef_oaOccVectorInstDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaOccVectorInstDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaOccVectorInstDef v1;
    PyParamoaIntraPointerAppDef_oaOccVectorInstDef v2;
    int convert_status1=PyoaIntraPointerAppDef_oaOccVectorInstDef_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaOccVectorInstDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaOccVectorInstDef_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaOccVectorInstDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaOccVectorInstDef_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaOccVectorInstDef**) ((PyoaIntraPointerAppDef_oaOccVectorInstDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaOccVectorInstDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaOccVectorInstDef_FromoaIntraPointerAppDef_oaOccVectorInstDef(oaIntraPointerAppDef_oaOccVectorInstDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaOccVectorInstDef* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaOccVectorInstDef_Type.tp_alloc(&PyoaIntraPointerAppDef_oaOccVectorInstDef_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaOccVectorInstDefObject* self = (PyoaIntraPointerAppDef_oaOccVectorInstDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaOccVectorInstDef_FromoaIntraPointerAppDef_oaOccVectorInstDef(oaIntraPointerAppDef_oaOccVectorInstDef* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaOccVectorInstDef_Type.tp_alloc(&PyoaIntraPointerAppDef_oaOccVectorInstDef_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaOccVectorInstDefObject* self = (PyoaIntraPointerAppDef_oaOccVectorInstDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccVectorInstDef_get_doc[] = 
"Class: oaIntraPointerAppDef_oaOccVectorInstDef, Function: get\n"
"  Paramegers: (oaOccVectorInstDef)\n"
"    Calls: oaOccVectorInstDef* get(const oaOccVectorInstDef* object)\n"
"    Signature: get|ptr-oaOccVectorInstDef|cptr-oaOccVectorInstDef,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccVectorInstDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaOccVectorInstDef data;
    int convert_status=PyoaIntraPointerAppDef_oaOccVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaOccVectorInstDefObject* self=(PyoaIntraPointerAppDef_oaOccVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccVectorInstDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccVectorInstDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaOccVectorInstDefp result= (data.DataCall()->get(p1.Data()));
        return PyoaOccVectorInstDef_FromoaOccVectorInstDef(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccVectorInstDef_set_doc[] = 
"Class: oaIntraPointerAppDef_oaOccVectorInstDef, Function: set\n"
"  Paramegers: (oaOccVectorInstDef,oaOccVectorInstDef)\n"
"    Calls: void set(oaOccVectorInstDef* object,const oaOccVectorInstDef* otherObject)\n"
"    Signature: set|void-void|ptr-oaOccVectorInstDef,cptr-oaOccVectorInstDef,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccVectorInstDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaOccVectorInstDef data;
    int convert_status=PyoaIntraPointerAppDef_oaOccVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaOccVectorInstDefObject* self=(PyoaIntraPointerAppDef_oaOccVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccVectorInstDef p1;
    PyParamoaOccVectorInstDef p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccVectorInstDef_Convert,&p1,
          &PyoaOccVectorInstDef_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccVectorInstDef_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaOccVectorInstDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccVectorInstDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaOccVectorInstDef data;
    int convert_status=PyoaIntraPointerAppDef_oaOccVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaOccVectorInstDef_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaOccVectorInstDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccVectorInstDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaOccVectorInstDef data;
  int convert_status=PyoaIntraPointerAppDef_oaOccVectorInstDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaOccVectorInstDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaOccVectorInstDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaOccVectorInstDef_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaOccVectorInstDef_get,METH_VARARGS,oaIntraPointerAppDef_oaOccVectorInstDef_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaOccVectorInstDef_set,METH_VARARGS,oaIntraPointerAppDef_oaOccVectorInstDef_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaOccVectorInstDef_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaOccVectorInstDef_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaOccVectorInstDef_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaOccVectorInstDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccVectorInstDef_doc[] = 
"Class: oaIntraPointerAppDef_oaOccVectorInstDef\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaOccVectorInstDef)\n"
"    Calls: (const oaIntraPointerAppDef_oaOccVectorInstDef&)\n"
"    Signature: oaIntraPointerAppDef_oaOccVectorInstDef||cref-oaIntraPointerAppDef_oaOccVectorInstDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaOccVectorInstDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaOccVectorInstDef",
    sizeof(PyoaIntraPointerAppDef_oaOccVectorInstDefObject),
    0,
    (destructor)oaIntraPointerAppDef_oaOccVectorInstDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaOccVectorInstDef_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaOccVectorInstDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaOccVectorInstDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaOccVectorInstDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaOccVectorInstDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccVectorInstDef_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaOccVectorInstDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaOccVectorInstDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaOccVectorInstDef|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaOccVectorInstDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaOccVectorInstDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccVectorInstDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaOccVectorInstDefp result= (oaIntraPointerAppDef_oaOccVectorInstDef::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaOccVectorInstDef_FromoaIntraPointerAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccVectorInstDefp result= (oaIntraPointerAppDef_oaOccVectorInstDef::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccVectorInstDef_FromoaIntraPointerAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaOccVectorInstDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccVectorInstDef_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaOccVectorInstDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaOccVectorInstDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccVectorInstDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaOccVectorInstDef* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccVectorInstDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaOccVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaOccVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccVectorInstDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaOccVectorInstDefp result= (oaIntraPointerAppDef_oaOccVectorInstDef::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaOccVectorInstDef_FromoaIntraPointerAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaOccVectorInstDefp result= (oaIntraPointerAppDef_oaOccVectorInstDef::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccVectorInstDef_FromoaIntraPointerAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccVectorInstDefp result= (oaIntraPointerAppDef_oaOccVectorInstDef::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccVectorInstDef_FromoaIntraPointerAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccVectorInstDefp result= (oaIntraPointerAppDef_oaOccVectorInstDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaOccVectorInstDef_FromoaIntraPointerAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaOccVectorInstDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaOccVectorInstDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaOccVectorInstDef_static_find,METH_VARARGS,oaIntraPointerAppDef_oaOccVectorInstDef_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaOccVectorInstDef_static_get,METH_VARARGS,oaIntraPointerAppDef_oaOccVectorInstDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaOccVectorInstDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaOccVectorInstDef_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaOccVectorInstDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaOccVectorInstDef",
           (PyObject*)(&PyoaIntraPointerAppDef_oaOccVectorInstDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaOccVectorInstDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaOccVectorInstDef_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaOccVectorInstDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaOccurrence
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaOccurrence_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaOccurrence_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaOccurrenceObject* self = (PyoaIntraPointerAppDef_oaOccurrenceObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaOccurrence)
    {
        PyParamoaIntraPointerAppDef_oaOccurrence p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaOccurrence_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaOccurrence, Choices are:\n"
        "    (oaIntraPointerAppDef_oaOccurrence)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaOccurrence_tp_dealloc(PyoaIntraPointerAppDef_oaOccurrenceObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaOccurrence_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaOccurrence value;
    int convert_status=PyoaIntraPointerAppDef_oaOccurrence_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[55];
    sprintf(buffer,"<oaIntraPointerAppDef_oaOccurrence::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaOccurrence_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaOccurrence v1;
    PyParamoaIntraPointerAppDef_oaOccurrence v2;
    int convert_status1=PyoaIntraPointerAppDef_oaOccurrence_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaOccurrence_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaOccurrence_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaOccurrence* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaOccurrence_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaOccurrence**) ((PyoaIntraPointerAppDef_oaOccurrenceObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaOccurrence Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaOccurrence_FromoaIntraPointerAppDef_oaOccurrence(oaIntraPointerAppDef_oaOccurrence** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaOccurrence* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaOccurrence_Type.tp_alloc(&PyoaIntraPointerAppDef_oaOccurrence_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaOccurrenceObject* self = (PyoaIntraPointerAppDef_oaOccurrenceObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaOccurrence_FromoaIntraPointerAppDef_oaOccurrence(oaIntraPointerAppDef_oaOccurrence* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaOccurrence_Type.tp_alloc(&PyoaIntraPointerAppDef_oaOccurrence_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaOccurrenceObject* self = (PyoaIntraPointerAppDef_oaOccurrenceObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccurrence_get_doc[] = 
"Class: oaIntraPointerAppDef_oaOccurrence, Function: get\n"
"  Paramegers: (oaOccurrence)\n"
"    Calls: oaOccurrence* get(const oaOccurrence* object)\n"
"    Signature: get|ptr-oaOccurrence|cptr-oaOccurrence,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccurrence_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaOccurrence data;
    int convert_status=PyoaIntraPointerAppDef_oaOccurrence_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaOccurrenceObject* self=(PyoaIntraPointerAppDef_oaOccurrenceObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccurrence p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccurrence_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaOccurrencep result= (data.DataCall()->get(p1.Data()));
        return PyoaOccurrence_FromoaOccurrence(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccurrence_set_doc[] = 
"Class: oaIntraPointerAppDef_oaOccurrence, Function: set\n"
"  Paramegers: (oaOccurrence,oaOccurrence)\n"
"    Calls: void set(oaOccurrence* object,const oaOccurrence* otherObject)\n"
"    Signature: set|void-void|ptr-oaOccurrence,cptr-oaOccurrence,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccurrence_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaOccurrence data;
    int convert_status=PyoaIntraPointerAppDef_oaOccurrence_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaOccurrenceObject* self=(PyoaIntraPointerAppDef_oaOccurrenceObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccurrence p1;
    PyParamoaOccurrence p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccurrence_Convert,&p1,
          &PyoaOccurrence_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccurrence_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaOccurrence, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccurrence_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaOccurrence data;
    int convert_status=PyoaIntraPointerAppDef_oaOccurrence_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaOccurrence_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaOccurrence, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccurrence_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaOccurrence data;
  int convert_status=PyoaIntraPointerAppDef_oaOccurrence_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaOccurrence p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaOccurrence_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaOccurrence_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaOccurrence_get,METH_VARARGS,oaIntraPointerAppDef_oaOccurrence_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaOccurrence_set,METH_VARARGS,oaIntraPointerAppDef_oaOccurrence_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaOccurrence_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaOccurrence_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaOccurrence_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaOccurrence_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccurrence_doc[] = 
"Class: oaIntraPointerAppDef_oaOccurrence\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaOccurrence)\n"
"    Calls: (const oaIntraPointerAppDef_oaOccurrence&)\n"
"    Signature: oaIntraPointerAppDef_oaOccurrence||cref-oaIntraPointerAppDef_oaOccurrence,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaOccurrence_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaOccurrence",
    sizeof(PyoaIntraPointerAppDef_oaOccurrenceObject),
    0,
    (destructor)oaIntraPointerAppDef_oaOccurrence_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaOccurrence_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaOccurrence_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaOccurrence_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaOccurrence_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaOccurrence_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccurrence_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaOccurrence, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaOccurrence* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaOccurrence|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaOccurrence* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaOccurrence|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccurrence_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaOccurrencep result= (oaIntraPointerAppDef_oaOccurrence::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaOccurrence_FromoaIntraPointerAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccurrencep result= (oaIntraPointerAppDef_oaOccurrence::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccurrence_FromoaIntraPointerAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaOccurrence, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOccurrence_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaOccurrence, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaOccurrence* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccurrence|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaOccurrence* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccurrence|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaOccurrence* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccurrence|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaOccurrence* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOccurrence|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaOccurrence_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaOccurrencep result= (oaIntraPointerAppDef_oaOccurrence::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaOccurrence_FromoaIntraPointerAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaOccurrencep result= (oaIntraPointerAppDef_oaOccurrence::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccurrence_FromoaIntraPointerAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccurrencep result= (oaIntraPointerAppDef_oaOccurrence::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOccurrence_FromoaIntraPointerAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOccurrencep result= (oaIntraPointerAppDef_oaOccurrence::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaOccurrence_FromoaIntraPointerAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaOccurrence, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaOccurrence_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaOccurrence_static_find,METH_VARARGS,oaIntraPointerAppDef_oaOccurrence_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaOccurrence_static_get,METH_VARARGS,oaIntraPointerAppDef_oaOccurrence_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaOccurrence_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaOccurrence_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaOccurrence\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaOccurrence",
           (PyObject*)(&PyoaIntraPointerAppDef_oaOccurrence_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaOccurrence\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaOccurrence_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaOccurrence_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaOpPointHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaOpPointHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaOpPointHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaOpPointHeaderObject* self = (PyoaIntraPointerAppDef_oaOpPointHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaOpPointHeader)
    {
        PyParamoaIntraPointerAppDef_oaOpPointHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaOpPointHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaOpPointHeader, Choices are:\n"
        "    (oaIntraPointerAppDef_oaOpPointHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaOpPointHeader_tp_dealloc(PyoaIntraPointerAppDef_oaOpPointHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaOpPointHeader_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaOpPointHeader value;
    int convert_status=PyoaIntraPointerAppDef_oaOpPointHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[58];
    sprintf(buffer,"<oaIntraPointerAppDef_oaOpPointHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaOpPointHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaOpPointHeader v1;
    PyParamoaIntraPointerAppDef_oaOpPointHeader v2;
    int convert_status1=PyoaIntraPointerAppDef_oaOpPointHeader_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaOpPointHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaOpPointHeader_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaOpPointHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaOpPointHeader_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaOpPointHeader**) ((PyoaIntraPointerAppDef_oaOpPointHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaOpPointHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaOpPointHeader_FromoaIntraPointerAppDef_oaOpPointHeader(oaIntraPointerAppDef_oaOpPointHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaOpPointHeader* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaOpPointHeader_Type.tp_alloc(&PyoaIntraPointerAppDef_oaOpPointHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaOpPointHeaderObject* self = (PyoaIntraPointerAppDef_oaOpPointHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaOpPointHeader_FromoaIntraPointerAppDef_oaOpPointHeader(oaIntraPointerAppDef_oaOpPointHeader* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaOpPointHeader_Type.tp_alloc(&PyoaIntraPointerAppDef_oaOpPointHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaOpPointHeaderObject* self = (PyoaIntraPointerAppDef_oaOpPointHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOpPointHeader_get_doc[] = 
"Class: oaIntraPointerAppDef_oaOpPointHeader, Function: get\n"
"  Paramegers: (oaOpPointHeader)\n"
"    Calls: oaOpPointHeader* get(const oaOpPointHeader* object)\n"
"    Signature: get|ptr-oaOpPointHeader|cptr-oaOpPointHeader,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaOpPointHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaOpPointHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaOpPointHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaOpPointHeaderObject* self=(PyoaIntraPointerAppDef_oaOpPointHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOpPointHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOpPointHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaOpPointHeaderp result= (data.DataCall()->get(p1.Data()));
        return PyoaOpPointHeader_FromoaOpPointHeader(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOpPointHeader_set_doc[] = 
"Class: oaIntraPointerAppDef_oaOpPointHeader, Function: set\n"
"  Paramegers: (oaOpPointHeader,oaOpPointHeader)\n"
"    Calls: void set(oaOpPointHeader* object,const oaOpPointHeader* otherObject)\n"
"    Signature: set|void-void|ptr-oaOpPointHeader,cptr-oaOpPointHeader,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaOpPointHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaOpPointHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaOpPointHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaOpPointHeaderObject* self=(PyoaIntraPointerAppDef_oaOpPointHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOpPointHeader p1;
    PyParamoaOpPointHeader p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOpPointHeader_Convert,&p1,
          &PyoaOpPointHeader_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOpPointHeader_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaOpPointHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaOpPointHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaOpPointHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaOpPointHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaOpPointHeader_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaOpPointHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaOpPointHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaOpPointHeader data;
  int convert_status=PyoaIntraPointerAppDef_oaOpPointHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaOpPointHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaOpPointHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaOpPointHeader_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaOpPointHeader_get,METH_VARARGS,oaIntraPointerAppDef_oaOpPointHeader_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaOpPointHeader_set,METH_VARARGS,oaIntraPointerAppDef_oaOpPointHeader_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaOpPointHeader_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaOpPointHeader_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaOpPointHeader_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaOpPointHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOpPointHeader_doc[] = 
"Class: oaIntraPointerAppDef_oaOpPointHeader\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaOpPointHeader)\n"
"    Calls: (const oaIntraPointerAppDef_oaOpPointHeader&)\n"
"    Signature: oaIntraPointerAppDef_oaOpPointHeader||cref-oaIntraPointerAppDef_oaOpPointHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaOpPointHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaOpPointHeader",
    sizeof(PyoaIntraPointerAppDef_oaOpPointHeaderObject),
    0,
    (destructor)oaIntraPointerAppDef_oaOpPointHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaOpPointHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaOpPointHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaOpPointHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaOpPointHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaOpPointHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOpPointHeader_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaOpPointHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaOpPointHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaOpPointHeader|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaOpPointHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaOpPointHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaOpPointHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaOpPointHeaderp result= (oaIntraPointerAppDef_oaOpPointHeader::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaOpPointHeader_FromoaIntraPointerAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOpPointHeaderp result= (oaIntraPointerAppDef_oaOpPointHeader::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOpPointHeader_FromoaIntraPointerAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaOpPointHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaOpPointHeader_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaOpPointHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaOpPointHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOpPointHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaOpPointHeader* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOpPointHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaOpPointHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOpPointHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaOpPointHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaOpPointHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaOpPointHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaOpPointHeaderp result= (oaIntraPointerAppDef_oaOpPointHeader::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaOpPointHeader_FromoaIntraPointerAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaOpPointHeaderp result= (oaIntraPointerAppDef_oaOpPointHeader::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOpPointHeader_FromoaIntraPointerAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOpPointHeaderp result= (oaIntraPointerAppDef_oaOpPointHeader::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaOpPointHeader_FromoaIntraPointerAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaOpPointHeaderp result= (oaIntraPointerAppDef_oaOpPointHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaOpPointHeader_FromoaIntraPointerAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaOpPointHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaOpPointHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaOpPointHeader_static_find,METH_VARARGS,oaIntraPointerAppDef_oaOpPointHeader_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaOpPointHeader_static_get,METH_VARARGS,oaIntraPointerAppDef_oaOpPointHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaOpPointHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaOpPointHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaOpPointHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaOpPointHeader",
           (PyObject*)(&PyoaIntraPointerAppDef_oaOpPointHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaOpPointHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaOpPointHeader_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaOpPointHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}

