
/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaGCellPattern
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaGCellPattern_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaGCellPattern_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaGCellPatternObject* self = (PyoaInterPointerAppDef_oaGCellPatternObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaGCellPattern)
    {
        PyParamoaInterPointerAppDef_oaGCellPattern p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaGCellPattern_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaGCellPattern, Choices are:\n"
        "    (oaInterPointerAppDef_oaGCellPattern)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaGCellPattern_tp_dealloc(PyoaInterPointerAppDef_oaGCellPatternObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaGCellPattern_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaGCellPattern value;
    int convert_status=PyoaInterPointerAppDef_oaGCellPattern_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[57];
    sprintf(buffer,"<oaInterPointerAppDef_oaGCellPattern::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaGCellPattern_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaGCellPattern v1;
    PyParamoaInterPointerAppDef_oaGCellPattern v2;
    int convert_status1=PyoaInterPointerAppDef_oaGCellPattern_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaGCellPattern_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaGCellPattern_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaGCellPattern* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaGCellPattern_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaGCellPattern**) ((PyoaInterPointerAppDef_oaGCellPatternObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaGCellPattern Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaGCellPattern_FromoaInterPointerAppDef_oaGCellPattern(oaInterPointerAppDef_oaGCellPattern** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaGCellPattern* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaGCellPattern_Type.tp_alloc(&PyoaInterPointerAppDef_oaGCellPattern_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaGCellPatternObject* self = (PyoaInterPointerAppDef_oaGCellPatternObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaGCellPattern_FromoaInterPointerAppDef_oaGCellPattern(oaInterPointerAppDef_oaGCellPattern* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaGCellPattern_Type.tp_alloc(&PyoaInterPointerAppDef_oaGCellPattern_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaGCellPatternObject* self = (PyoaInterPointerAppDef_oaGCellPatternObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaGCellPattern_get_doc[] = 
"Class: oaInterPointerAppDef_oaGCellPattern, Function: get\n"
"  Paramegers: (oaGCellPattern)\n"
"    Calls: oaObject* get(const oaGCellPattern* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaGCellPattern,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaGCellPattern_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaGCellPattern data;
    int convert_status=PyoaInterPointerAppDef_oaGCellPattern_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaGCellPatternObject* self=(PyoaInterPointerAppDef_oaGCellPatternObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGCellPattern p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaGCellPattern_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaGCellPattern_set_doc[] = 
"Class: oaInterPointerAppDef_oaGCellPattern, Function: set\n"
"  Paramegers: (oaGCellPattern,oaObject)\n"
"    Calls: void set(oaGCellPattern* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaGCellPattern,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaGCellPattern_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaGCellPattern data;
    int convert_status=PyoaInterPointerAppDef_oaGCellPattern_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaGCellPatternObject* self=(PyoaInterPointerAppDef_oaGCellPatternObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGCellPattern p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaGCellPattern_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaGCellPattern_isNull_doc[] =
"Class: oaInterPointerAppDef_oaGCellPattern, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaGCellPattern_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaGCellPattern data;
    int convert_status=PyoaInterPointerAppDef_oaGCellPattern_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaGCellPattern_assign_doc[] = 
"Class: oaInterPointerAppDef_oaGCellPattern, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaGCellPattern_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaGCellPattern data;
  int convert_status=PyoaInterPointerAppDef_oaGCellPattern_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaGCellPattern p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaGCellPattern_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaGCellPattern_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaGCellPattern_get,METH_VARARGS,oaInterPointerAppDef_oaGCellPattern_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaGCellPattern_set,METH_VARARGS,oaInterPointerAppDef_oaGCellPattern_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaGCellPattern_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaGCellPattern_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaGCellPattern_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaGCellPattern_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaGCellPattern_doc[] = 
"Class: oaInterPointerAppDef_oaGCellPattern\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaGCellPattern)\n"
"    Calls: (const oaInterPointerAppDef_oaGCellPattern&)\n"
"    Signature: oaInterPointerAppDef_oaGCellPattern||cref-oaInterPointerAppDef_oaGCellPattern,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaGCellPattern_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaGCellPattern",
    sizeof(PyoaInterPointerAppDef_oaGCellPatternObject),
    0,
    (destructor)oaInterPointerAppDef_oaGCellPattern_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaGCellPattern_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaGCellPattern_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaGCellPattern_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaGCellPattern_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaGCellPattern_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaGCellPattern_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaGCellPattern, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaGCellPattern* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaGCellPattern|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaGCellPattern* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaGCellPattern|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaGCellPattern_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaGCellPatternp result= (oaInterPointerAppDef_oaGCellPattern::find(p1.Data()));
            return PyoaInterPointerAppDef_oaGCellPattern_FromoaInterPointerAppDef_oaGCellPattern(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaGCellPatternp result= (oaInterPointerAppDef_oaGCellPattern::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaGCellPattern_FromoaInterPointerAppDef_oaGCellPattern(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaGCellPattern, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaGCellPattern_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaGCellPattern, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaGCellPattern* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaGCellPattern|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaGCellPattern* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaGCellPattern|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaGCellPattern* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaGCellPattern|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaGCellPattern* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaGCellPattern|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaGCellPattern_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaGCellPatternp result= (oaInterPointerAppDef_oaGCellPattern::get(p1.Data()));
            return PyoaInterPointerAppDef_oaGCellPattern_FromoaInterPointerAppDef_oaGCellPattern(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaGCellPatternp result= (oaInterPointerAppDef_oaGCellPattern::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaGCellPattern_FromoaInterPointerAppDef_oaGCellPattern(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaGCellPatternp result= (oaInterPointerAppDef_oaGCellPattern::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaGCellPattern_FromoaInterPointerAppDef_oaGCellPattern(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaGCellPatternp result= (oaInterPointerAppDef_oaGCellPattern::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaGCellPattern_FromoaInterPointerAppDef_oaGCellPattern(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaGCellPattern, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaGCellPattern_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaGCellPattern_static_find,METH_VARARGS,oaInterPointerAppDef_oaGCellPattern_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaGCellPattern_static_get,METH_VARARGS,oaInterPointerAppDef_oaGCellPattern_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaGCellPattern_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaGCellPattern_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaGCellPattern\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaGCellPattern",
           (PyObject*)(&PyoaInterPointerAppDef_oaGCellPattern_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaGCellPattern\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaGCellPattern_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaGCellPattern_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaGroup
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaGroup_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaGroup_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaGroupObject* self = (PyoaInterPointerAppDef_oaGroupObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaGroup)
    {
        PyParamoaInterPointerAppDef_oaGroup p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaGroup_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaGroup, Choices are:\n"
        "    (oaInterPointerAppDef_oaGroup)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaGroup_tp_dealloc(PyoaInterPointerAppDef_oaGroupObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaGroup_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaGroup value;
    int convert_status=PyoaInterPointerAppDef_oaGroup_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaInterPointerAppDef_oaGroup::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaGroup_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaGroup v1;
    PyParamoaInterPointerAppDef_oaGroup v2;
    int convert_status1=PyoaInterPointerAppDef_oaGroup_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaGroup_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaGroup_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaGroup* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaGroup_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaGroup**) ((PyoaInterPointerAppDef_oaGroupObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaGroup Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaGroup_FromoaInterPointerAppDef_oaGroup(oaInterPointerAppDef_oaGroup** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaGroup* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaGroup_Type.tp_alloc(&PyoaInterPointerAppDef_oaGroup_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaGroupObject* self = (PyoaInterPointerAppDef_oaGroupObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaGroup_FromoaInterPointerAppDef_oaGroup(oaInterPointerAppDef_oaGroup* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaGroup_Type.tp_alloc(&PyoaInterPointerAppDef_oaGroup_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaGroupObject* self = (PyoaInterPointerAppDef_oaGroupObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaGroup_get_doc[] = 
"Class: oaInterPointerAppDef_oaGroup, Function: get\n"
"  Paramegers: (oaGroup)\n"
"    Calls: oaObject* get(const oaGroup* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaGroup,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaGroup_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaGroup data;
    int convert_status=PyoaInterPointerAppDef_oaGroup_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaGroupObject* self=(PyoaInterPointerAppDef_oaGroupObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGroup p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaGroup_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaGroup_set_doc[] = 
"Class: oaInterPointerAppDef_oaGroup, Function: set\n"
"  Paramegers: (oaGroup,oaObject)\n"
"    Calls: void set(oaGroup* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaGroup,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaGroup_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaGroup data;
    int convert_status=PyoaInterPointerAppDef_oaGroup_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaGroupObject* self=(PyoaInterPointerAppDef_oaGroupObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGroup p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaGroup_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaGroup_isNull_doc[] =
"Class: oaInterPointerAppDef_oaGroup, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaGroup_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaGroup data;
    int convert_status=PyoaInterPointerAppDef_oaGroup_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaGroup_assign_doc[] = 
"Class: oaInterPointerAppDef_oaGroup, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaGroup_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaGroup data;
  int convert_status=PyoaInterPointerAppDef_oaGroup_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaGroup p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaGroup_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaGroup_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaGroup_get,METH_VARARGS,oaInterPointerAppDef_oaGroup_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaGroup_set,METH_VARARGS,oaInterPointerAppDef_oaGroup_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaGroup_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaGroup_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaGroup_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaGroup_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaGroup_doc[] = 
"Class: oaInterPointerAppDef_oaGroup\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaGroup)\n"
"    Calls: (const oaInterPointerAppDef_oaGroup&)\n"
"    Signature: oaInterPointerAppDef_oaGroup||cref-oaInterPointerAppDef_oaGroup,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaGroup_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaGroup",
    sizeof(PyoaInterPointerAppDef_oaGroupObject),
    0,
    (destructor)oaInterPointerAppDef_oaGroup_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaGroup_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaGroup_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaGroup_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaGroup_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaGroup_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaGroup_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaGroup, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaGroup* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaGroup|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaGroup* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaGroup|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaGroup_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaGroupp result= (oaInterPointerAppDef_oaGroup::find(p1.Data()));
            return PyoaInterPointerAppDef_oaGroup_FromoaInterPointerAppDef_oaGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaGroupp result= (oaInterPointerAppDef_oaGroup::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaGroup_FromoaInterPointerAppDef_oaGroup(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaGroup, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaGroup_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaGroup, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaGroup* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaGroup|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaGroup* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaGroup|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaGroup* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaGroup|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaGroup* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaGroup|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaGroup_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaGroupp result= (oaInterPointerAppDef_oaGroup::get(p1.Data()));
            return PyoaInterPointerAppDef_oaGroup_FromoaInterPointerAppDef_oaGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaGroupp result= (oaInterPointerAppDef_oaGroup::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaGroup_FromoaInterPointerAppDef_oaGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaGroupp result= (oaInterPointerAppDef_oaGroup::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaGroup_FromoaInterPointerAppDef_oaGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaGroupp result= (oaInterPointerAppDef_oaGroup::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaGroup_FromoaInterPointerAppDef_oaGroup(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaGroup, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaGroup_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaGroup_static_find,METH_VARARGS,oaInterPointerAppDef_oaGroup_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaGroup_static_get,METH_VARARGS,oaInterPointerAppDef_oaGroup_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaGroup_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaGroup_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaGroup\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaGroup",
           (PyObject*)(&PyoaInterPointerAppDef_oaGroup_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaGroup\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaGroup_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaGroup_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaGroupMember
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaGroupMember_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaGroupMember_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaGroupMemberObject* self = (PyoaInterPointerAppDef_oaGroupMemberObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaGroupMember)
    {
        PyParamoaInterPointerAppDef_oaGroupMember p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaGroupMember_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaGroupMember, Choices are:\n"
        "    (oaInterPointerAppDef_oaGroupMember)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaGroupMember_tp_dealloc(PyoaInterPointerAppDef_oaGroupMemberObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaGroupMember_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaGroupMember value;
    int convert_status=PyoaInterPointerAppDef_oaGroupMember_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[56];
    sprintf(buffer,"<oaInterPointerAppDef_oaGroupMember::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaGroupMember_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaGroupMember v1;
    PyParamoaInterPointerAppDef_oaGroupMember v2;
    int convert_status1=PyoaInterPointerAppDef_oaGroupMember_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaGroupMember_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaGroupMember_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaGroupMember* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaGroupMember_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaGroupMember**) ((PyoaInterPointerAppDef_oaGroupMemberObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaGroupMember Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaGroupMember_FromoaInterPointerAppDef_oaGroupMember(oaInterPointerAppDef_oaGroupMember** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaGroupMember* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaGroupMember_Type.tp_alloc(&PyoaInterPointerAppDef_oaGroupMember_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaGroupMemberObject* self = (PyoaInterPointerAppDef_oaGroupMemberObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaGroupMember_FromoaInterPointerAppDef_oaGroupMember(oaInterPointerAppDef_oaGroupMember* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaGroupMember_Type.tp_alloc(&PyoaInterPointerAppDef_oaGroupMember_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaGroupMemberObject* self = (PyoaInterPointerAppDef_oaGroupMemberObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaGroupMember_get_doc[] = 
"Class: oaInterPointerAppDef_oaGroupMember, Function: get\n"
"  Paramegers: (oaGroupMember)\n"
"    Calls: oaObject* get(const oaGroupMember* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaGroupMember,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaGroupMember_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaGroupMember data;
    int convert_status=PyoaInterPointerAppDef_oaGroupMember_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaGroupMemberObject* self=(PyoaInterPointerAppDef_oaGroupMemberObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGroupMember p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaGroupMember_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaGroupMember_set_doc[] = 
"Class: oaInterPointerAppDef_oaGroupMember, Function: set\n"
"  Paramegers: (oaGroupMember,oaObject)\n"
"    Calls: void set(oaGroupMember* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaGroupMember,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaGroupMember_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaGroupMember data;
    int convert_status=PyoaInterPointerAppDef_oaGroupMember_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaGroupMemberObject* self=(PyoaInterPointerAppDef_oaGroupMemberObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGroupMember p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaGroupMember_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaGroupMember_isNull_doc[] =
"Class: oaInterPointerAppDef_oaGroupMember, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaGroupMember_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaGroupMember data;
    int convert_status=PyoaInterPointerAppDef_oaGroupMember_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaGroupMember_assign_doc[] = 
"Class: oaInterPointerAppDef_oaGroupMember, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaGroupMember_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaGroupMember data;
  int convert_status=PyoaInterPointerAppDef_oaGroupMember_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaGroupMember p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaGroupMember_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaGroupMember_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaGroupMember_get,METH_VARARGS,oaInterPointerAppDef_oaGroupMember_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaGroupMember_set,METH_VARARGS,oaInterPointerAppDef_oaGroupMember_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaGroupMember_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaGroupMember_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaGroupMember_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaGroupMember_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaGroupMember_doc[] = 
"Class: oaInterPointerAppDef_oaGroupMember\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaGroupMember)\n"
"    Calls: (const oaInterPointerAppDef_oaGroupMember&)\n"
"    Signature: oaInterPointerAppDef_oaGroupMember||cref-oaInterPointerAppDef_oaGroupMember,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaGroupMember_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaGroupMember",
    sizeof(PyoaInterPointerAppDef_oaGroupMemberObject),
    0,
    (destructor)oaInterPointerAppDef_oaGroupMember_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaGroupMember_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaGroupMember_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaGroupMember_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaGroupMember_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaGroupMember_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaGroupMember_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaGroupMember, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaGroupMember* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaGroupMember|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaGroupMember* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaGroupMember|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaGroupMember_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaGroupMemberp result= (oaInterPointerAppDef_oaGroupMember::find(p1.Data()));
            return PyoaInterPointerAppDef_oaGroupMember_FromoaInterPointerAppDef_oaGroupMember(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaGroupMemberp result= (oaInterPointerAppDef_oaGroupMember::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaGroupMember_FromoaInterPointerAppDef_oaGroupMember(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaGroupMember, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaGroupMember_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaGroupMember, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaGroupMember* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaGroupMember|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaGroupMember* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaGroupMember|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaGroupMember* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaGroupMember|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaGroupMember* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaGroupMember|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaGroupMember_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaGroupMemberp result= (oaInterPointerAppDef_oaGroupMember::get(p1.Data()));
            return PyoaInterPointerAppDef_oaGroupMember_FromoaInterPointerAppDef_oaGroupMember(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaGroupMemberp result= (oaInterPointerAppDef_oaGroupMember::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaGroupMember_FromoaInterPointerAppDef_oaGroupMember(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaGroupMemberp result= (oaInterPointerAppDef_oaGroupMember::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaGroupMember_FromoaInterPointerAppDef_oaGroupMember(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaGroupMemberp result= (oaInterPointerAppDef_oaGroupMember::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaGroupMember_FromoaInterPointerAppDef_oaGroupMember(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaGroupMember, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaGroupMember_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaGroupMember_static_find,METH_VARARGS,oaInterPointerAppDef_oaGroupMember_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaGroupMember_static_get,METH_VARARGS,oaInterPointerAppDef_oaGroupMember_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaGroupMember_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaGroupMember_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaGroupMember\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaGroupMember",
           (PyObject*)(&PyoaInterPointerAppDef_oaGroupMember_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaGroupMember\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaGroupMember_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaGroupMember_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaGuide
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaGuide_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaGuide_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaGuideObject* self = (PyoaInterPointerAppDef_oaGuideObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaGuide)
    {
        PyParamoaInterPointerAppDef_oaGuide p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaGuide_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaGuide, Choices are:\n"
        "    (oaInterPointerAppDef_oaGuide)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaGuide_tp_dealloc(PyoaInterPointerAppDef_oaGuideObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaGuide_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaGuide value;
    int convert_status=PyoaInterPointerAppDef_oaGuide_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaInterPointerAppDef_oaGuide::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaGuide_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaGuide v1;
    PyParamoaInterPointerAppDef_oaGuide v2;
    int convert_status1=PyoaInterPointerAppDef_oaGuide_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaGuide_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaGuide_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaGuide* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaGuide_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaGuide**) ((PyoaInterPointerAppDef_oaGuideObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaGuide Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaGuide_FromoaInterPointerAppDef_oaGuide(oaInterPointerAppDef_oaGuide** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaGuide* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaGuide_Type.tp_alloc(&PyoaInterPointerAppDef_oaGuide_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaGuideObject* self = (PyoaInterPointerAppDef_oaGuideObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaGuide_FromoaInterPointerAppDef_oaGuide(oaInterPointerAppDef_oaGuide* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaGuide_Type.tp_alloc(&PyoaInterPointerAppDef_oaGuide_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaGuideObject* self = (PyoaInterPointerAppDef_oaGuideObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaGuide_get_doc[] = 
"Class: oaInterPointerAppDef_oaGuide, Function: get\n"
"  Paramegers: (oaGuide)\n"
"    Calls: oaObject* get(const oaGuide* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaGuide,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaGuide_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaGuide data;
    int convert_status=PyoaInterPointerAppDef_oaGuide_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaGuideObject* self=(PyoaInterPointerAppDef_oaGuideObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGuide p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaGuide_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaGuide_set_doc[] = 
"Class: oaInterPointerAppDef_oaGuide, Function: set\n"
"  Paramegers: (oaGuide,oaObject)\n"
"    Calls: void set(oaGuide* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaGuide,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaGuide_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaGuide data;
    int convert_status=PyoaInterPointerAppDef_oaGuide_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaGuideObject* self=(PyoaInterPointerAppDef_oaGuideObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGuide p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaGuide_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaGuide_isNull_doc[] =
"Class: oaInterPointerAppDef_oaGuide, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaGuide_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaGuide data;
    int convert_status=PyoaInterPointerAppDef_oaGuide_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaGuide_assign_doc[] = 
"Class: oaInterPointerAppDef_oaGuide, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaGuide_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaGuide data;
  int convert_status=PyoaInterPointerAppDef_oaGuide_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaGuide p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaGuide_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaGuide_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaGuide_get,METH_VARARGS,oaInterPointerAppDef_oaGuide_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaGuide_set,METH_VARARGS,oaInterPointerAppDef_oaGuide_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaGuide_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaGuide_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaGuide_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaGuide_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaGuide_doc[] = 
"Class: oaInterPointerAppDef_oaGuide\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaGuide)\n"
"    Calls: (const oaInterPointerAppDef_oaGuide&)\n"
"    Signature: oaInterPointerAppDef_oaGuide||cref-oaInterPointerAppDef_oaGuide,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaGuide_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaGuide",
    sizeof(PyoaInterPointerAppDef_oaGuideObject),
    0,
    (destructor)oaInterPointerAppDef_oaGuide_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaGuide_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaGuide_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaGuide_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaGuide_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaGuide_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaGuide_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaGuide, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaGuide* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaGuide|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaGuide* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaGuide|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaGuide_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaGuidep result= (oaInterPointerAppDef_oaGuide::find(p1.Data()));
            return PyoaInterPointerAppDef_oaGuide_FromoaInterPointerAppDef_oaGuide(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaGuidep result= (oaInterPointerAppDef_oaGuide::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaGuide_FromoaInterPointerAppDef_oaGuide(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaGuide, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaGuide_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaGuide, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaGuide* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaGuide|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaGuide* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaGuide|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaGuide* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaGuide|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaGuide* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaGuide|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaGuide_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaGuidep result= (oaInterPointerAppDef_oaGuide::get(p1.Data()));
            return PyoaInterPointerAppDef_oaGuide_FromoaInterPointerAppDef_oaGuide(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaGuidep result= (oaInterPointerAppDef_oaGuide::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaGuide_FromoaInterPointerAppDef_oaGuide(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaGuidep result= (oaInterPointerAppDef_oaGuide::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaGuide_FromoaInterPointerAppDef_oaGuide(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaGuidep result= (oaInterPointerAppDef_oaGuide::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaGuide_FromoaInterPointerAppDef_oaGuide(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaGuide, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaGuide_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaGuide_static_find,METH_VARARGS,oaInterPointerAppDef_oaGuide_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaGuide_static_get,METH_VARARGS,oaInterPointerAppDef_oaGuide_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaGuide_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaGuide_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaGuide\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaGuide",
           (PyObject*)(&PyoaInterPointerAppDef_oaGuide_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaGuide\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaGuide_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaGuide_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaImage
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaImage_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaImage_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaImageObject* self = (PyoaInterPointerAppDef_oaImageObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaImage)
    {
        PyParamoaInterPointerAppDef_oaImage p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaImage_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaImage, Choices are:\n"
        "    (oaInterPointerAppDef_oaImage)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaImage_tp_dealloc(PyoaInterPointerAppDef_oaImageObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaImage_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaImage value;
    int convert_status=PyoaInterPointerAppDef_oaImage_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaInterPointerAppDef_oaImage::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaImage_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaImage v1;
    PyParamoaInterPointerAppDef_oaImage v2;
    int convert_status1=PyoaInterPointerAppDef_oaImage_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaImage_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaImage_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaImage* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaImage_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaImage**) ((PyoaInterPointerAppDef_oaImageObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaImage Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaImage_FromoaInterPointerAppDef_oaImage(oaInterPointerAppDef_oaImage** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaImage* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaImage_Type.tp_alloc(&PyoaInterPointerAppDef_oaImage_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaImageObject* self = (PyoaInterPointerAppDef_oaImageObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaImage_FromoaInterPointerAppDef_oaImage(oaInterPointerAppDef_oaImage* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaImage_Type.tp_alloc(&PyoaInterPointerAppDef_oaImage_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaImageObject* self = (PyoaInterPointerAppDef_oaImageObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaImage_get_doc[] = 
"Class: oaInterPointerAppDef_oaImage, Function: get\n"
"  Paramegers: (oaImage)\n"
"    Calls: oaObject* get(const oaImage* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaImage,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaImage_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaImage data;
    int convert_status=PyoaInterPointerAppDef_oaImage_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaImageObject* self=(PyoaInterPointerAppDef_oaImageObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaImage p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaImage_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaImage_set_doc[] = 
"Class: oaInterPointerAppDef_oaImage, Function: set\n"
"  Paramegers: (oaImage,oaObject)\n"
"    Calls: void set(oaImage* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaImage,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaImage_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaImage data;
    int convert_status=PyoaInterPointerAppDef_oaImage_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaImageObject* self=(PyoaInterPointerAppDef_oaImageObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaImage p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaImage_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaImage_isNull_doc[] =
"Class: oaInterPointerAppDef_oaImage, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaImage_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaImage data;
    int convert_status=PyoaInterPointerAppDef_oaImage_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaImage_assign_doc[] = 
"Class: oaInterPointerAppDef_oaImage, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaImage_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaImage data;
  int convert_status=PyoaInterPointerAppDef_oaImage_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaImage p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaImage_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaImage_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaImage_get,METH_VARARGS,oaInterPointerAppDef_oaImage_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaImage_set,METH_VARARGS,oaInterPointerAppDef_oaImage_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaImage_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaImage_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaImage_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaImage_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaImage_doc[] = 
"Class: oaInterPointerAppDef_oaImage\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaImage)\n"
"    Calls: (const oaInterPointerAppDef_oaImage&)\n"
"    Signature: oaInterPointerAppDef_oaImage||cref-oaInterPointerAppDef_oaImage,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaImage_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaImage",
    sizeof(PyoaInterPointerAppDef_oaImageObject),
    0,
    (destructor)oaInterPointerAppDef_oaImage_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaImage_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaImage_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaImage_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaImage_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaImage_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaImage_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaImage, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaImage* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaImage|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaImage* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaImage|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaImage_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaImagep result= (oaInterPointerAppDef_oaImage::find(p1.Data()));
            return PyoaInterPointerAppDef_oaImage_FromoaInterPointerAppDef_oaImage(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaImagep result= (oaInterPointerAppDef_oaImage::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaImage_FromoaInterPointerAppDef_oaImage(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaImage, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaImage_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaImage, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaImage* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaImage|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaImage* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaImage|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaImage* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaImage|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaImage* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaImage|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaImage_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaImagep result= (oaInterPointerAppDef_oaImage::get(p1.Data()));
            return PyoaInterPointerAppDef_oaImage_FromoaInterPointerAppDef_oaImage(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaImagep result= (oaInterPointerAppDef_oaImage::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaImage_FromoaInterPointerAppDef_oaImage(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaImagep result= (oaInterPointerAppDef_oaImage::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaImage_FromoaInterPointerAppDef_oaImage(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaImagep result= (oaInterPointerAppDef_oaImage::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaImage_FromoaInterPointerAppDef_oaImage(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaImage, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaImage_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaImage_static_find,METH_VARARGS,oaInterPointerAppDef_oaImage_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaImage_static_get,METH_VARARGS,oaInterPointerAppDef_oaImage_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaImage_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaImage_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaImage\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaImage",
           (PyObject*)(&PyoaInterPointerAppDef_oaImage_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaImage\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaImage_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaImage_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaInst
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaInst_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaInst_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaInstObject* self = (PyoaInterPointerAppDef_oaInstObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaInst)
    {
        PyParamoaInterPointerAppDef_oaInst p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaInst_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaInst, Choices are:\n"
        "    (oaInterPointerAppDef_oaInst)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaInst_tp_dealloc(PyoaInterPointerAppDef_oaInstObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaInst_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaInst value;
    int convert_status=PyoaInterPointerAppDef_oaInst_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[49];
    sprintf(buffer,"<oaInterPointerAppDef_oaInst::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaInst_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaInst v1;
    PyParamoaInterPointerAppDef_oaInst v2;
    int convert_status1=PyoaInterPointerAppDef_oaInst_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaInst_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaInst_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaInst* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaInst_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaInst**) ((PyoaInterPointerAppDef_oaInstObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaInst Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaInst_FromoaInterPointerAppDef_oaInst(oaInterPointerAppDef_oaInst** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaInst* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaInst_Type.tp_alloc(&PyoaInterPointerAppDef_oaInst_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaInstObject* self = (PyoaInterPointerAppDef_oaInstObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaInst_FromoaInterPointerAppDef_oaInst(oaInterPointerAppDef_oaInst* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaInst_Type.tp_alloc(&PyoaInterPointerAppDef_oaInst_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaInstObject* self = (PyoaInterPointerAppDef_oaInstObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaInst_get_doc[] = 
"Class: oaInterPointerAppDef_oaInst, Function: get\n"
"  Paramegers: (oaInst)\n"
"    Calls: oaObject* get(const oaInst* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaInst,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaInst_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaInst data;
    int convert_status=PyoaInterPointerAppDef_oaInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaInstObject* self=(PyoaInterPointerAppDef_oaInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaInst_set_doc[] = 
"Class: oaInterPointerAppDef_oaInst, Function: set\n"
"  Paramegers: (oaInst,oaObject)\n"
"    Calls: void set(oaInst* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaInst,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaInst_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaInst data;
    int convert_status=PyoaInterPointerAppDef_oaInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaInstObject* self=(PyoaInterPointerAppDef_oaInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaInst p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaInst_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaInst_isNull_doc[] =
"Class: oaInterPointerAppDef_oaInst, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaInst_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaInst data;
    int convert_status=PyoaInterPointerAppDef_oaInst_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaInst_assign_doc[] = 
"Class: oaInterPointerAppDef_oaInst, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaInst_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaInst data;
  int convert_status=PyoaInterPointerAppDef_oaInst_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaInst p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaInst_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaInst_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaInst_get,METH_VARARGS,oaInterPointerAppDef_oaInst_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaInst_set,METH_VARARGS,oaInterPointerAppDef_oaInst_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaInst_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaInst_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaInst_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaInst_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaInst_doc[] = 
"Class: oaInterPointerAppDef_oaInst\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaInst)\n"
"    Calls: (const oaInterPointerAppDef_oaInst&)\n"
"    Signature: oaInterPointerAppDef_oaInst||cref-oaInterPointerAppDef_oaInst,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaInst_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaInst",
    sizeof(PyoaInterPointerAppDef_oaInstObject),
    0,
    (destructor)oaInterPointerAppDef_oaInst_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaInst_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaInst_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaInst_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaInst_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaInst_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaInst_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaInst, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaInst* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaInst|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaInst* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaInst|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaInst_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaInstp result= (oaInterPointerAppDef_oaInst::find(p1.Data()));
            return PyoaInterPointerAppDef_oaInst_FromoaInterPointerAppDef_oaInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaInstp result= (oaInterPointerAppDef_oaInst::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaInst_FromoaInterPointerAppDef_oaInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaInst, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaInst_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaInst, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaInst* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaInst|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaInst* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaInst|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaInst* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaInst* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaInst_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaInstp result= (oaInterPointerAppDef_oaInst::get(p1.Data()));
            return PyoaInterPointerAppDef_oaInst_FromoaInterPointerAppDef_oaInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaInstp result= (oaInterPointerAppDef_oaInst::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaInst_FromoaInterPointerAppDef_oaInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaInstp result= (oaInterPointerAppDef_oaInst::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaInst_FromoaInterPointerAppDef_oaInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaInstp result= (oaInterPointerAppDef_oaInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaInst_FromoaInterPointerAppDef_oaInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaInst, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaInst_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaInst_static_find,METH_VARARGS,oaInterPointerAppDef_oaInst_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaInst_static_get,METH_VARARGS,oaInterPointerAppDef_oaInst_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaInst_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaInst_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaInst\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaInst",
           (PyObject*)(&PyoaInterPointerAppDef_oaInst_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaInst\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaInst_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaInst_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaInstHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaInstHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaInstHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaInstHeaderObject* self = (PyoaInterPointerAppDef_oaInstHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaInstHeader)
    {
        PyParamoaInterPointerAppDef_oaInstHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaInstHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaInstHeader, Choices are:\n"
        "    (oaInterPointerAppDef_oaInstHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaInstHeader_tp_dealloc(PyoaInterPointerAppDef_oaInstHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaInstHeader_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaInstHeader value;
    int convert_status=PyoaInterPointerAppDef_oaInstHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[55];
    sprintf(buffer,"<oaInterPointerAppDef_oaInstHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaInstHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaInstHeader v1;
    PyParamoaInterPointerAppDef_oaInstHeader v2;
    int convert_status1=PyoaInterPointerAppDef_oaInstHeader_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaInstHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaInstHeader_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaInstHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaInstHeader_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaInstHeader**) ((PyoaInterPointerAppDef_oaInstHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaInstHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaInstHeader_FromoaInterPointerAppDef_oaInstHeader(oaInterPointerAppDef_oaInstHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaInstHeader* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaInstHeader_Type.tp_alloc(&PyoaInterPointerAppDef_oaInstHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaInstHeaderObject* self = (PyoaInterPointerAppDef_oaInstHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaInstHeader_FromoaInterPointerAppDef_oaInstHeader(oaInterPointerAppDef_oaInstHeader* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaInstHeader_Type.tp_alloc(&PyoaInterPointerAppDef_oaInstHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaInstHeaderObject* self = (PyoaInterPointerAppDef_oaInstHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaInstHeader_get_doc[] = 
"Class: oaInterPointerAppDef_oaInstHeader, Function: get\n"
"  Paramegers: (oaInstHeader)\n"
"    Calls: oaObject* get(const oaInstHeader* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaInstHeader,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaInstHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaInstHeader data;
    int convert_status=PyoaInterPointerAppDef_oaInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaInstHeaderObject* self=(PyoaInterPointerAppDef_oaInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaInstHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaInstHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaInstHeader_set_doc[] = 
"Class: oaInterPointerAppDef_oaInstHeader, Function: set\n"
"  Paramegers: (oaInstHeader,oaObject)\n"
"    Calls: void set(oaInstHeader* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaInstHeader,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaInstHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaInstHeader data;
    int convert_status=PyoaInterPointerAppDef_oaInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaInstHeaderObject* self=(PyoaInterPointerAppDef_oaInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaInstHeader p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaInstHeader_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaInstHeader_isNull_doc[] =
"Class: oaInterPointerAppDef_oaInstHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaInstHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaInstHeader data;
    int convert_status=PyoaInterPointerAppDef_oaInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaInstHeader_assign_doc[] = 
"Class: oaInterPointerAppDef_oaInstHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaInstHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaInstHeader data;
  int convert_status=PyoaInterPointerAppDef_oaInstHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaInstHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaInstHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaInstHeader_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaInstHeader_get,METH_VARARGS,oaInterPointerAppDef_oaInstHeader_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaInstHeader_set,METH_VARARGS,oaInterPointerAppDef_oaInstHeader_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaInstHeader_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaInstHeader_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaInstHeader_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaInstHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaInstHeader_doc[] = 
"Class: oaInterPointerAppDef_oaInstHeader\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaInstHeader)\n"
"    Calls: (const oaInterPointerAppDef_oaInstHeader&)\n"
"    Signature: oaInterPointerAppDef_oaInstHeader||cref-oaInterPointerAppDef_oaInstHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaInstHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaInstHeader",
    sizeof(PyoaInterPointerAppDef_oaInstHeaderObject),
    0,
    (destructor)oaInterPointerAppDef_oaInstHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaInstHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaInstHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaInstHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaInstHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaInstHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaInstHeader_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaInstHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaInstHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaInstHeader|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaInstHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaInstHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaInstHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaInstHeaderp result= (oaInterPointerAppDef_oaInstHeader::find(p1.Data()));
            return PyoaInterPointerAppDef_oaInstHeader_FromoaInterPointerAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaInstHeaderp result= (oaInterPointerAppDef_oaInstHeader::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaInstHeader_FromoaInterPointerAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaInstHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaInstHeader_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaInstHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaInstHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaInstHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaInstHeader* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaInstHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaInstHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaInstHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaInstHeaderp result= (oaInterPointerAppDef_oaInstHeader::get(p1.Data()));
            return PyoaInterPointerAppDef_oaInstHeader_FromoaInterPointerAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaInstHeaderp result= (oaInterPointerAppDef_oaInstHeader::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaInstHeader_FromoaInterPointerAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaInstHeaderp result= (oaInterPointerAppDef_oaInstHeader::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaInstHeader_FromoaInterPointerAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaInstHeaderp result= (oaInterPointerAppDef_oaInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaInstHeader_FromoaInterPointerAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaInstHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaInstHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaInstHeader_static_find,METH_VARARGS,oaInterPointerAppDef_oaInstHeader_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaInstHeader_static_get,METH_VARARGS,oaInterPointerAppDef_oaInstHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaInstHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaInstHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaInstHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaInstHeader",
           (PyObject*)(&PyoaInterPointerAppDef_oaInstHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaInstHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaInstHeader_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaInstHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaInstTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaInstTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaInstTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaInstTermObject* self = (PyoaInterPointerAppDef_oaInstTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaInstTerm)
    {
        PyParamoaInterPointerAppDef_oaInstTerm p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaInstTerm_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaInstTerm, Choices are:\n"
        "    (oaInterPointerAppDef_oaInstTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaInstTerm_tp_dealloc(PyoaInterPointerAppDef_oaInstTermObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaInstTerm_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaInstTerm value;
    int convert_status=PyoaInterPointerAppDef_oaInstTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[53];
    sprintf(buffer,"<oaInterPointerAppDef_oaInstTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaInstTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaInstTerm v1;
    PyParamoaInterPointerAppDef_oaInstTerm v2;
    int convert_status1=PyoaInterPointerAppDef_oaInstTerm_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaInstTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaInstTerm_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaInstTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaInstTerm_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaInstTerm**) ((PyoaInterPointerAppDef_oaInstTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaInstTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaInstTerm_FromoaInterPointerAppDef_oaInstTerm(oaInterPointerAppDef_oaInstTerm** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaInstTerm* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaInstTerm_Type.tp_alloc(&PyoaInterPointerAppDef_oaInstTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaInstTermObject* self = (PyoaInterPointerAppDef_oaInstTermObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaInstTerm_FromoaInterPointerAppDef_oaInstTerm(oaInterPointerAppDef_oaInstTerm* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaInstTerm_Type.tp_alloc(&PyoaInterPointerAppDef_oaInstTerm_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaInstTermObject* self = (PyoaInterPointerAppDef_oaInstTermObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaInstTerm_get_doc[] = 
"Class: oaInterPointerAppDef_oaInstTerm, Function: get\n"
"  Paramegers: (oaInstTerm)\n"
"    Calls: oaObject* get(const oaInstTerm* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaInstTerm,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaInstTerm_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaInstTerm data;
    int convert_status=PyoaInterPointerAppDef_oaInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaInstTermObject* self=(PyoaInterPointerAppDef_oaInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaInstTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaInstTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaInstTerm_set_doc[] = 
"Class: oaInterPointerAppDef_oaInstTerm, Function: set\n"
"  Paramegers: (oaInstTerm,oaObject)\n"
"    Calls: void set(oaInstTerm* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaInstTerm,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaInstTerm_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaInstTerm data;
    int convert_status=PyoaInterPointerAppDef_oaInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaInstTermObject* self=(PyoaInterPointerAppDef_oaInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaInstTerm p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaInstTerm_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaInstTerm_isNull_doc[] =
"Class: oaInterPointerAppDef_oaInstTerm, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaInstTerm_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaInstTerm data;
    int convert_status=PyoaInterPointerAppDef_oaInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaInstTerm_assign_doc[] = 
"Class: oaInterPointerAppDef_oaInstTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaInstTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaInstTerm data;
  int convert_status=PyoaInterPointerAppDef_oaInstTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaInstTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaInstTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaInstTerm_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaInstTerm_get,METH_VARARGS,oaInterPointerAppDef_oaInstTerm_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaInstTerm_set,METH_VARARGS,oaInterPointerAppDef_oaInstTerm_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaInstTerm_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaInstTerm_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaInstTerm_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaInstTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaInstTerm_doc[] = 
"Class: oaInterPointerAppDef_oaInstTerm\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaInstTerm)\n"
"    Calls: (const oaInterPointerAppDef_oaInstTerm&)\n"
"    Signature: oaInterPointerAppDef_oaInstTerm||cref-oaInterPointerAppDef_oaInstTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaInstTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaInstTerm",
    sizeof(PyoaInterPointerAppDef_oaInstTermObject),
    0,
    (destructor)oaInterPointerAppDef_oaInstTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaInstTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaInstTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaInstTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaInstTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaInstTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaInstTerm_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaInstTerm, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaInstTerm* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaInstTerm|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaInstTerm* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaInstTerm|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaInstTerm_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaInstTermp result= (oaInterPointerAppDef_oaInstTerm::find(p1.Data()));
            return PyoaInterPointerAppDef_oaInstTerm_FromoaInterPointerAppDef_oaInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaInstTermp result= (oaInterPointerAppDef_oaInstTerm::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaInstTerm_FromoaInterPointerAppDef_oaInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaInstTerm, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaInstTerm_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaInstTerm, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaInstTerm* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaInstTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaInstTerm* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaInstTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaInstTerm* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaInstTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaInstTerm_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaInstTermp result= (oaInterPointerAppDef_oaInstTerm::get(p1.Data()));
            return PyoaInterPointerAppDef_oaInstTerm_FromoaInterPointerAppDef_oaInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaInstTermp result= (oaInterPointerAppDef_oaInstTerm::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaInstTerm_FromoaInterPointerAppDef_oaInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaInstTermp result= (oaInterPointerAppDef_oaInstTerm::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaInstTerm_FromoaInterPointerAppDef_oaInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaInstTermp result= (oaInterPointerAppDef_oaInstTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaInstTerm_FromoaInterPointerAppDef_oaInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaInstTerm, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaInstTerm_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaInstTerm_static_find,METH_VARARGS,oaInterPointerAppDef_oaInstTerm_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaInstTerm_static_get,METH_VARARGS,oaInterPointerAppDef_oaInstTerm_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaInstTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaInstTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaInstTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaInstTerm",
           (PyObject*)(&PyoaInterPointerAppDef_oaInstTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaInstTerm\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaInstTerm_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaInstTerm_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaLPPHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaLPPHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaLPPHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaLPPHeaderObject* self = (PyoaInterPointerAppDef_oaLPPHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaLPPHeader)
    {
        PyParamoaInterPointerAppDef_oaLPPHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaLPPHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaLPPHeader, Choices are:\n"
        "    (oaInterPointerAppDef_oaLPPHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaLPPHeader_tp_dealloc(PyoaInterPointerAppDef_oaLPPHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaLPPHeader_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaLPPHeader value;
    int convert_status=PyoaInterPointerAppDef_oaLPPHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[54];
    sprintf(buffer,"<oaInterPointerAppDef_oaLPPHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaLPPHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaLPPHeader v1;
    PyParamoaInterPointerAppDef_oaLPPHeader v2;
    int convert_status1=PyoaInterPointerAppDef_oaLPPHeader_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaLPPHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaLPPHeader_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaLPPHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaLPPHeader_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaLPPHeader**) ((PyoaInterPointerAppDef_oaLPPHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaLPPHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaLPPHeader_FromoaInterPointerAppDef_oaLPPHeader(oaInterPointerAppDef_oaLPPHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaLPPHeader* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaLPPHeader_Type.tp_alloc(&PyoaInterPointerAppDef_oaLPPHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaLPPHeaderObject* self = (PyoaInterPointerAppDef_oaLPPHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaLPPHeader_FromoaInterPointerAppDef_oaLPPHeader(oaInterPointerAppDef_oaLPPHeader* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaLPPHeader_Type.tp_alloc(&PyoaInterPointerAppDef_oaLPPHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaLPPHeaderObject* self = (PyoaInterPointerAppDef_oaLPPHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaLPPHeader_get_doc[] = 
"Class: oaInterPointerAppDef_oaLPPHeader, Function: get\n"
"  Paramegers: (oaLPPHeader)\n"
"    Calls: oaObject* get(const oaLPPHeader* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaLPPHeader,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaLPPHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaLPPHeader data;
    int convert_status=PyoaInterPointerAppDef_oaLPPHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaLPPHeaderObject* self=(PyoaInterPointerAppDef_oaLPPHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLPPHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaLPPHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaLPPHeader_set_doc[] = 
"Class: oaInterPointerAppDef_oaLPPHeader, Function: set\n"
"  Paramegers: (oaLPPHeader,oaObject)\n"
"    Calls: void set(oaLPPHeader* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaLPPHeader,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaLPPHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaLPPHeader data;
    int convert_status=PyoaInterPointerAppDef_oaLPPHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaLPPHeaderObject* self=(PyoaInterPointerAppDef_oaLPPHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLPPHeader p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaLPPHeader_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaLPPHeader_isNull_doc[] =
"Class: oaInterPointerAppDef_oaLPPHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaLPPHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaLPPHeader data;
    int convert_status=PyoaInterPointerAppDef_oaLPPHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaLPPHeader_assign_doc[] = 
"Class: oaInterPointerAppDef_oaLPPHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaLPPHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaLPPHeader data;
  int convert_status=PyoaInterPointerAppDef_oaLPPHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaLPPHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaLPPHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaLPPHeader_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaLPPHeader_get,METH_VARARGS,oaInterPointerAppDef_oaLPPHeader_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaLPPHeader_set,METH_VARARGS,oaInterPointerAppDef_oaLPPHeader_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaLPPHeader_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaLPPHeader_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaLPPHeader_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaLPPHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaLPPHeader_doc[] = 
"Class: oaInterPointerAppDef_oaLPPHeader\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaLPPHeader)\n"
"    Calls: (const oaInterPointerAppDef_oaLPPHeader&)\n"
"    Signature: oaInterPointerAppDef_oaLPPHeader||cref-oaInterPointerAppDef_oaLPPHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaLPPHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaLPPHeader",
    sizeof(PyoaInterPointerAppDef_oaLPPHeaderObject),
    0,
    (destructor)oaInterPointerAppDef_oaLPPHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaLPPHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaLPPHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaLPPHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaLPPHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaLPPHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaLPPHeader_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaLPPHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaLPPHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaLPPHeader|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaLPPHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaLPPHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaLPPHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaLPPHeaderp result= (oaInterPointerAppDef_oaLPPHeader::find(p1.Data()));
            return PyoaInterPointerAppDef_oaLPPHeader_FromoaInterPointerAppDef_oaLPPHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaLPPHeaderp result= (oaInterPointerAppDef_oaLPPHeader::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaLPPHeader_FromoaInterPointerAppDef_oaLPPHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaLPPHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaLPPHeader_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaLPPHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaLPPHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaLPPHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaLPPHeader* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaLPPHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaLPPHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaLPPHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaLPPHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaLPPHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaLPPHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaLPPHeaderp result= (oaInterPointerAppDef_oaLPPHeader::get(p1.Data()));
            return PyoaInterPointerAppDef_oaLPPHeader_FromoaInterPointerAppDef_oaLPPHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaLPPHeaderp result= (oaInterPointerAppDef_oaLPPHeader::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaLPPHeader_FromoaInterPointerAppDef_oaLPPHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaLPPHeaderp result= (oaInterPointerAppDef_oaLPPHeader::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaLPPHeader_FromoaInterPointerAppDef_oaLPPHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaLPPHeaderp result= (oaInterPointerAppDef_oaLPPHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaLPPHeader_FromoaInterPointerAppDef_oaLPPHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaLPPHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaLPPHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaLPPHeader_static_find,METH_VARARGS,oaInterPointerAppDef_oaLPPHeader_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaLPPHeader_static_get,METH_VARARGS,oaInterPointerAppDef_oaLPPHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaLPPHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaLPPHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaLPPHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaLPPHeader",
           (PyObject*)(&PyoaInterPointerAppDef_oaLPPHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaLPPHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaLPPHeader_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaLPPHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaLayer
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaLayer_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaLayer_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaLayerObject* self = (PyoaInterPointerAppDef_oaLayerObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaLayer)
    {
        PyParamoaInterPointerAppDef_oaLayer p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaLayer_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaLayer, Choices are:\n"
        "    (oaInterPointerAppDef_oaLayer)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaLayer_tp_dealloc(PyoaInterPointerAppDef_oaLayerObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaLayer_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaLayer value;
    int convert_status=PyoaInterPointerAppDef_oaLayer_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaInterPointerAppDef_oaLayer::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaLayer_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaLayer v1;
    PyParamoaInterPointerAppDef_oaLayer v2;
    int convert_status1=PyoaInterPointerAppDef_oaLayer_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaLayer_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaLayer_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaLayer* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaLayer_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaLayer**) ((PyoaInterPointerAppDef_oaLayerObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaLayer Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaLayer_FromoaInterPointerAppDef_oaLayer(oaInterPointerAppDef_oaLayer** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaLayer* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaLayer_Type.tp_alloc(&PyoaInterPointerAppDef_oaLayer_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaLayerObject* self = (PyoaInterPointerAppDef_oaLayerObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaLayer_FromoaInterPointerAppDef_oaLayer(oaInterPointerAppDef_oaLayer* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaLayer_Type.tp_alloc(&PyoaInterPointerAppDef_oaLayer_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaLayerObject* self = (PyoaInterPointerAppDef_oaLayerObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaLayer_get_doc[] = 
"Class: oaInterPointerAppDef_oaLayer, Function: get\n"
"  Paramegers: (oaLayer)\n"
"    Calls: oaObject* get(const oaLayer* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaLayer,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaLayer_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaLayer data;
    int convert_status=PyoaInterPointerAppDef_oaLayer_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaLayerObject* self=(PyoaInterPointerAppDef_oaLayerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLayer p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaLayer_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaLayer_set_doc[] = 
"Class: oaInterPointerAppDef_oaLayer, Function: set\n"
"  Paramegers: (oaLayer,oaObject)\n"
"    Calls: void set(oaLayer* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaLayer,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaLayer_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaLayer data;
    int convert_status=PyoaInterPointerAppDef_oaLayer_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaLayerObject* self=(PyoaInterPointerAppDef_oaLayerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLayer p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaLayer_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaLayer_isNull_doc[] =
"Class: oaInterPointerAppDef_oaLayer, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaLayer_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaLayer data;
    int convert_status=PyoaInterPointerAppDef_oaLayer_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaLayer_assign_doc[] = 
"Class: oaInterPointerAppDef_oaLayer, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaLayer_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaLayer data;
  int convert_status=PyoaInterPointerAppDef_oaLayer_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaLayer p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaLayer_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaLayer_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaLayer_get,METH_VARARGS,oaInterPointerAppDef_oaLayer_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaLayer_set,METH_VARARGS,oaInterPointerAppDef_oaLayer_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaLayer_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaLayer_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaLayer_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaLayer_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaLayer_doc[] = 
"Class: oaInterPointerAppDef_oaLayer\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaLayer)\n"
"    Calls: (const oaInterPointerAppDef_oaLayer&)\n"
"    Signature: oaInterPointerAppDef_oaLayer||cref-oaInterPointerAppDef_oaLayer,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaLayer_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaLayer",
    sizeof(PyoaInterPointerAppDef_oaLayerObject),
    0,
    (destructor)oaInterPointerAppDef_oaLayer_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaLayer_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaLayer_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaLayer_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaLayer_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaLayer_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaLayer_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaLayer, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaLayer* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaLayer|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaLayer* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaLayer|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaLayer_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaLayerp result= (oaInterPointerAppDef_oaLayer::find(p1.Data()));
            return PyoaInterPointerAppDef_oaLayer_FromoaInterPointerAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaLayerp result= (oaInterPointerAppDef_oaLayer::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaLayer_FromoaInterPointerAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaLayer, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaLayer_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaLayer, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaLayer* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaLayer|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaLayer* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaLayer|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaLayer* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaLayer|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaLayer* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaLayer|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaLayer_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaLayerp result= (oaInterPointerAppDef_oaLayer::get(p1.Data()));
            return PyoaInterPointerAppDef_oaLayer_FromoaInterPointerAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaLayerp result= (oaInterPointerAppDef_oaLayer::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaLayer_FromoaInterPointerAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaLayerp result= (oaInterPointerAppDef_oaLayer::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaLayer_FromoaInterPointerAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaLayerp result= (oaInterPointerAppDef_oaLayer::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaLayer_FromoaInterPointerAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaLayer, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaLayer_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaLayer_static_find,METH_VARARGS,oaInterPointerAppDef_oaLayer_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaLayer_static_get,METH_VARARGS,oaInterPointerAppDef_oaLayer_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaLayer_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaLayer_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaLayer\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaLayer",
           (PyObject*)(&PyoaInterPointerAppDef_oaLayer_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaLayer\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaLayer_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaLayer_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaLayerHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaLayerHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaLayerHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaLayerHeaderObject* self = (PyoaInterPointerAppDef_oaLayerHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaLayerHeader)
    {
        PyParamoaInterPointerAppDef_oaLayerHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaLayerHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaLayerHeader, Choices are:\n"
        "    (oaInterPointerAppDef_oaLayerHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaLayerHeader_tp_dealloc(PyoaInterPointerAppDef_oaLayerHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaLayerHeader_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaLayerHeader value;
    int convert_status=PyoaInterPointerAppDef_oaLayerHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[56];
    sprintf(buffer,"<oaInterPointerAppDef_oaLayerHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaLayerHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaLayerHeader v1;
    PyParamoaInterPointerAppDef_oaLayerHeader v2;
    int convert_status1=PyoaInterPointerAppDef_oaLayerHeader_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaLayerHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaLayerHeader_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaLayerHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaLayerHeader_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaLayerHeader**) ((PyoaInterPointerAppDef_oaLayerHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaLayerHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaLayerHeader_FromoaInterPointerAppDef_oaLayerHeader(oaInterPointerAppDef_oaLayerHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaLayerHeader* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaLayerHeader_Type.tp_alloc(&PyoaInterPointerAppDef_oaLayerHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaLayerHeaderObject* self = (PyoaInterPointerAppDef_oaLayerHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaLayerHeader_FromoaInterPointerAppDef_oaLayerHeader(oaInterPointerAppDef_oaLayerHeader* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaLayerHeader_Type.tp_alloc(&PyoaInterPointerAppDef_oaLayerHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaLayerHeaderObject* self = (PyoaInterPointerAppDef_oaLayerHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaLayerHeader_get_doc[] = 
"Class: oaInterPointerAppDef_oaLayerHeader, Function: get\n"
"  Paramegers: (oaLayerHeader)\n"
"    Calls: oaObject* get(const oaLayerHeader* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaLayerHeader,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaLayerHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaLayerHeader data;
    int convert_status=PyoaInterPointerAppDef_oaLayerHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaLayerHeaderObject* self=(PyoaInterPointerAppDef_oaLayerHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLayerHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaLayerHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaLayerHeader_set_doc[] = 
"Class: oaInterPointerAppDef_oaLayerHeader, Function: set\n"
"  Paramegers: (oaLayerHeader,oaObject)\n"
"    Calls: void set(oaLayerHeader* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaLayerHeader,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaLayerHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaLayerHeader data;
    int convert_status=PyoaInterPointerAppDef_oaLayerHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaLayerHeaderObject* self=(PyoaInterPointerAppDef_oaLayerHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLayerHeader p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaLayerHeader_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaLayerHeader_isNull_doc[] =
"Class: oaInterPointerAppDef_oaLayerHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaLayerHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaLayerHeader data;
    int convert_status=PyoaInterPointerAppDef_oaLayerHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaLayerHeader_assign_doc[] = 
"Class: oaInterPointerAppDef_oaLayerHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaLayerHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaLayerHeader data;
  int convert_status=PyoaInterPointerAppDef_oaLayerHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaLayerHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaLayerHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaLayerHeader_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaLayerHeader_get,METH_VARARGS,oaInterPointerAppDef_oaLayerHeader_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaLayerHeader_set,METH_VARARGS,oaInterPointerAppDef_oaLayerHeader_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaLayerHeader_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaLayerHeader_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaLayerHeader_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaLayerHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaLayerHeader_doc[] = 
"Class: oaInterPointerAppDef_oaLayerHeader\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaLayerHeader)\n"
"    Calls: (const oaInterPointerAppDef_oaLayerHeader&)\n"
"    Signature: oaInterPointerAppDef_oaLayerHeader||cref-oaInterPointerAppDef_oaLayerHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaLayerHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaLayerHeader",
    sizeof(PyoaInterPointerAppDef_oaLayerHeaderObject),
    0,
    (destructor)oaInterPointerAppDef_oaLayerHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaLayerHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaLayerHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaLayerHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaLayerHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaLayerHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaLayerHeader_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaLayerHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaLayerHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaLayerHeader|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaLayerHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaLayerHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaLayerHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaLayerHeaderp result= (oaInterPointerAppDef_oaLayerHeader::find(p1.Data()));
            return PyoaInterPointerAppDef_oaLayerHeader_FromoaInterPointerAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaLayerHeaderp result= (oaInterPointerAppDef_oaLayerHeader::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaLayerHeader_FromoaInterPointerAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaLayerHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaLayerHeader_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaLayerHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaLayerHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaLayerHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaLayerHeader* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaLayerHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaLayerHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaLayerHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaLayerHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaLayerHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaLayerHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaLayerHeaderp result= (oaInterPointerAppDef_oaLayerHeader::get(p1.Data()));
            return PyoaInterPointerAppDef_oaLayerHeader_FromoaInterPointerAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaLayerHeaderp result= (oaInterPointerAppDef_oaLayerHeader::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaLayerHeader_FromoaInterPointerAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaLayerHeaderp result= (oaInterPointerAppDef_oaLayerHeader::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaLayerHeader_FromoaInterPointerAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaLayerHeaderp result= (oaInterPointerAppDef_oaLayerHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaLayerHeader_FromoaInterPointerAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaLayerHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaLayerHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaLayerHeader_static_find,METH_VARARGS,oaInterPointerAppDef_oaLayerHeader_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaLayerHeader_static_get,METH_VARARGS,oaInterPointerAppDef_oaLayerHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaLayerHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaLayerHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaLayerHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaLayerHeader",
           (PyObject*)(&PyoaInterPointerAppDef_oaLayerHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaLayerHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaLayerHeader_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaLayerHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaLib
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaLib_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaLib_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaLibObject* self = (PyoaInterPointerAppDef_oaLibObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaLib)
    {
        PyParamoaInterPointerAppDef_oaLib p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaLib_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaLib, Choices are:\n"
        "    (oaInterPointerAppDef_oaLib)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaLib_tp_dealloc(PyoaInterPointerAppDef_oaLibObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaLib_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaLib value;
    int convert_status=PyoaInterPointerAppDef_oaLib_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[48];
    sprintf(buffer,"<oaInterPointerAppDef_oaLib::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaLib_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaLib v1;
    PyParamoaInterPointerAppDef_oaLib v2;
    int convert_status1=PyoaInterPointerAppDef_oaLib_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaLib_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaLib_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaLib* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaLib_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaLib**) ((PyoaInterPointerAppDef_oaLibObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaLib Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaLib_FromoaInterPointerAppDef_oaLib(oaInterPointerAppDef_oaLib** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaLib* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaLib_Type.tp_alloc(&PyoaInterPointerAppDef_oaLib_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaLibObject* self = (PyoaInterPointerAppDef_oaLibObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaLib_FromoaInterPointerAppDef_oaLib(oaInterPointerAppDef_oaLib* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaLib_Type.tp_alloc(&PyoaInterPointerAppDef_oaLib_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaLibObject* self = (PyoaInterPointerAppDef_oaLibObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaLib_get_doc[] = 
"Class: oaInterPointerAppDef_oaLib, Function: get\n"
"  Paramegers: (oaLib)\n"
"    Calls: oaObject* get(const oaLib* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaLib,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaLib_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaLib data;
    int convert_status=PyoaInterPointerAppDef_oaLib_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaLibObject* self=(PyoaInterPointerAppDef_oaLibObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLib p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaLib_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaLib_set_doc[] = 
"Class: oaInterPointerAppDef_oaLib, Function: set\n"
"  Paramegers: (oaLib,oaObject)\n"
"    Calls: void set(oaLib* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaLib,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaLib_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaLib data;
    int convert_status=PyoaInterPointerAppDef_oaLib_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaLibObject* self=(PyoaInterPointerAppDef_oaLibObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLib p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaLib_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaLib_isNull_doc[] =
"Class: oaInterPointerAppDef_oaLib, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaLib_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaLib data;
    int convert_status=PyoaInterPointerAppDef_oaLib_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaLib_assign_doc[] = 
"Class: oaInterPointerAppDef_oaLib, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaLib_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaLib data;
  int convert_status=PyoaInterPointerAppDef_oaLib_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaLib p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaLib_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaLib_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaLib_get,METH_VARARGS,oaInterPointerAppDef_oaLib_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaLib_set,METH_VARARGS,oaInterPointerAppDef_oaLib_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaLib_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaLib_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaLib_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaLib_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaLib_doc[] = 
"Class: oaInterPointerAppDef_oaLib\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaLib)\n"
"    Calls: (const oaInterPointerAppDef_oaLib&)\n"
"    Signature: oaInterPointerAppDef_oaLib||cref-oaInterPointerAppDef_oaLib,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaLib_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaLib",
    sizeof(PyoaInterPointerAppDef_oaLibObject),
    0,
    (destructor)oaInterPointerAppDef_oaLib_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaLib_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaLib_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaLib_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaLib_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaLib_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaLib_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaLib, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaLib* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaLib|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaLib* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaLib|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaLib_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaLibp result= (oaInterPointerAppDef_oaLib::find(p1.Data()));
            return PyoaInterPointerAppDef_oaLib_FromoaInterPointerAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaLibp result= (oaInterPointerAppDef_oaLib::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaLib_FromoaInterPointerAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaLib, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaLib_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaLib, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaLib* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaLib|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaLib* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaLib|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaLib* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaLib|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaLib* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaLib|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaLib_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaLibp result= (oaInterPointerAppDef_oaLib::get(p1.Data()));
            return PyoaInterPointerAppDef_oaLib_FromoaInterPointerAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaLibp result= (oaInterPointerAppDef_oaLib::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaLib_FromoaInterPointerAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaLibp result= (oaInterPointerAppDef_oaLib::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaLib_FromoaInterPointerAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaLibp result= (oaInterPointerAppDef_oaLib::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaLib_FromoaInterPointerAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaLib, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaLib_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaLib_static_find,METH_VARARGS,oaInterPointerAppDef_oaLib_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaLib_static_get,METH_VARARGS,oaInterPointerAppDef_oaLib_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaLib_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaLib_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaLib\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaLib",
           (PyObject*)(&PyoaInterPointerAppDef_oaLib_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaLib\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaLib_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaLib_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaMarker
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaMarker_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaMarker_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaMarkerObject* self = (PyoaInterPointerAppDef_oaMarkerObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaMarker)
    {
        PyParamoaInterPointerAppDef_oaMarker p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaMarker_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaMarker, Choices are:\n"
        "    (oaInterPointerAppDef_oaMarker)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaMarker_tp_dealloc(PyoaInterPointerAppDef_oaMarkerObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaMarker_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaMarker value;
    int convert_status=PyoaInterPointerAppDef_oaMarker_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[51];
    sprintf(buffer,"<oaInterPointerAppDef_oaMarker::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaMarker_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaMarker v1;
    PyParamoaInterPointerAppDef_oaMarker v2;
    int convert_status1=PyoaInterPointerAppDef_oaMarker_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaMarker_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaMarker_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaMarker* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaMarker_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaMarker**) ((PyoaInterPointerAppDef_oaMarkerObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaMarker Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaMarker_FromoaInterPointerAppDef_oaMarker(oaInterPointerAppDef_oaMarker** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaMarker* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaMarker_Type.tp_alloc(&PyoaInterPointerAppDef_oaMarker_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaMarkerObject* self = (PyoaInterPointerAppDef_oaMarkerObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaMarker_FromoaInterPointerAppDef_oaMarker(oaInterPointerAppDef_oaMarker* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaMarker_Type.tp_alloc(&PyoaInterPointerAppDef_oaMarker_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaMarkerObject* self = (PyoaInterPointerAppDef_oaMarkerObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaMarker_get_doc[] = 
"Class: oaInterPointerAppDef_oaMarker, Function: get\n"
"  Paramegers: (oaMarker)\n"
"    Calls: oaObject* get(const oaMarker* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaMarker,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaMarker_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaMarker data;
    int convert_status=PyoaInterPointerAppDef_oaMarker_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaMarkerObject* self=(PyoaInterPointerAppDef_oaMarkerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaMarker p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaMarker_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaMarker_set_doc[] = 
"Class: oaInterPointerAppDef_oaMarker, Function: set\n"
"  Paramegers: (oaMarker,oaObject)\n"
"    Calls: void set(oaMarker* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaMarker,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaMarker_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaMarker data;
    int convert_status=PyoaInterPointerAppDef_oaMarker_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaMarkerObject* self=(PyoaInterPointerAppDef_oaMarkerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaMarker p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaMarker_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaMarker_isNull_doc[] =
"Class: oaInterPointerAppDef_oaMarker, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaMarker_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaMarker data;
    int convert_status=PyoaInterPointerAppDef_oaMarker_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaMarker_assign_doc[] = 
"Class: oaInterPointerAppDef_oaMarker, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaMarker_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaMarker data;
  int convert_status=PyoaInterPointerAppDef_oaMarker_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaMarker p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaMarker_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaMarker_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaMarker_get,METH_VARARGS,oaInterPointerAppDef_oaMarker_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaMarker_set,METH_VARARGS,oaInterPointerAppDef_oaMarker_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaMarker_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaMarker_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaMarker_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaMarker_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaMarker_doc[] = 
"Class: oaInterPointerAppDef_oaMarker\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaMarker)\n"
"    Calls: (const oaInterPointerAppDef_oaMarker&)\n"
"    Signature: oaInterPointerAppDef_oaMarker||cref-oaInterPointerAppDef_oaMarker,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaMarker_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaMarker",
    sizeof(PyoaInterPointerAppDef_oaMarkerObject),
    0,
    (destructor)oaInterPointerAppDef_oaMarker_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaMarker_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaMarker_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaMarker_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaMarker_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaMarker_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaMarker_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaMarker, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaMarker* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaMarker|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaMarker* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaMarker|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaMarker_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaMarkerp result= (oaInterPointerAppDef_oaMarker::find(p1.Data()));
            return PyoaInterPointerAppDef_oaMarker_FromoaInterPointerAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaMarkerp result= (oaInterPointerAppDef_oaMarker::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaMarker_FromoaInterPointerAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaMarker, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaMarker_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaMarker, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaMarker* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaMarker|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaMarker* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaMarker|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaMarker* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaMarker|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaMarker* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaMarker|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaMarker_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaMarkerp result= (oaInterPointerAppDef_oaMarker::get(p1.Data()));
            return PyoaInterPointerAppDef_oaMarker_FromoaInterPointerAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaMarkerp result= (oaInterPointerAppDef_oaMarker::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaMarker_FromoaInterPointerAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaMarkerp result= (oaInterPointerAppDef_oaMarker::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaMarker_FromoaInterPointerAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaMarkerp result= (oaInterPointerAppDef_oaMarker::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaMarker_FromoaInterPointerAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaMarker, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaMarker_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaMarker_static_find,METH_VARARGS,oaInterPointerAppDef_oaMarker_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaMarker_static_get,METH_VARARGS,oaInterPointerAppDef_oaMarker_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaMarker_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaMarker_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaMarker\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaMarker",
           (PyObject*)(&PyoaInterPointerAppDef_oaMarker_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaMarker\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaMarker_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaMarker_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaModAssignment
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaModAssignment_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaModAssignment_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaModAssignmentObject* self = (PyoaInterPointerAppDef_oaModAssignmentObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaModAssignment)
    {
        PyParamoaInterPointerAppDef_oaModAssignment p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaModAssignment_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaModAssignment, Choices are:\n"
        "    (oaInterPointerAppDef_oaModAssignment)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaModAssignment_tp_dealloc(PyoaInterPointerAppDef_oaModAssignmentObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaModAssignment_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaModAssignment value;
    int convert_status=PyoaInterPointerAppDef_oaModAssignment_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[58];
    sprintf(buffer,"<oaInterPointerAppDef_oaModAssignment::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaModAssignment_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaModAssignment v1;
    PyParamoaInterPointerAppDef_oaModAssignment v2;
    int convert_status1=PyoaInterPointerAppDef_oaModAssignment_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaModAssignment_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaModAssignment_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaModAssignment* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaModAssignment_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaModAssignment**) ((PyoaInterPointerAppDef_oaModAssignmentObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaModAssignment Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaModAssignment_FromoaInterPointerAppDef_oaModAssignment(oaInterPointerAppDef_oaModAssignment** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaModAssignment* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaModAssignment_Type.tp_alloc(&PyoaInterPointerAppDef_oaModAssignment_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaModAssignmentObject* self = (PyoaInterPointerAppDef_oaModAssignmentObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaModAssignment_FromoaInterPointerAppDef_oaModAssignment(oaInterPointerAppDef_oaModAssignment* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaModAssignment_Type.tp_alloc(&PyoaInterPointerAppDef_oaModAssignment_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaModAssignmentObject* self = (PyoaInterPointerAppDef_oaModAssignmentObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModAssignment_get_doc[] = 
"Class: oaInterPointerAppDef_oaModAssignment, Function: get\n"
"  Paramegers: (oaModAssignment)\n"
"    Calls: oaObject* get(const oaModAssignment* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaModAssignment,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaModAssignment_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaModAssignment data;
    int convert_status=PyoaInterPointerAppDef_oaModAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaModAssignmentObject* self=(PyoaInterPointerAppDef_oaModAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModAssignment p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModAssignment_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModAssignment_set_doc[] = 
"Class: oaInterPointerAppDef_oaModAssignment, Function: set\n"
"  Paramegers: (oaModAssignment,oaObject)\n"
"    Calls: void set(oaModAssignment* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaModAssignment,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaModAssignment_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaModAssignment data;
    int convert_status=PyoaInterPointerAppDef_oaModAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaModAssignmentObject* self=(PyoaInterPointerAppDef_oaModAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModAssignment p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModAssignment_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModAssignment_isNull_doc[] =
"Class: oaInterPointerAppDef_oaModAssignment, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaModAssignment_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaModAssignment data;
    int convert_status=PyoaInterPointerAppDef_oaModAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaModAssignment_assign_doc[] = 
"Class: oaInterPointerAppDef_oaModAssignment, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaModAssignment_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaModAssignment data;
  int convert_status=PyoaInterPointerAppDef_oaModAssignment_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaModAssignment p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaModAssignment_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaModAssignment_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaModAssignment_get,METH_VARARGS,oaInterPointerAppDef_oaModAssignment_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaModAssignment_set,METH_VARARGS,oaInterPointerAppDef_oaModAssignment_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaModAssignment_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaModAssignment_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaModAssignment_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaModAssignment_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModAssignment_doc[] = 
"Class: oaInterPointerAppDef_oaModAssignment\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaModAssignment)\n"
"    Calls: (const oaInterPointerAppDef_oaModAssignment&)\n"
"    Signature: oaInterPointerAppDef_oaModAssignment||cref-oaInterPointerAppDef_oaModAssignment,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaModAssignment_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaModAssignment",
    sizeof(PyoaInterPointerAppDef_oaModAssignmentObject),
    0,
    (destructor)oaInterPointerAppDef_oaModAssignment_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaModAssignment_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaModAssignment_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaModAssignment_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaModAssignment_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaModAssignment_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModAssignment_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaModAssignment, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaModAssignment* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaModAssignment|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaModAssignment* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaModAssignment|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaModAssignment_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaModAssignmentp result= (oaInterPointerAppDef_oaModAssignment::find(p1.Data()));
            return PyoaInterPointerAppDef_oaModAssignment_FromoaInterPointerAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModAssignmentp result= (oaInterPointerAppDef_oaModAssignment::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModAssignment_FromoaInterPointerAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaModAssignment, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModAssignment_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaModAssignment, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaModAssignment* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModAssignment|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaModAssignment* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModAssignment|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaModAssignment* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaModAssignment* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaModAssignment_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaModAssignmentp result= (oaInterPointerAppDef_oaModAssignment::get(p1.Data()));
            return PyoaInterPointerAppDef_oaModAssignment_FromoaInterPointerAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaModAssignmentp result= (oaInterPointerAppDef_oaModAssignment::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModAssignment_FromoaInterPointerAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModAssignmentp result= (oaInterPointerAppDef_oaModAssignment::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModAssignment_FromoaInterPointerAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModAssignmentp result= (oaInterPointerAppDef_oaModAssignment::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaModAssignment_FromoaInterPointerAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaModAssignment, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaModAssignment_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaModAssignment_static_find,METH_VARARGS,oaInterPointerAppDef_oaModAssignment_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaModAssignment_static_get,METH_VARARGS,oaInterPointerAppDef_oaModAssignment_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaModAssignment_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaModAssignment_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaModAssignment\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaModAssignment",
           (PyObject*)(&PyoaInterPointerAppDef_oaModAssignment_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaModAssignment\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaModAssignment_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaModAssignment_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaModBusNetDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaModBusNetDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaModBusNetDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaModBusNetDefObject* self = (PyoaInterPointerAppDef_oaModBusNetDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaModBusNetDef)
    {
        PyParamoaInterPointerAppDef_oaModBusNetDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaModBusNetDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaModBusNetDef, Choices are:\n"
        "    (oaInterPointerAppDef_oaModBusNetDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaModBusNetDef_tp_dealloc(PyoaInterPointerAppDef_oaModBusNetDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaModBusNetDef_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaModBusNetDef value;
    int convert_status=PyoaInterPointerAppDef_oaModBusNetDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[57];
    sprintf(buffer,"<oaInterPointerAppDef_oaModBusNetDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaModBusNetDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaModBusNetDef v1;
    PyParamoaInterPointerAppDef_oaModBusNetDef v2;
    int convert_status1=PyoaInterPointerAppDef_oaModBusNetDef_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaModBusNetDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaModBusNetDef_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaModBusNetDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaModBusNetDef_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaModBusNetDef**) ((PyoaInterPointerAppDef_oaModBusNetDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaModBusNetDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaModBusNetDef_FromoaInterPointerAppDef_oaModBusNetDef(oaInterPointerAppDef_oaModBusNetDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaModBusNetDef* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaModBusNetDef_Type.tp_alloc(&PyoaInterPointerAppDef_oaModBusNetDef_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaModBusNetDefObject* self = (PyoaInterPointerAppDef_oaModBusNetDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaModBusNetDef_FromoaInterPointerAppDef_oaModBusNetDef(oaInterPointerAppDef_oaModBusNetDef* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaModBusNetDef_Type.tp_alloc(&PyoaInterPointerAppDef_oaModBusNetDef_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaModBusNetDefObject* self = (PyoaInterPointerAppDef_oaModBusNetDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModBusNetDef_get_doc[] = 
"Class: oaInterPointerAppDef_oaModBusNetDef, Function: get\n"
"  Paramegers: (oaModBusNetDef)\n"
"    Calls: oaObject* get(const oaModBusNetDef* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaModBusNetDef,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaModBusNetDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaModBusNetDef data;
    int convert_status=PyoaInterPointerAppDef_oaModBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaModBusNetDefObject* self=(PyoaInterPointerAppDef_oaModBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModBusNetDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModBusNetDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModBusNetDef_set_doc[] = 
"Class: oaInterPointerAppDef_oaModBusNetDef, Function: set\n"
"  Paramegers: (oaModBusNetDef,oaObject)\n"
"    Calls: void set(oaModBusNetDef* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaModBusNetDef,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaModBusNetDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaModBusNetDef data;
    int convert_status=PyoaInterPointerAppDef_oaModBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaModBusNetDefObject* self=(PyoaInterPointerAppDef_oaModBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModBusNetDef p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModBusNetDef_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModBusNetDef_isNull_doc[] =
"Class: oaInterPointerAppDef_oaModBusNetDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaModBusNetDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaModBusNetDef data;
    int convert_status=PyoaInterPointerAppDef_oaModBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaModBusNetDef_assign_doc[] = 
"Class: oaInterPointerAppDef_oaModBusNetDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaModBusNetDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaModBusNetDef data;
  int convert_status=PyoaInterPointerAppDef_oaModBusNetDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaModBusNetDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaModBusNetDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaModBusNetDef_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaModBusNetDef_get,METH_VARARGS,oaInterPointerAppDef_oaModBusNetDef_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaModBusNetDef_set,METH_VARARGS,oaInterPointerAppDef_oaModBusNetDef_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaModBusNetDef_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaModBusNetDef_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaModBusNetDef_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaModBusNetDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModBusNetDef_doc[] = 
"Class: oaInterPointerAppDef_oaModBusNetDef\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaModBusNetDef)\n"
"    Calls: (const oaInterPointerAppDef_oaModBusNetDef&)\n"
"    Signature: oaInterPointerAppDef_oaModBusNetDef||cref-oaInterPointerAppDef_oaModBusNetDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaModBusNetDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaModBusNetDef",
    sizeof(PyoaInterPointerAppDef_oaModBusNetDefObject),
    0,
    (destructor)oaInterPointerAppDef_oaModBusNetDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaModBusNetDef_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaModBusNetDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaModBusNetDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaModBusNetDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaModBusNetDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModBusNetDef_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaModBusNetDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaModBusNetDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaModBusNetDef|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaModBusNetDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaModBusNetDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaModBusNetDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaModBusNetDefp result= (oaInterPointerAppDef_oaModBusNetDef::find(p1.Data()));
            return PyoaInterPointerAppDef_oaModBusNetDef_FromoaInterPointerAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModBusNetDefp result= (oaInterPointerAppDef_oaModBusNetDef::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModBusNetDef_FromoaInterPointerAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaModBusNetDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModBusNetDef_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaModBusNetDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaModBusNetDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModBusNetDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaModBusNetDef* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModBusNetDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaModBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaModBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaModBusNetDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaModBusNetDefp result= (oaInterPointerAppDef_oaModBusNetDef::get(p1.Data()));
            return PyoaInterPointerAppDef_oaModBusNetDef_FromoaInterPointerAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaModBusNetDefp result= (oaInterPointerAppDef_oaModBusNetDef::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModBusNetDef_FromoaInterPointerAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModBusNetDefp result= (oaInterPointerAppDef_oaModBusNetDef::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModBusNetDef_FromoaInterPointerAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModBusNetDefp result= (oaInterPointerAppDef_oaModBusNetDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaModBusNetDef_FromoaInterPointerAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaModBusNetDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaModBusNetDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaModBusNetDef_static_find,METH_VARARGS,oaInterPointerAppDef_oaModBusNetDef_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaModBusNetDef_static_get,METH_VARARGS,oaInterPointerAppDef_oaModBusNetDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaModBusNetDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaModBusNetDef_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaModBusNetDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaModBusNetDef",
           (PyObject*)(&PyoaInterPointerAppDef_oaModBusNetDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaModBusNetDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaModBusNetDef_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaModBusNetDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaModBusTermDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaModBusTermDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaModBusTermDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaModBusTermDefObject* self = (PyoaInterPointerAppDef_oaModBusTermDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaModBusTermDef)
    {
        PyParamoaInterPointerAppDef_oaModBusTermDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaModBusTermDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaModBusTermDef, Choices are:\n"
        "    (oaInterPointerAppDef_oaModBusTermDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaModBusTermDef_tp_dealloc(PyoaInterPointerAppDef_oaModBusTermDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaModBusTermDef_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaModBusTermDef value;
    int convert_status=PyoaInterPointerAppDef_oaModBusTermDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[58];
    sprintf(buffer,"<oaInterPointerAppDef_oaModBusTermDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaModBusTermDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaModBusTermDef v1;
    PyParamoaInterPointerAppDef_oaModBusTermDef v2;
    int convert_status1=PyoaInterPointerAppDef_oaModBusTermDef_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaModBusTermDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaModBusTermDef_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaModBusTermDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaModBusTermDef_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaModBusTermDef**) ((PyoaInterPointerAppDef_oaModBusTermDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaModBusTermDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaModBusTermDef_FromoaInterPointerAppDef_oaModBusTermDef(oaInterPointerAppDef_oaModBusTermDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaModBusTermDef* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaModBusTermDef_Type.tp_alloc(&PyoaInterPointerAppDef_oaModBusTermDef_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaModBusTermDefObject* self = (PyoaInterPointerAppDef_oaModBusTermDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaModBusTermDef_FromoaInterPointerAppDef_oaModBusTermDef(oaInterPointerAppDef_oaModBusTermDef* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaModBusTermDef_Type.tp_alloc(&PyoaInterPointerAppDef_oaModBusTermDef_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaModBusTermDefObject* self = (PyoaInterPointerAppDef_oaModBusTermDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModBusTermDef_get_doc[] = 
"Class: oaInterPointerAppDef_oaModBusTermDef, Function: get\n"
"  Paramegers: (oaModBusTermDef)\n"
"    Calls: oaObject* get(const oaModBusTermDef* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaModBusTermDef,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaModBusTermDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaModBusTermDef data;
    int convert_status=PyoaInterPointerAppDef_oaModBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaModBusTermDefObject* self=(PyoaInterPointerAppDef_oaModBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModBusTermDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModBusTermDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModBusTermDef_set_doc[] = 
"Class: oaInterPointerAppDef_oaModBusTermDef, Function: set\n"
"  Paramegers: (oaModBusTermDef,oaObject)\n"
"    Calls: void set(oaModBusTermDef* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaModBusTermDef,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaModBusTermDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaModBusTermDef data;
    int convert_status=PyoaInterPointerAppDef_oaModBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaModBusTermDefObject* self=(PyoaInterPointerAppDef_oaModBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModBusTermDef p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModBusTermDef_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModBusTermDef_isNull_doc[] =
"Class: oaInterPointerAppDef_oaModBusTermDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaModBusTermDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaModBusTermDef data;
    int convert_status=PyoaInterPointerAppDef_oaModBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaModBusTermDef_assign_doc[] = 
"Class: oaInterPointerAppDef_oaModBusTermDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaModBusTermDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaModBusTermDef data;
  int convert_status=PyoaInterPointerAppDef_oaModBusTermDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaModBusTermDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaModBusTermDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaModBusTermDef_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaModBusTermDef_get,METH_VARARGS,oaInterPointerAppDef_oaModBusTermDef_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaModBusTermDef_set,METH_VARARGS,oaInterPointerAppDef_oaModBusTermDef_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaModBusTermDef_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaModBusTermDef_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaModBusTermDef_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaModBusTermDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModBusTermDef_doc[] = 
"Class: oaInterPointerAppDef_oaModBusTermDef\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaModBusTermDef)\n"
"    Calls: (const oaInterPointerAppDef_oaModBusTermDef&)\n"
"    Signature: oaInterPointerAppDef_oaModBusTermDef||cref-oaInterPointerAppDef_oaModBusTermDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaModBusTermDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaModBusTermDef",
    sizeof(PyoaInterPointerAppDef_oaModBusTermDefObject),
    0,
    (destructor)oaInterPointerAppDef_oaModBusTermDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaModBusTermDef_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaModBusTermDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaModBusTermDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaModBusTermDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaModBusTermDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModBusTermDef_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaModBusTermDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaModBusTermDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaModBusTermDef|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaModBusTermDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaModBusTermDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaModBusTermDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaModBusTermDefp result= (oaInterPointerAppDef_oaModBusTermDef::find(p1.Data()));
            return PyoaInterPointerAppDef_oaModBusTermDef_FromoaInterPointerAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModBusTermDefp result= (oaInterPointerAppDef_oaModBusTermDef::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModBusTermDef_FromoaInterPointerAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaModBusTermDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModBusTermDef_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaModBusTermDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaModBusTermDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModBusTermDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaModBusTermDef* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModBusTermDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaModBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaModBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaModBusTermDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaModBusTermDefp result= (oaInterPointerAppDef_oaModBusTermDef::get(p1.Data()));
            return PyoaInterPointerAppDef_oaModBusTermDef_FromoaInterPointerAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaModBusTermDefp result= (oaInterPointerAppDef_oaModBusTermDef::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModBusTermDef_FromoaInterPointerAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModBusTermDefp result= (oaInterPointerAppDef_oaModBusTermDef::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModBusTermDef_FromoaInterPointerAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModBusTermDefp result= (oaInterPointerAppDef_oaModBusTermDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaModBusTermDef_FromoaInterPointerAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaModBusTermDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaModBusTermDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaModBusTermDef_static_find,METH_VARARGS,oaInterPointerAppDef_oaModBusTermDef_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaModBusTermDef_static_get,METH_VARARGS,oaInterPointerAppDef_oaModBusTermDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaModBusTermDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaModBusTermDef_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaModBusTermDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaModBusTermDef",
           (PyObject*)(&PyoaInterPointerAppDef_oaModBusTermDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaModBusTermDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaModBusTermDef_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaModBusTermDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaModConnectDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaModConnectDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaModConnectDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaModConnectDefObject* self = (PyoaInterPointerAppDef_oaModConnectDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaModConnectDef)
    {
        PyParamoaInterPointerAppDef_oaModConnectDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaModConnectDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaModConnectDef, Choices are:\n"
        "    (oaInterPointerAppDef_oaModConnectDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaModConnectDef_tp_dealloc(PyoaInterPointerAppDef_oaModConnectDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaModConnectDef_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaModConnectDef value;
    int convert_status=PyoaInterPointerAppDef_oaModConnectDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[58];
    sprintf(buffer,"<oaInterPointerAppDef_oaModConnectDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaModConnectDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaModConnectDef v1;
    PyParamoaInterPointerAppDef_oaModConnectDef v2;
    int convert_status1=PyoaInterPointerAppDef_oaModConnectDef_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaModConnectDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaModConnectDef_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaModConnectDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaModConnectDef_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaModConnectDef**) ((PyoaInterPointerAppDef_oaModConnectDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaModConnectDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaModConnectDef_FromoaInterPointerAppDef_oaModConnectDef(oaInterPointerAppDef_oaModConnectDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaModConnectDef* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaModConnectDef_Type.tp_alloc(&PyoaInterPointerAppDef_oaModConnectDef_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaModConnectDefObject* self = (PyoaInterPointerAppDef_oaModConnectDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaModConnectDef_FromoaInterPointerAppDef_oaModConnectDef(oaInterPointerAppDef_oaModConnectDef* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaModConnectDef_Type.tp_alloc(&PyoaInterPointerAppDef_oaModConnectDef_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaModConnectDefObject* self = (PyoaInterPointerAppDef_oaModConnectDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModConnectDef_get_doc[] = 
"Class: oaInterPointerAppDef_oaModConnectDef, Function: get\n"
"  Paramegers: (oaModConnectDef)\n"
"    Calls: oaObject* get(const oaModConnectDef* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaModConnectDef,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaModConnectDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaModConnectDef data;
    int convert_status=PyoaInterPointerAppDef_oaModConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaModConnectDefObject* self=(PyoaInterPointerAppDef_oaModConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModConnectDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModConnectDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModConnectDef_set_doc[] = 
"Class: oaInterPointerAppDef_oaModConnectDef, Function: set\n"
"  Paramegers: (oaModConnectDef,oaObject)\n"
"    Calls: void set(oaModConnectDef* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaModConnectDef,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaModConnectDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaModConnectDef data;
    int convert_status=PyoaInterPointerAppDef_oaModConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaModConnectDefObject* self=(PyoaInterPointerAppDef_oaModConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModConnectDef p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModConnectDef_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModConnectDef_isNull_doc[] =
"Class: oaInterPointerAppDef_oaModConnectDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaModConnectDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaModConnectDef data;
    int convert_status=PyoaInterPointerAppDef_oaModConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaModConnectDef_assign_doc[] = 
"Class: oaInterPointerAppDef_oaModConnectDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaModConnectDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaModConnectDef data;
  int convert_status=PyoaInterPointerAppDef_oaModConnectDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaModConnectDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaModConnectDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaModConnectDef_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaModConnectDef_get,METH_VARARGS,oaInterPointerAppDef_oaModConnectDef_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaModConnectDef_set,METH_VARARGS,oaInterPointerAppDef_oaModConnectDef_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaModConnectDef_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaModConnectDef_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaModConnectDef_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaModConnectDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModConnectDef_doc[] = 
"Class: oaInterPointerAppDef_oaModConnectDef\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaModConnectDef)\n"
"    Calls: (const oaInterPointerAppDef_oaModConnectDef&)\n"
"    Signature: oaInterPointerAppDef_oaModConnectDef||cref-oaInterPointerAppDef_oaModConnectDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaModConnectDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaModConnectDef",
    sizeof(PyoaInterPointerAppDef_oaModConnectDefObject),
    0,
    (destructor)oaInterPointerAppDef_oaModConnectDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaModConnectDef_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaModConnectDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaModConnectDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaModConnectDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaModConnectDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModConnectDef_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaModConnectDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaModConnectDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaModConnectDef|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaModConnectDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaModConnectDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaModConnectDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaModConnectDefp result= (oaInterPointerAppDef_oaModConnectDef::find(p1.Data()));
            return PyoaInterPointerAppDef_oaModConnectDef_FromoaInterPointerAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModConnectDefp result= (oaInterPointerAppDef_oaModConnectDef::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModConnectDef_FromoaInterPointerAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaModConnectDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModConnectDef_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaModConnectDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaModConnectDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModConnectDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaModConnectDef* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModConnectDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaModConnectDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaModConnectDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaModConnectDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaModConnectDefp result= (oaInterPointerAppDef_oaModConnectDef::get(p1.Data()));
            return PyoaInterPointerAppDef_oaModConnectDef_FromoaInterPointerAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaModConnectDefp result= (oaInterPointerAppDef_oaModConnectDef::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModConnectDef_FromoaInterPointerAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModConnectDefp result= (oaInterPointerAppDef_oaModConnectDef::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModConnectDef_FromoaInterPointerAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModConnectDefp result= (oaInterPointerAppDef_oaModConnectDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaModConnectDef_FromoaInterPointerAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaModConnectDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaModConnectDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaModConnectDef_static_find,METH_VARARGS,oaInterPointerAppDef_oaModConnectDef_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaModConnectDef_static_get,METH_VARARGS,oaInterPointerAppDef_oaModConnectDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaModConnectDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaModConnectDef_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaModConnectDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaModConnectDef",
           (PyObject*)(&PyoaInterPointerAppDef_oaModConnectDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaModConnectDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaModConnectDef_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaModConnectDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaModInst
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaModInst_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaModInst_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaModInstObject* self = (PyoaInterPointerAppDef_oaModInstObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaModInst)
    {
        PyParamoaInterPointerAppDef_oaModInst p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaModInst_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaModInst, Choices are:\n"
        "    (oaInterPointerAppDef_oaModInst)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaModInst_tp_dealloc(PyoaInterPointerAppDef_oaModInstObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaModInst_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaModInst value;
    int convert_status=PyoaInterPointerAppDef_oaModInst_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaInterPointerAppDef_oaModInst::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaModInst_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaModInst v1;
    PyParamoaInterPointerAppDef_oaModInst v2;
    int convert_status1=PyoaInterPointerAppDef_oaModInst_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaModInst_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaModInst_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaModInst* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaModInst_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaModInst**) ((PyoaInterPointerAppDef_oaModInstObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaModInst Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaModInst_FromoaInterPointerAppDef_oaModInst(oaInterPointerAppDef_oaModInst** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaModInst* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaModInst_Type.tp_alloc(&PyoaInterPointerAppDef_oaModInst_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaModInstObject* self = (PyoaInterPointerAppDef_oaModInstObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaModInst_FromoaInterPointerAppDef_oaModInst(oaInterPointerAppDef_oaModInst* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaModInst_Type.tp_alloc(&PyoaInterPointerAppDef_oaModInst_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaModInstObject* self = (PyoaInterPointerAppDef_oaModInstObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModInst_get_doc[] = 
"Class: oaInterPointerAppDef_oaModInst, Function: get\n"
"  Paramegers: (oaModInst)\n"
"    Calls: oaObject* get(const oaModInst* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaModInst,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaModInst_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaModInst data;
    int convert_status=PyoaInterPointerAppDef_oaModInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaModInstObject* self=(PyoaInterPointerAppDef_oaModInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModInst_set_doc[] = 
"Class: oaInterPointerAppDef_oaModInst, Function: set\n"
"  Paramegers: (oaModInst,oaObject)\n"
"    Calls: void set(oaModInst* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaModInst,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaModInst_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaModInst data;
    int convert_status=PyoaInterPointerAppDef_oaModInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaModInstObject* self=(PyoaInterPointerAppDef_oaModInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInst p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModInst_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModInst_isNull_doc[] =
"Class: oaInterPointerAppDef_oaModInst, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaModInst_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaModInst data;
    int convert_status=PyoaInterPointerAppDef_oaModInst_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaModInst_assign_doc[] = 
"Class: oaInterPointerAppDef_oaModInst, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaModInst_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaModInst data;
  int convert_status=PyoaInterPointerAppDef_oaModInst_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaModInst p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaModInst_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaModInst_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaModInst_get,METH_VARARGS,oaInterPointerAppDef_oaModInst_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaModInst_set,METH_VARARGS,oaInterPointerAppDef_oaModInst_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaModInst_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaModInst_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaModInst_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaModInst_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModInst_doc[] = 
"Class: oaInterPointerAppDef_oaModInst\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaModInst)\n"
"    Calls: (const oaInterPointerAppDef_oaModInst&)\n"
"    Signature: oaInterPointerAppDef_oaModInst||cref-oaInterPointerAppDef_oaModInst,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaModInst_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaModInst",
    sizeof(PyoaInterPointerAppDef_oaModInstObject),
    0,
    (destructor)oaInterPointerAppDef_oaModInst_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaModInst_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaModInst_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaModInst_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaModInst_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaModInst_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModInst_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaModInst, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaModInst* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaModInst|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaModInst* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaModInst|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaModInst_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaModInstp result= (oaInterPointerAppDef_oaModInst::find(p1.Data()));
            return PyoaInterPointerAppDef_oaModInst_FromoaInterPointerAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModInstp result= (oaInterPointerAppDef_oaModInst::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModInst_FromoaInterPointerAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaModInst, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModInst_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaModInst, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaModInst* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModInst|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaModInst* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModInst|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaModInst* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaModInst* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaModInst_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaModInstp result= (oaInterPointerAppDef_oaModInst::get(p1.Data()));
            return PyoaInterPointerAppDef_oaModInst_FromoaInterPointerAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaModInstp result= (oaInterPointerAppDef_oaModInst::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModInst_FromoaInterPointerAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModInstp result= (oaInterPointerAppDef_oaModInst::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModInst_FromoaInterPointerAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModInstp result= (oaInterPointerAppDef_oaModInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaModInst_FromoaInterPointerAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaModInst, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaModInst_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaModInst_static_find,METH_VARARGS,oaInterPointerAppDef_oaModInst_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaModInst_static_get,METH_VARARGS,oaInterPointerAppDef_oaModInst_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaModInst_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaModInst_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaModInst\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaModInst",
           (PyObject*)(&PyoaInterPointerAppDef_oaModInst_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaModInst\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaModInst_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaModInst_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaModInstHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaModInstHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaModInstHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaModInstHeaderObject* self = (PyoaInterPointerAppDef_oaModInstHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaModInstHeader)
    {
        PyParamoaInterPointerAppDef_oaModInstHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaModInstHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaModInstHeader, Choices are:\n"
        "    (oaInterPointerAppDef_oaModInstHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaModInstHeader_tp_dealloc(PyoaInterPointerAppDef_oaModInstHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaModInstHeader_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaModInstHeader value;
    int convert_status=PyoaInterPointerAppDef_oaModInstHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[58];
    sprintf(buffer,"<oaInterPointerAppDef_oaModInstHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaModInstHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaModInstHeader v1;
    PyParamoaInterPointerAppDef_oaModInstHeader v2;
    int convert_status1=PyoaInterPointerAppDef_oaModInstHeader_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaModInstHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaModInstHeader_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaModInstHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaModInstHeader_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaModInstHeader**) ((PyoaInterPointerAppDef_oaModInstHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaModInstHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaModInstHeader_FromoaInterPointerAppDef_oaModInstHeader(oaInterPointerAppDef_oaModInstHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaModInstHeader* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaModInstHeader_Type.tp_alloc(&PyoaInterPointerAppDef_oaModInstHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaModInstHeaderObject* self = (PyoaInterPointerAppDef_oaModInstHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaModInstHeader_FromoaInterPointerAppDef_oaModInstHeader(oaInterPointerAppDef_oaModInstHeader* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaModInstHeader_Type.tp_alloc(&PyoaInterPointerAppDef_oaModInstHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaModInstHeaderObject* self = (PyoaInterPointerAppDef_oaModInstHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModInstHeader_get_doc[] = 
"Class: oaInterPointerAppDef_oaModInstHeader, Function: get\n"
"  Paramegers: (oaModInstHeader)\n"
"    Calls: oaObject* get(const oaModInstHeader* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaModInstHeader,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaModInstHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaModInstHeader data;
    int convert_status=PyoaInterPointerAppDef_oaModInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaModInstHeaderObject* self=(PyoaInterPointerAppDef_oaModInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInstHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModInstHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModInstHeader_set_doc[] = 
"Class: oaInterPointerAppDef_oaModInstHeader, Function: set\n"
"  Paramegers: (oaModInstHeader,oaObject)\n"
"    Calls: void set(oaModInstHeader* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaModInstHeader,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaModInstHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaModInstHeader data;
    int convert_status=PyoaInterPointerAppDef_oaModInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaModInstHeaderObject* self=(PyoaInterPointerAppDef_oaModInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInstHeader p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModInstHeader_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModInstHeader_isNull_doc[] =
"Class: oaInterPointerAppDef_oaModInstHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaModInstHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaModInstHeader data;
    int convert_status=PyoaInterPointerAppDef_oaModInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaModInstHeader_assign_doc[] = 
"Class: oaInterPointerAppDef_oaModInstHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaModInstHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaModInstHeader data;
  int convert_status=PyoaInterPointerAppDef_oaModInstHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaModInstHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaModInstHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaModInstHeader_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaModInstHeader_get,METH_VARARGS,oaInterPointerAppDef_oaModInstHeader_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaModInstHeader_set,METH_VARARGS,oaInterPointerAppDef_oaModInstHeader_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaModInstHeader_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaModInstHeader_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaModInstHeader_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaModInstHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModInstHeader_doc[] = 
"Class: oaInterPointerAppDef_oaModInstHeader\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaModInstHeader)\n"
"    Calls: (const oaInterPointerAppDef_oaModInstHeader&)\n"
"    Signature: oaInterPointerAppDef_oaModInstHeader||cref-oaInterPointerAppDef_oaModInstHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaModInstHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaModInstHeader",
    sizeof(PyoaInterPointerAppDef_oaModInstHeaderObject),
    0,
    (destructor)oaInterPointerAppDef_oaModInstHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaModInstHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaModInstHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaModInstHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaModInstHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaModInstHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModInstHeader_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaModInstHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaModInstHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaModInstHeader|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaModInstHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaModInstHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaModInstHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaModInstHeaderp result= (oaInterPointerAppDef_oaModInstHeader::find(p1.Data()));
            return PyoaInterPointerAppDef_oaModInstHeader_FromoaInterPointerAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModInstHeaderp result= (oaInterPointerAppDef_oaModInstHeader::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModInstHeader_FromoaInterPointerAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaModInstHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModInstHeader_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaModInstHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaModInstHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModInstHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaModInstHeader* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModInstHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaModInstHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaModInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaModInstHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaModInstHeaderp result= (oaInterPointerAppDef_oaModInstHeader::get(p1.Data()));
            return PyoaInterPointerAppDef_oaModInstHeader_FromoaInterPointerAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaModInstHeaderp result= (oaInterPointerAppDef_oaModInstHeader::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModInstHeader_FromoaInterPointerAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModInstHeaderp result= (oaInterPointerAppDef_oaModInstHeader::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModInstHeader_FromoaInterPointerAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModInstHeaderp result= (oaInterPointerAppDef_oaModInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaModInstHeader_FromoaInterPointerAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaModInstHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaModInstHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaModInstHeader_static_find,METH_VARARGS,oaInterPointerAppDef_oaModInstHeader_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaModInstHeader_static_get,METH_VARARGS,oaInterPointerAppDef_oaModInstHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaModInstHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaModInstHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaModInstHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaModInstHeader",
           (PyObject*)(&PyoaInterPointerAppDef_oaModInstHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaModInstHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaModInstHeader_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaModInstHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaModInstTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaModInstTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaModInstTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaModInstTermObject* self = (PyoaInterPointerAppDef_oaModInstTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaModInstTerm)
    {
        PyParamoaInterPointerAppDef_oaModInstTerm p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaModInstTerm_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaModInstTerm, Choices are:\n"
        "    (oaInterPointerAppDef_oaModInstTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaModInstTerm_tp_dealloc(PyoaInterPointerAppDef_oaModInstTermObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaModInstTerm_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaModInstTerm value;
    int convert_status=PyoaInterPointerAppDef_oaModInstTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[56];
    sprintf(buffer,"<oaInterPointerAppDef_oaModInstTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaModInstTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaModInstTerm v1;
    PyParamoaInterPointerAppDef_oaModInstTerm v2;
    int convert_status1=PyoaInterPointerAppDef_oaModInstTerm_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaModInstTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaModInstTerm_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaModInstTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaModInstTerm_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaModInstTerm**) ((PyoaInterPointerAppDef_oaModInstTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaModInstTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaModInstTerm_FromoaInterPointerAppDef_oaModInstTerm(oaInterPointerAppDef_oaModInstTerm** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaModInstTerm* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaModInstTerm_Type.tp_alloc(&PyoaInterPointerAppDef_oaModInstTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaModInstTermObject* self = (PyoaInterPointerAppDef_oaModInstTermObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaModInstTerm_FromoaInterPointerAppDef_oaModInstTerm(oaInterPointerAppDef_oaModInstTerm* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaModInstTerm_Type.tp_alloc(&PyoaInterPointerAppDef_oaModInstTerm_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaModInstTermObject* self = (PyoaInterPointerAppDef_oaModInstTermObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModInstTerm_get_doc[] = 
"Class: oaInterPointerAppDef_oaModInstTerm, Function: get\n"
"  Paramegers: (oaModInstTerm)\n"
"    Calls: oaObject* get(const oaModInstTerm* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaModInstTerm,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaModInstTerm_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaModInstTerm data;
    int convert_status=PyoaInterPointerAppDef_oaModInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaModInstTermObject* self=(PyoaInterPointerAppDef_oaModInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInstTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModInstTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModInstTerm_set_doc[] = 
"Class: oaInterPointerAppDef_oaModInstTerm, Function: set\n"
"  Paramegers: (oaModInstTerm,oaObject)\n"
"    Calls: void set(oaModInstTerm* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaModInstTerm,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaModInstTerm_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaModInstTerm data;
    int convert_status=PyoaInterPointerAppDef_oaModInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaModInstTermObject* self=(PyoaInterPointerAppDef_oaModInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInstTerm p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModInstTerm_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModInstTerm_isNull_doc[] =
"Class: oaInterPointerAppDef_oaModInstTerm, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaModInstTerm_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaModInstTerm data;
    int convert_status=PyoaInterPointerAppDef_oaModInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaModInstTerm_assign_doc[] = 
"Class: oaInterPointerAppDef_oaModInstTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaModInstTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaModInstTerm data;
  int convert_status=PyoaInterPointerAppDef_oaModInstTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaModInstTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaModInstTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaModInstTerm_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaModInstTerm_get,METH_VARARGS,oaInterPointerAppDef_oaModInstTerm_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaModInstTerm_set,METH_VARARGS,oaInterPointerAppDef_oaModInstTerm_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaModInstTerm_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaModInstTerm_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaModInstTerm_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaModInstTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModInstTerm_doc[] = 
"Class: oaInterPointerAppDef_oaModInstTerm\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaModInstTerm)\n"
"    Calls: (const oaInterPointerAppDef_oaModInstTerm&)\n"
"    Signature: oaInterPointerAppDef_oaModInstTerm||cref-oaInterPointerAppDef_oaModInstTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaModInstTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaModInstTerm",
    sizeof(PyoaInterPointerAppDef_oaModInstTermObject),
    0,
    (destructor)oaInterPointerAppDef_oaModInstTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaModInstTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaModInstTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaModInstTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaModInstTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaModInstTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModInstTerm_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaModInstTerm, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaModInstTerm* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaModInstTerm|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaModInstTerm* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaModInstTerm|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaModInstTerm_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaModInstTermp result= (oaInterPointerAppDef_oaModInstTerm::find(p1.Data()));
            return PyoaInterPointerAppDef_oaModInstTerm_FromoaInterPointerAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModInstTermp result= (oaInterPointerAppDef_oaModInstTerm::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModInstTerm_FromoaInterPointerAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaModInstTerm, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModInstTerm_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaModInstTerm, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaModInstTerm* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModInstTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaModInstTerm* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModInstTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaModInstTerm* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaModInstTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaModInstTerm_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaModInstTermp result= (oaInterPointerAppDef_oaModInstTerm::get(p1.Data()));
            return PyoaInterPointerAppDef_oaModInstTerm_FromoaInterPointerAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaModInstTermp result= (oaInterPointerAppDef_oaModInstTerm::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModInstTerm_FromoaInterPointerAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModInstTermp result= (oaInterPointerAppDef_oaModInstTerm::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModInstTerm_FromoaInterPointerAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModInstTermp result= (oaInterPointerAppDef_oaModInstTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaModInstTerm_FromoaInterPointerAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaModInstTerm, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaModInstTerm_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaModInstTerm_static_find,METH_VARARGS,oaInterPointerAppDef_oaModInstTerm_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaModInstTerm_static_get,METH_VARARGS,oaInterPointerAppDef_oaModInstTerm_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaModInstTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaModInstTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaModInstTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaModInstTerm",
           (PyObject*)(&PyoaInterPointerAppDef_oaModInstTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaModInstTerm\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaModInstTerm_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaModInstTerm_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaModModuleInstHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaModModuleInstHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaModModuleInstHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaModModuleInstHeaderObject* self = (PyoaInterPointerAppDef_oaModModuleInstHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaModModuleInstHeader)
    {
        PyParamoaInterPointerAppDef_oaModModuleInstHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaModModuleInstHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaModModuleInstHeader, Choices are:\n"
        "    (oaInterPointerAppDef_oaModModuleInstHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaModModuleInstHeader_tp_dealloc(PyoaInterPointerAppDef_oaModModuleInstHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaModModuleInstHeader_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaModModuleInstHeader value;
    int convert_status=PyoaInterPointerAppDef_oaModModuleInstHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[64];
    sprintf(buffer,"<oaInterPointerAppDef_oaModModuleInstHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaModModuleInstHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaModModuleInstHeader v1;
    PyParamoaInterPointerAppDef_oaModModuleInstHeader v2;
    int convert_status1=PyoaInterPointerAppDef_oaModModuleInstHeader_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaModModuleInstHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaModModuleInstHeader_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaModModuleInstHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaModModuleInstHeader_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaModModuleInstHeader**) ((PyoaInterPointerAppDef_oaModModuleInstHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaModModuleInstHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaModModuleInstHeader_FromoaInterPointerAppDef_oaModModuleInstHeader(oaInterPointerAppDef_oaModModuleInstHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaModModuleInstHeader* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaModModuleInstHeader_Type.tp_alloc(&PyoaInterPointerAppDef_oaModModuleInstHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaModModuleInstHeaderObject* self = (PyoaInterPointerAppDef_oaModModuleInstHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaModModuleInstHeader_FromoaInterPointerAppDef_oaModModuleInstHeader(oaInterPointerAppDef_oaModModuleInstHeader* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaModModuleInstHeader_Type.tp_alloc(&PyoaInterPointerAppDef_oaModModuleInstHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaModModuleInstHeaderObject* self = (PyoaInterPointerAppDef_oaModModuleInstHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModModuleInstHeader_get_doc[] = 
"Class: oaInterPointerAppDef_oaModModuleInstHeader, Function: get\n"
"  Paramegers: (oaModModuleInstHeader)\n"
"    Calls: oaObject* get(const oaModModuleInstHeader* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaModModuleInstHeader,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaModModuleInstHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaModModuleInstHeader data;
    int convert_status=PyoaInterPointerAppDef_oaModModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaModModuleInstHeaderObject* self=(PyoaInterPointerAppDef_oaModModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModModuleInstHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModModuleInstHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModModuleInstHeader_set_doc[] = 
"Class: oaInterPointerAppDef_oaModModuleInstHeader, Function: set\n"
"  Paramegers: (oaModModuleInstHeader,oaObject)\n"
"    Calls: void set(oaModModuleInstHeader* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaModModuleInstHeader,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaModModuleInstHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaModModuleInstHeader data;
    int convert_status=PyoaInterPointerAppDef_oaModModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaModModuleInstHeaderObject* self=(PyoaInterPointerAppDef_oaModModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModModuleInstHeader p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModModuleInstHeader_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModModuleInstHeader_isNull_doc[] =
"Class: oaInterPointerAppDef_oaModModuleInstHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaModModuleInstHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaModModuleInstHeader data;
    int convert_status=PyoaInterPointerAppDef_oaModModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaModModuleInstHeader_assign_doc[] = 
"Class: oaInterPointerAppDef_oaModModuleInstHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaModModuleInstHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaModModuleInstHeader data;
  int convert_status=PyoaInterPointerAppDef_oaModModuleInstHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaModModuleInstHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaModModuleInstHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaModModuleInstHeader_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaModModuleInstHeader_get,METH_VARARGS,oaInterPointerAppDef_oaModModuleInstHeader_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaModModuleInstHeader_set,METH_VARARGS,oaInterPointerAppDef_oaModModuleInstHeader_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaModModuleInstHeader_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaModModuleInstHeader_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaModModuleInstHeader_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaModModuleInstHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModModuleInstHeader_doc[] = 
"Class: oaInterPointerAppDef_oaModModuleInstHeader\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaModModuleInstHeader)\n"
"    Calls: (const oaInterPointerAppDef_oaModModuleInstHeader&)\n"
"    Signature: oaInterPointerAppDef_oaModModuleInstHeader||cref-oaInterPointerAppDef_oaModModuleInstHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaModModuleInstHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaModModuleInstHeader",
    sizeof(PyoaInterPointerAppDef_oaModModuleInstHeaderObject),
    0,
    (destructor)oaInterPointerAppDef_oaModModuleInstHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaModModuleInstHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaModModuleInstHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaModModuleInstHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaModModuleInstHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaModModuleInstHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModModuleInstHeader_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaModModuleInstHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaModModuleInstHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaModModuleInstHeader|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaModModuleInstHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaModModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaModModuleInstHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaModModuleInstHeaderp result= (oaInterPointerAppDef_oaModModuleInstHeader::find(p1.Data()));
            return PyoaInterPointerAppDef_oaModModuleInstHeader_FromoaInterPointerAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModModuleInstHeaderp result= (oaInterPointerAppDef_oaModModuleInstHeader::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModModuleInstHeader_FromoaInterPointerAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaModModuleInstHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModModuleInstHeader_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaModModuleInstHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaModModuleInstHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModModuleInstHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaModModuleInstHeader* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModModuleInstHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaModModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaModModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaModModuleInstHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaModModuleInstHeaderp result= (oaInterPointerAppDef_oaModModuleInstHeader::get(p1.Data()));
            return PyoaInterPointerAppDef_oaModModuleInstHeader_FromoaInterPointerAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaModModuleInstHeaderp result= (oaInterPointerAppDef_oaModModuleInstHeader::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModModuleInstHeader_FromoaInterPointerAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModModuleInstHeaderp result= (oaInterPointerAppDef_oaModModuleInstHeader::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModModuleInstHeader_FromoaInterPointerAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModModuleInstHeaderp result= (oaInterPointerAppDef_oaModModuleInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaModModuleInstHeader_FromoaInterPointerAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaModModuleInstHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaModModuleInstHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaModModuleInstHeader_static_find,METH_VARARGS,oaInterPointerAppDef_oaModModuleInstHeader_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaModModuleInstHeader_static_get,METH_VARARGS,oaInterPointerAppDef_oaModModuleInstHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaModModuleInstHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaModModuleInstHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaModModuleInstHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaModModuleInstHeader",
           (PyObject*)(&PyoaInterPointerAppDef_oaModModuleInstHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaModModuleInstHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaModModuleInstHeader_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaModModuleInstHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaModNet
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaModNet_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaModNet_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaModNetObject* self = (PyoaInterPointerAppDef_oaModNetObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaModNet)
    {
        PyParamoaInterPointerAppDef_oaModNet p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaModNet_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaModNet, Choices are:\n"
        "    (oaInterPointerAppDef_oaModNet)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaModNet_tp_dealloc(PyoaInterPointerAppDef_oaModNetObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaModNet_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaModNet value;
    int convert_status=PyoaInterPointerAppDef_oaModNet_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[51];
    sprintf(buffer,"<oaInterPointerAppDef_oaModNet::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaModNet_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaModNet v1;
    PyParamoaInterPointerAppDef_oaModNet v2;
    int convert_status1=PyoaInterPointerAppDef_oaModNet_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaModNet_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaModNet_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaModNet* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaModNet_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaModNet**) ((PyoaInterPointerAppDef_oaModNetObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaModNet Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaModNet_FromoaInterPointerAppDef_oaModNet(oaInterPointerAppDef_oaModNet** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaModNet* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaModNet_Type.tp_alloc(&PyoaInterPointerAppDef_oaModNet_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaModNetObject* self = (PyoaInterPointerAppDef_oaModNetObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaModNet_FromoaInterPointerAppDef_oaModNet(oaInterPointerAppDef_oaModNet* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaModNet_Type.tp_alloc(&PyoaInterPointerAppDef_oaModNet_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaModNetObject* self = (PyoaInterPointerAppDef_oaModNetObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModNet_get_doc[] = 
"Class: oaInterPointerAppDef_oaModNet, Function: get\n"
"  Paramegers: (oaModNet)\n"
"    Calls: oaObject* get(const oaModNet* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaModNet,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaModNet_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaModNet data;
    int convert_status=PyoaInterPointerAppDef_oaModNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaModNetObject* self=(PyoaInterPointerAppDef_oaModNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModNet p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModNet_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModNet_set_doc[] = 
"Class: oaInterPointerAppDef_oaModNet, Function: set\n"
"  Paramegers: (oaModNet,oaObject)\n"
"    Calls: void set(oaModNet* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaModNet,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaModNet_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaModNet data;
    int convert_status=PyoaInterPointerAppDef_oaModNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaModNetObject* self=(PyoaInterPointerAppDef_oaModNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModNet p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModNet_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModNet_isNull_doc[] =
"Class: oaInterPointerAppDef_oaModNet, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaModNet_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaModNet data;
    int convert_status=PyoaInterPointerAppDef_oaModNet_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaModNet_assign_doc[] = 
"Class: oaInterPointerAppDef_oaModNet, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaModNet_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaModNet data;
  int convert_status=PyoaInterPointerAppDef_oaModNet_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaModNet p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaModNet_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaModNet_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaModNet_get,METH_VARARGS,oaInterPointerAppDef_oaModNet_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaModNet_set,METH_VARARGS,oaInterPointerAppDef_oaModNet_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaModNet_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaModNet_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaModNet_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaModNet_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModNet_doc[] = 
"Class: oaInterPointerAppDef_oaModNet\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaModNet)\n"
"    Calls: (const oaInterPointerAppDef_oaModNet&)\n"
"    Signature: oaInterPointerAppDef_oaModNet||cref-oaInterPointerAppDef_oaModNet,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaModNet_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaModNet",
    sizeof(PyoaInterPointerAppDef_oaModNetObject),
    0,
    (destructor)oaInterPointerAppDef_oaModNet_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaModNet_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaModNet_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaModNet_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaModNet_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaModNet_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModNet_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaModNet, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaModNet* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaModNet|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaModNet* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaModNet|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaModNet_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaModNetp result= (oaInterPointerAppDef_oaModNet::find(p1.Data()));
            return PyoaInterPointerAppDef_oaModNet_FromoaInterPointerAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModNetp result= (oaInterPointerAppDef_oaModNet::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModNet_FromoaInterPointerAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaModNet, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModNet_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaModNet, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaModNet* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModNet|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaModNet* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModNet|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaModNet* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModNet|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaModNet* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModNet|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaModNet_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaModNetp result= (oaInterPointerAppDef_oaModNet::get(p1.Data()));
            return PyoaInterPointerAppDef_oaModNet_FromoaInterPointerAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaModNetp result= (oaInterPointerAppDef_oaModNet::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModNet_FromoaInterPointerAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModNetp result= (oaInterPointerAppDef_oaModNet::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModNet_FromoaInterPointerAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModNetp result= (oaInterPointerAppDef_oaModNet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaModNet_FromoaInterPointerAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaModNet, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaModNet_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaModNet_static_find,METH_VARARGS,oaInterPointerAppDef_oaModNet_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaModNet_static_get,METH_VARARGS,oaInterPointerAppDef_oaModNet_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaModNet_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaModNet_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaModNet\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaModNet",
           (PyObject*)(&PyoaInterPointerAppDef_oaModNet_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaModNet\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaModNet_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaModNet_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaModTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaModTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaModTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaModTermObject* self = (PyoaInterPointerAppDef_oaModTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaModTerm)
    {
        PyParamoaInterPointerAppDef_oaModTerm p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaModTerm_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaModTerm, Choices are:\n"
        "    (oaInterPointerAppDef_oaModTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaModTerm_tp_dealloc(PyoaInterPointerAppDef_oaModTermObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaModTerm_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaModTerm value;
    int convert_status=PyoaInterPointerAppDef_oaModTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaInterPointerAppDef_oaModTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaModTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaModTerm v1;
    PyParamoaInterPointerAppDef_oaModTerm v2;
    int convert_status1=PyoaInterPointerAppDef_oaModTerm_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaModTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaModTerm_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaModTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaModTerm_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaModTerm**) ((PyoaInterPointerAppDef_oaModTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaModTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaModTerm_FromoaInterPointerAppDef_oaModTerm(oaInterPointerAppDef_oaModTerm** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaModTerm* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaModTerm_Type.tp_alloc(&PyoaInterPointerAppDef_oaModTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaModTermObject* self = (PyoaInterPointerAppDef_oaModTermObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaModTerm_FromoaInterPointerAppDef_oaModTerm(oaInterPointerAppDef_oaModTerm* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaModTerm_Type.tp_alloc(&PyoaInterPointerAppDef_oaModTerm_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaModTermObject* self = (PyoaInterPointerAppDef_oaModTermObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModTerm_get_doc[] = 
"Class: oaInterPointerAppDef_oaModTerm, Function: get\n"
"  Paramegers: (oaModTerm)\n"
"    Calls: oaObject* get(const oaModTerm* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaModTerm,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaModTerm_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaModTerm data;
    int convert_status=PyoaInterPointerAppDef_oaModTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaModTermObject* self=(PyoaInterPointerAppDef_oaModTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModTerm_set_doc[] = 
"Class: oaInterPointerAppDef_oaModTerm, Function: set\n"
"  Paramegers: (oaModTerm,oaObject)\n"
"    Calls: void set(oaModTerm* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaModTerm,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaModTerm_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaModTerm data;
    int convert_status=PyoaInterPointerAppDef_oaModTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaModTermObject* self=(PyoaInterPointerAppDef_oaModTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModTerm p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModTerm_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModTerm_isNull_doc[] =
"Class: oaInterPointerAppDef_oaModTerm, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaModTerm_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaModTerm data;
    int convert_status=PyoaInterPointerAppDef_oaModTerm_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaModTerm_assign_doc[] = 
"Class: oaInterPointerAppDef_oaModTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaModTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaModTerm data;
  int convert_status=PyoaInterPointerAppDef_oaModTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaModTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaModTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaModTerm_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaModTerm_get,METH_VARARGS,oaInterPointerAppDef_oaModTerm_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaModTerm_set,METH_VARARGS,oaInterPointerAppDef_oaModTerm_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaModTerm_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaModTerm_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaModTerm_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaModTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModTerm_doc[] = 
"Class: oaInterPointerAppDef_oaModTerm\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaModTerm)\n"
"    Calls: (const oaInterPointerAppDef_oaModTerm&)\n"
"    Signature: oaInterPointerAppDef_oaModTerm||cref-oaInterPointerAppDef_oaModTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaModTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaModTerm",
    sizeof(PyoaInterPointerAppDef_oaModTermObject),
    0,
    (destructor)oaInterPointerAppDef_oaModTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaModTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaModTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaModTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaModTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaModTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModTerm_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaModTerm, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaModTerm* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaModTerm|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaModTerm* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaModTerm|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaModTerm_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaModTermp result= (oaInterPointerAppDef_oaModTerm::find(p1.Data()));
            return PyoaInterPointerAppDef_oaModTerm_FromoaInterPointerAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModTermp result= (oaInterPointerAppDef_oaModTerm::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModTerm_FromoaInterPointerAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaModTerm, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModTerm_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaModTerm, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaModTerm* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaModTerm* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaModTerm* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaModTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaModTerm_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaModTermp result= (oaInterPointerAppDef_oaModTerm::get(p1.Data()));
            return PyoaInterPointerAppDef_oaModTerm_FromoaInterPointerAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaModTermp result= (oaInterPointerAppDef_oaModTerm::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModTerm_FromoaInterPointerAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModTermp result= (oaInterPointerAppDef_oaModTerm::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModTerm_FromoaInterPointerAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModTermp result= (oaInterPointerAppDef_oaModTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaModTerm_FromoaInterPointerAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaModTerm, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaModTerm_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaModTerm_static_find,METH_VARARGS,oaInterPointerAppDef_oaModTerm_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaModTerm_static_get,METH_VARARGS,oaInterPointerAppDef_oaModTerm_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaModTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaModTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaModTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaModTerm",
           (PyObject*)(&PyoaInterPointerAppDef_oaModTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaModTerm\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaModTerm_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaModTerm_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaModVectorInstDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaModVectorInstDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaModVectorInstDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaModVectorInstDefObject* self = (PyoaInterPointerAppDef_oaModVectorInstDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaModVectorInstDef)
    {
        PyParamoaInterPointerAppDef_oaModVectorInstDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaModVectorInstDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaModVectorInstDef, Choices are:\n"
        "    (oaInterPointerAppDef_oaModVectorInstDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaModVectorInstDef_tp_dealloc(PyoaInterPointerAppDef_oaModVectorInstDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaModVectorInstDef_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaModVectorInstDef value;
    int convert_status=PyoaInterPointerAppDef_oaModVectorInstDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[61];
    sprintf(buffer,"<oaInterPointerAppDef_oaModVectorInstDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaModVectorInstDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaModVectorInstDef v1;
    PyParamoaInterPointerAppDef_oaModVectorInstDef v2;
    int convert_status1=PyoaInterPointerAppDef_oaModVectorInstDef_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaModVectorInstDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaModVectorInstDef_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaModVectorInstDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaModVectorInstDef_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaModVectorInstDef**) ((PyoaInterPointerAppDef_oaModVectorInstDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaModVectorInstDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaModVectorInstDef_FromoaInterPointerAppDef_oaModVectorInstDef(oaInterPointerAppDef_oaModVectorInstDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaModVectorInstDef* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaModVectorInstDef_Type.tp_alloc(&PyoaInterPointerAppDef_oaModVectorInstDef_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaModVectorInstDefObject* self = (PyoaInterPointerAppDef_oaModVectorInstDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaModVectorInstDef_FromoaInterPointerAppDef_oaModVectorInstDef(oaInterPointerAppDef_oaModVectorInstDef* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaModVectorInstDef_Type.tp_alloc(&PyoaInterPointerAppDef_oaModVectorInstDef_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaModVectorInstDefObject* self = (PyoaInterPointerAppDef_oaModVectorInstDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModVectorInstDef_get_doc[] = 
"Class: oaInterPointerAppDef_oaModVectorInstDef, Function: get\n"
"  Paramegers: (oaModVectorInstDef)\n"
"    Calls: oaObject* get(const oaModVectorInstDef* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaModVectorInstDef,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaModVectorInstDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaModVectorInstDef data;
    int convert_status=PyoaInterPointerAppDef_oaModVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaModVectorInstDefObject* self=(PyoaInterPointerAppDef_oaModVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModVectorInstDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModVectorInstDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModVectorInstDef_set_doc[] = 
"Class: oaInterPointerAppDef_oaModVectorInstDef, Function: set\n"
"  Paramegers: (oaModVectorInstDef,oaObject)\n"
"    Calls: void set(oaModVectorInstDef* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaModVectorInstDef,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaModVectorInstDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaModVectorInstDef data;
    int convert_status=PyoaInterPointerAppDef_oaModVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaModVectorInstDefObject* self=(PyoaInterPointerAppDef_oaModVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModVectorInstDef p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModVectorInstDef_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModVectorInstDef_isNull_doc[] =
"Class: oaInterPointerAppDef_oaModVectorInstDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaModVectorInstDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaModVectorInstDef data;
    int convert_status=PyoaInterPointerAppDef_oaModVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaModVectorInstDef_assign_doc[] = 
"Class: oaInterPointerAppDef_oaModVectorInstDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaModVectorInstDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaModVectorInstDef data;
  int convert_status=PyoaInterPointerAppDef_oaModVectorInstDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaModVectorInstDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaModVectorInstDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaModVectorInstDef_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaModVectorInstDef_get,METH_VARARGS,oaInterPointerAppDef_oaModVectorInstDef_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaModVectorInstDef_set,METH_VARARGS,oaInterPointerAppDef_oaModVectorInstDef_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaModVectorInstDef_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaModVectorInstDef_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaModVectorInstDef_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaModVectorInstDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModVectorInstDef_doc[] = 
"Class: oaInterPointerAppDef_oaModVectorInstDef\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaModVectorInstDef)\n"
"    Calls: (const oaInterPointerAppDef_oaModVectorInstDef&)\n"
"    Signature: oaInterPointerAppDef_oaModVectorInstDef||cref-oaInterPointerAppDef_oaModVectorInstDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaModVectorInstDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaModVectorInstDef",
    sizeof(PyoaInterPointerAppDef_oaModVectorInstDefObject),
    0,
    (destructor)oaInterPointerAppDef_oaModVectorInstDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaModVectorInstDef_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaModVectorInstDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaModVectorInstDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaModVectorInstDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaModVectorInstDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModVectorInstDef_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaModVectorInstDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaModVectorInstDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaModVectorInstDef|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaModVectorInstDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaModVectorInstDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaModVectorInstDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaModVectorInstDefp result= (oaInterPointerAppDef_oaModVectorInstDef::find(p1.Data()));
            return PyoaInterPointerAppDef_oaModVectorInstDef_FromoaInterPointerAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModVectorInstDefp result= (oaInterPointerAppDef_oaModVectorInstDef::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModVectorInstDef_FromoaInterPointerAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaModVectorInstDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModVectorInstDef_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaModVectorInstDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaModVectorInstDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModVectorInstDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaModVectorInstDef* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModVectorInstDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaModVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaModVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaModVectorInstDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaModVectorInstDefp result= (oaInterPointerAppDef_oaModVectorInstDef::get(p1.Data()));
            return PyoaInterPointerAppDef_oaModVectorInstDef_FromoaInterPointerAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaModVectorInstDefp result= (oaInterPointerAppDef_oaModVectorInstDef::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModVectorInstDef_FromoaInterPointerAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModVectorInstDefp result= (oaInterPointerAppDef_oaModVectorInstDef::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModVectorInstDef_FromoaInterPointerAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModVectorInstDefp result= (oaInterPointerAppDef_oaModVectorInstDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaModVectorInstDef_FromoaInterPointerAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaModVectorInstDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaModVectorInstDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaModVectorInstDef_static_find,METH_VARARGS,oaInterPointerAppDef_oaModVectorInstDef_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaModVectorInstDef_static_get,METH_VARARGS,oaInterPointerAppDef_oaModVectorInstDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaModVectorInstDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaModVectorInstDef_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaModVectorInstDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaModVectorInstDef",
           (PyObject*)(&PyoaInterPointerAppDef_oaModVectorInstDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaModVectorInstDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaModVectorInstDef_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaModVectorInstDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaModule
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaModule_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaModule_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaModuleObject* self = (PyoaInterPointerAppDef_oaModuleObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaModule)
    {
        PyParamoaInterPointerAppDef_oaModule p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaModule_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaModule, Choices are:\n"
        "    (oaInterPointerAppDef_oaModule)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaModule_tp_dealloc(PyoaInterPointerAppDef_oaModuleObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaModule_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaModule value;
    int convert_status=PyoaInterPointerAppDef_oaModule_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[51];
    sprintf(buffer,"<oaInterPointerAppDef_oaModule::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaModule_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaModule v1;
    PyParamoaInterPointerAppDef_oaModule v2;
    int convert_status1=PyoaInterPointerAppDef_oaModule_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaModule_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaModule_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaModule* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaModule_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaModule**) ((PyoaInterPointerAppDef_oaModuleObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaModule Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaModule_FromoaInterPointerAppDef_oaModule(oaInterPointerAppDef_oaModule** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaModule* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaModule_Type.tp_alloc(&PyoaInterPointerAppDef_oaModule_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaModuleObject* self = (PyoaInterPointerAppDef_oaModuleObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaModule_FromoaInterPointerAppDef_oaModule(oaInterPointerAppDef_oaModule* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaModule_Type.tp_alloc(&PyoaInterPointerAppDef_oaModule_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaModuleObject* self = (PyoaInterPointerAppDef_oaModuleObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModule_get_doc[] = 
"Class: oaInterPointerAppDef_oaModule, Function: get\n"
"  Paramegers: (oaModule)\n"
"    Calls: oaObject* get(const oaModule* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaModule,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaModule_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaModule data;
    int convert_status=PyoaInterPointerAppDef_oaModule_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaModuleObject* self=(PyoaInterPointerAppDef_oaModuleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModule p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModule_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModule_set_doc[] = 
"Class: oaInterPointerAppDef_oaModule, Function: set\n"
"  Paramegers: (oaModule,oaObject)\n"
"    Calls: void set(oaModule* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaModule,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaModule_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaModule data;
    int convert_status=PyoaInterPointerAppDef_oaModule_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaModuleObject* self=(PyoaInterPointerAppDef_oaModuleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModule p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModule_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModule_isNull_doc[] =
"Class: oaInterPointerAppDef_oaModule, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaModule_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaModule data;
    int convert_status=PyoaInterPointerAppDef_oaModule_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaModule_assign_doc[] = 
"Class: oaInterPointerAppDef_oaModule, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaModule_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaModule data;
  int convert_status=PyoaInterPointerAppDef_oaModule_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaModule p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaModule_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaModule_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaModule_get,METH_VARARGS,oaInterPointerAppDef_oaModule_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaModule_set,METH_VARARGS,oaInterPointerAppDef_oaModule_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaModule_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaModule_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaModule_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaModule_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModule_doc[] = 
"Class: oaInterPointerAppDef_oaModule\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaModule)\n"
"    Calls: (const oaInterPointerAppDef_oaModule&)\n"
"    Signature: oaInterPointerAppDef_oaModule||cref-oaInterPointerAppDef_oaModule,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaModule_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaModule",
    sizeof(PyoaInterPointerAppDef_oaModuleObject),
    0,
    (destructor)oaInterPointerAppDef_oaModule_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaModule_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaModule_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaModule_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaModule_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaModule_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModule_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaModule, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaModule* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaModule|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaModule* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaModule|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaModule_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaModulep result= (oaInterPointerAppDef_oaModule::find(p1.Data()));
            return PyoaInterPointerAppDef_oaModule_FromoaInterPointerAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModulep result= (oaInterPointerAppDef_oaModule::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModule_FromoaInterPointerAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaModule, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaModule_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaModule, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaModule* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModule|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaModule* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModule|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaModule* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModule|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaModule* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaModule|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaModule_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaModulep result= (oaInterPointerAppDef_oaModule::get(p1.Data()));
            return PyoaInterPointerAppDef_oaModule_FromoaInterPointerAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaModulep result= (oaInterPointerAppDef_oaModule::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModule_FromoaInterPointerAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModulep result= (oaInterPointerAppDef_oaModule::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaModule_FromoaInterPointerAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaModulep result= (oaInterPointerAppDef_oaModule::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaModule_FromoaInterPointerAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaModule, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaModule_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaModule_static_find,METH_VARARGS,oaInterPointerAppDef_oaModule_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaModule_static_get,METH_VARARGS,oaInterPointerAppDef_oaModule_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaModule_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaModule_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaModule\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaModule",
           (PyObject*)(&PyoaInterPointerAppDef_oaModule_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaModule\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaModule_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaModule_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaNet
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaNet_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaNet_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaNetObject* self = (PyoaInterPointerAppDef_oaNetObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaNet)
    {
        PyParamoaInterPointerAppDef_oaNet p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaNet_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaNet, Choices are:\n"
        "    (oaInterPointerAppDef_oaNet)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaNet_tp_dealloc(PyoaInterPointerAppDef_oaNetObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaNet_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaNet value;
    int convert_status=PyoaInterPointerAppDef_oaNet_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[48];
    sprintf(buffer,"<oaInterPointerAppDef_oaNet::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaNet_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaNet v1;
    PyParamoaInterPointerAppDef_oaNet v2;
    int convert_status1=PyoaInterPointerAppDef_oaNet_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaNet_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaNet_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaNet* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaNet_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaNet**) ((PyoaInterPointerAppDef_oaNetObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaNet Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaNet_FromoaInterPointerAppDef_oaNet(oaInterPointerAppDef_oaNet** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaNet* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaNet_Type.tp_alloc(&PyoaInterPointerAppDef_oaNet_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaNetObject* self = (PyoaInterPointerAppDef_oaNetObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaNet_FromoaInterPointerAppDef_oaNet(oaInterPointerAppDef_oaNet* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaNet_Type.tp_alloc(&PyoaInterPointerAppDef_oaNet_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaNetObject* self = (PyoaInterPointerAppDef_oaNetObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaNet_get_doc[] = 
"Class: oaInterPointerAppDef_oaNet, Function: get\n"
"  Paramegers: (oaNet)\n"
"    Calls: oaObject* get(const oaNet* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaNet,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaNet_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaNet data;
    int convert_status=PyoaInterPointerAppDef_oaNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaNetObject* self=(PyoaInterPointerAppDef_oaNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaNet p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaNet_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaNet_set_doc[] = 
"Class: oaInterPointerAppDef_oaNet, Function: set\n"
"  Paramegers: (oaNet,oaObject)\n"
"    Calls: void set(oaNet* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaNet,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaNet_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaNet data;
    int convert_status=PyoaInterPointerAppDef_oaNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaNetObject* self=(PyoaInterPointerAppDef_oaNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaNet p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaNet_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaNet_isNull_doc[] =
"Class: oaInterPointerAppDef_oaNet, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaNet_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaNet data;
    int convert_status=PyoaInterPointerAppDef_oaNet_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaNet_assign_doc[] = 
"Class: oaInterPointerAppDef_oaNet, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaNet_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaNet data;
  int convert_status=PyoaInterPointerAppDef_oaNet_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaNet p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaNet_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaNet_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaNet_get,METH_VARARGS,oaInterPointerAppDef_oaNet_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaNet_set,METH_VARARGS,oaInterPointerAppDef_oaNet_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaNet_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaNet_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaNet_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaNet_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaNet_doc[] = 
"Class: oaInterPointerAppDef_oaNet\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaNet)\n"
"    Calls: (const oaInterPointerAppDef_oaNet&)\n"
"    Signature: oaInterPointerAppDef_oaNet||cref-oaInterPointerAppDef_oaNet,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaNet_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaNet",
    sizeof(PyoaInterPointerAppDef_oaNetObject),
    0,
    (destructor)oaInterPointerAppDef_oaNet_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaNet_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaNet_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaNet_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaNet_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaNet_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaNet_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaNet, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaNet* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaNet|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaNet* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaNet|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaNet_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaNetp result= (oaInterPointerAppDef_oaNet::find(p1.Data()));
            return PyoaInterPointerAppDef_oaNet_FromoaInterPointerAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaNetp result= (oaInterPointerAppDef_oaNet::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaNet_FromoaInterPointerAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaNet, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaNet_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaNet, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaNet* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaNet|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaNet* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaNet|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaNet* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaNet|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaNet* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaNet|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaNet_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaNetp result= (oaInterPointerAppDef_oaNet::get(p1.Data()));
            return PyoaInterPointerAppDef_oaNet_FromoaInterPointerAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaNetp result= (oaInterPointerAppDef_oaNet::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaNet_FromoaInterPointerAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaNetp result= (oaInterPointerAppDef_oaNet::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaNet_FromoaInterPointerAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaNetp result= (oaInterPointerAppDef_oaNet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaNet_FromoaInterPointerAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaNet, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaNet_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaNet_static_find,METH_VARARGS,oaInterPointerAppDef_oaNet_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaNet_static_get,METH_VARARGS,oaInterPointerAppDef_oaNet_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaNet_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaNet_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaNet\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaNet",
           (PyObject*)(&PyoaInterPointerAppDef_oaNet_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaNet\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaNet_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaNet_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaNode
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaNode_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaNode_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaNodeObject* self = (PyoaInterPointerAppDef_oaNodeObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaNode)
    {
        PyParamoaInterPointerAppDef_oaNode p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaNode_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaNode, Choices are:\n"
        "    (oaInterPointerAppDef_oaNode)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaNode_tp_dealloc(PyoaInterPointerAppDef_oaNodeObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaNode_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaNode value;
    int convert_status=PyoaInterPointerAppDef_oaNode_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[49];
    sprintf(buffer,"<oaInterPointerAppDef_oaNode::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaNode_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaNode v1;
    PyParamoaInterPointerAppDef_oaNode v2;
    int convert_status1=PyoaInterPointerAppDef_oaNode_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaNode_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaNode_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaNode* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaNode_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaNode**) ((PyoaInterPointerAppDef_oaNodeObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaNode Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaNode_FromoaInterPointerAppDef_oaNode(oaInterPointerAppDef_oaNode** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaNode* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaNode_Type.tp_alloc(&PyoaInterPointerAppDef_oaNode_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaNodeObject* self = (PyoaInterPointerAppDef_oaNodeObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaNode_FromoaInterPointerAppDef_oaNode(oaInterPointerAppDef_oaNode* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaNode_Type.tp_alloc(&PyoaInterPointerAppDef_oaNode_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaNodeObject* self = (PyoaInterPointerAppDef_oaNodeObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaNode_get_doc[] = 
"Class: oaInterPointerAppDef_oaNode, Function: get\n"
"  Paramegers: (oaNode)\n"
"    Calls: oaObject* get(const oaNode* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaNode,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaNode_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaNode data;
    int convert_status=PyoaInterPointerAppDef_oaNode_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaNodeObject* self=(PyoaInterPointerAppDef_oaNodeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaNode p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaNode_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaNode_set_doc[] = 
"Class: oaInterPointerAppDef_oaNode, Function: set\n"
"  Paramegers: (oaNode,oaObject)\n"
"    Calls: void set(oaNode* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaNode,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaNode_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaNode data;
    int convert_status=PyoaInterPointerAppDef_oaNode_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaNodeObject* self=(PyoaInterPointerAppDef_oaNodeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaNode p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaNode_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaNode_isNull_doc[] =
"Class: oaInterPointerAppDef_oaNode, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaNode_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaNode data;
    int convert_status=PyoaInterPointerAppDef_oaNode_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaNode_assign_doc[] = 
"Class: oaInterPointerAppDef_oaNode, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaNode_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaNode data;
  int convert_status=PyoaInterPointerAppDef_oaNode_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaNode p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaNode_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaNode_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaNode_get,METH_VARARGS,oaInterPointerAppDef_oaNode_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaNode_set,METH_VARARGS,oaInterPointerAppDef_oaNode_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaNode_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaNode_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaNode_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaNode_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaNode_doc[] = 
"Class: oaInterPointerAppDef_oaNode\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaNode)\n"
"    Calls: (const oaInterPointerAppDef_oaNode&)\n"
"    Signature: oaInterPointerAppDef_oaNode||cref-oaInterPointerAppDef_oaNode,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaNode_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaNode",
    sizeof(PyoaInterPointerAppDef_oaNodeObject),
    0,
    (destructor)oaInterPointerAppDef_oaNode_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaNode_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaNode_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaNode_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaNode_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaNode_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaNode_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaNode, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaNode* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaNode|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaNode* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaNode|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaNode_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaNodep result= (oaInterPointerAppDef_oaNode::find(p1.Data()));
            return PyoaInterPointerAppDef_oaNode_FromoaInterPointerAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaNodep result= (oaInterPointerAppDef_oaNode::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaNode_FromoaInterPointerAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaNode, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaNode_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaNode, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaNode* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaNode|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaNode* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaNode|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaNode* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaNode|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaNode* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaNode|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaNode_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaNodep result= (oaInterPointerAppDef_oaNode::get(p1.Data()));
            return PyoaInterPointerAppDef_oaNode_FromoaInterPointerAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaNodep result= (oaInterPointerAppDef_oaNode::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaNode_FromoaInterPointerAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaNodep result= (oaInterPointerAppDef_oaNode::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaNode_FromoaInterPointerAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaNodep result= (oaInterPointerAppDef_oaNode::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaNode_FromoaInterPointerAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaNode, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaNode_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaNode_static_find,METH_VARARGS,oaInterPointerAppDef_oaNode_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaNode_static_get,METH_VARARGS,oaInterPointerAppDef_oaNode_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaNode_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaNode_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaNode\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaNode",
           (PyObject*)(&PyoaInterPointerAppDef_oaNode_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaNode\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaNode_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaNode_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaOccAssignment
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaOccAssignment_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaOccAssignment_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaOccAssignmentObject* self = (PyoaInterPointerAppDef_oaOccAssignmentObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaOccAssignment)
    {
        PyParamoaInterPointerAppDef_oaOccAssignment p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaOccAssignment_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaOccAssignment, Choices are:\n"
        "    (oaInterPointerAppDef_oaOccAssignment)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaOccAssignment_tp_dealloc(PyoaInterPointerAppDef_oaOccAssignmentObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaOccAssignment_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaOccAssignment value;
    int convert_status=PyoaInterPointerAppDef_oaOccAssignment_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[58];
    sprintf(buffer,"<oaInterPointerAppDef_oaOccAssignment::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaOccAssignment_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaOccAssignment v1;
    PyParamoaInterPointerAppDef_oaOccAssignment v2;
    int convert_status1=PyoaInterPointerAppDef_oaOccAssignment_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaOccAssignment_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaOccAssignment_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaOccAssignment* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaOccAssignment_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaOccAssignment**) ((PyoaInterPointerAppDef_oaOccAssignmentObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaOccAssignment Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaOccAssignment_FromoaInterPointerAppDef_oaOccAssignment(oaInterPointerAppDef_oaOccAssignment** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaOccAssignment* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaOccAssignment_Type.tp_alloc(&PyoaInterPointerAppDef_oaOccAssignment_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaOccAssignmentObject* self = (PyoaInterPointerAppDef_oaOccAssignmentObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaOccAssignment_FromoaInterPointerAppDef_oaOccAssignment(oaInterPointerAppDef_oaOccAssignment* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaOccAssignment_Type.tp_alloc(&PyoaInterPointerAppDef_oaOccAssignment_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaOccAssignmentObject* self = (PyoaInterPointerAppDef_oaOccAssignmentObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccAssignment_get_doc[] = 
"Class: oaInterPointerAppDef_oaOccAssignment, Function: get\n"
"  Paramegers: (oaOccAssignment)\n"
"    Calls: oaObject* get(const oaOccAssignment* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaOccAssignment,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaOccAssignment_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaOccAssignment data;
    int convert_status=PyoaInterPointerAppDef_oaOccAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaOccAssignmentObject* self=(PyoaInterPointerAppDef_oaOccAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccAssignment p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccAssignment_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccAssignment_set_doc[] = 
"Class: oaInterPointerAppDef_oaOccAssignment, Function: set\n"
"  Paramegers: (oaOccAssignment,oaObject)\n"
"    Calls: void set(oaOccAssignment* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaOccAssignment,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaOccAssignment_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaOccAssignment data;
    int convert_status=PyoaInterPointerAppDef_oaOccAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaOccAssignmentObject* self=(PyoaInterPointerAppDef_oaOccAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccAssignment p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccAssignment_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccAssignment_isNull_doc[] =
"Class: oaInterPointerAppDef_oaOccAssignment, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaOccAssignment_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaOccAssignment data;
    int convert_status=PyoaInterPointerAppDef_oaOccAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaOccAssignment_assign_doc[] = 
"Class: oaInterPointerAppDef_oaOccAssignment, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaOccAssignment_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaOccAssignment data;
  int convert_status=PyoaInterPointerAppDef_oaOccAssignment_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaOccAssignment p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaOccAssignment_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaOccAssignment_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaOccAssignment_get,METH_VARARGS,oaInterPointerAppDef_oaOccAssignment_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaOccAssignment_set,METH_VARARGS,oaInterPointerAppDef_oaOccAssignment_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaOccAssignment_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaOccAssignment_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaOccAssignment_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaOccAssignment_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccAssignment_doc[] = 
"Class: oaInterPointerAppDef_oaOccAssignment\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaOccAssignment)\n"
"    Calls: (const oaInterPointerAppDef_oaOccAssignment&)\n"
"    Signature: oaInterPointerAppDef_oaOccAssignment||cref-oaInterPointerAppDef_oaOccAssignment,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaOccAssignment_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaOccAssignment",
    sizeof(PyoaInterPointerAppDef_oaOccAssignmentObject),
    0,
    (destructor)oaInterPointerAppDef_oaOccAssignment_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaOccAssignment_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaOccAssignment_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaOccAssignment_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaOccAssignment_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaOccAssignment_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccAssignment_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaOccAssignment, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaOccAssignment* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaOccAssignment|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaOccAssignment* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaOccAssignment|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaOccAssignment_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaOccAssignmentp result= (oaInterPointerAppDef_oaOccAssignment::find(p1.Data()));
            return PyoaInterPointerAppDef_oaOccAssignment_FromoaInterPointerAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccAssignmentp result= (oaInterPointerAppDef_oaOccAssignment::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccAssignment_FromoaInterPointerAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaOccAssignment, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccAssignment_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaOccAssignment, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaOccAssignment* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccAssignment|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaOccAssignment* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccAssignment|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaOccAssignment* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaOccAssignment* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaOccAssignment_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaOccAssignmentp result= (oaInterPointerAppDef_oaOccAssignment::get(p1.Data()));
            return PyoaInterPointerAppDef_oaOccAssignment_FromoaInterPointerAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaOccAssignmentp result= (oaInterPointerAppDef_oaOccAssignment::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccAssignment_FromoaInterPointerAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccAssignmentp result= (oaInterPointerAppDef_oaOccAssignment::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccAssignment_FromoaInterPointerAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccAssignmentp result= (oaInterPointerAppDef_oaOccAssignment::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaOccAssignment_FromoaInterPointerAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaOccAssignment, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaOccAssignment_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaOccAssignment_static_find,METH_VARARGS,oaInterPointerAppDef_oaOccAssignment_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaOccAssignment_static_get,METH_VARARGS,oaInterPointerAppDef_oaOccAssignment_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaOccAssignment_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaOccAssignment_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaOccAssignment\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaOccAssignment",
           (PyObject*)(&PyoaInterPointerAppDef_oaOccAssignment_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaOccAssignment\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaOccAssignment_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaOccAssignment_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaOccBusNetDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaOccBusNetDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaOccBusNetDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaOccBusNetDefObject* self = (PyoaInterPointerAppDef_oaOccBusNetDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaOccBusNetDef)
    {
        PyParamoaInterPointerAppDef_oaOccBusNetDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaOccBusNetDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaOccBusNetDef, Choices are:\n"
        "    (oaInterPointerAppDef_oaOccBusNetDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaOccBusNetDef_tp_dealloc(PyoaInterPointerAppDef_oaOccBusNetDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaOccBusNetDef_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaOccBusNetDef value;
    int convert_status=PyoaInterPointerAppDef_oaOccBusNetDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[57];
    sprintf(buffer,"<oaInterPointerAppDef_oaOccBusNetDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaOccBusNetDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaOccBusNetDef v1;
    PyParamoaInterPointerAppDef_oaOccBusNetDef v2;
    int convert_status1=PyoaInterPointerAppDef_oaOccBusNetDef_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaOccBusNetDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaOccBusNetDef_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaOccBusNetDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaOccBusNetDef_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaOccBusNetDef**) ((PyoaInterPointerAppDef_oaOccBusNetDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaOccBusNetDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaOccBusNetDef_FromoaInterPointerAppDef_oaOccBusNetDef(oaInterPointerAppDef_oaOccBusNetDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaOccBusNetDef* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaOccBusNetDef_Type.tp_alloc(&PyoaInterPointerAppDef_oaOccBusNetDef_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaOccBusNetDefObject* self = (PyoaInterPointerAppDef_oaOccBusNetDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaOccBusNetDef_FromoaInterPointerAppDef_oaOccBusNetDef(oaInterPointerAppDef_oaOccBusNetDef* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaOccBusNetDef_Type.tp_alloc(&PyoaInterPointerAppDef_oaOccBusNetDef_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaOccBusNetDefObject* self = (PyoaInterPointerAppDef_oaOccBusNetDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccBusNetDef_get_doc[] = 
"Class: oaInterPointerAppDef_oaOccBusNetDef, Function: get\n"
"  Paramegers: (oaOccBusNetDef)\n"
"    Calls: oaObject* get(const oaOccBusNetDef* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaOccBusNetDef,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaOccBusNetDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaOccBusNetDef data;
    int convert_status=PyoaInterPointerAppDef_oaOccBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaOccBusNetDefObject* self=(PyoaInterPointerAppDef_oaOccBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccBusNetDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccBusNetDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccBusNetDef_set_doc[] = 
"Class: oaInterPointerAppDef_oaOccBusNetDef, Function: set\n"
"  Paramegers: (oaOccBusNetDef,oaObject)\n"
"    Calls: void set(oaOccBusNetDef* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaOccBusNetDef,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaOccBusNetDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaOccBusNetDef data;
    int convert_status=PyoaInterPointerAppDef_oaOccBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaOccBusNetDefObject* self=(PyoaInterPointerAppDef_oaOccBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccBusNetDef p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccBusNetDef_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccBusNetDef_isNull_doc[] =
"Class: oaInterPointerAppDef_oaOccBusNetDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaOccBusNetDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaOccBusNetDef data;
    int convert_status=PyoaInterPointerAppDef_oaOccBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaOccBusNetDef_assign_doc[] = 
"Class: oaInterPointerAppDef_oaOccBusNetDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaOccBusNetDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaOccBusNetDef data;
  int convert_status=PyoaInterPointerAppDef_oaOccBusNetDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaOccBusNetDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaOccBusNetDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaOccBusNetDef_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaOccBusNetDef_get,METH_VARARGS,oaInterPointerAppDef_oaOccBusNetDef_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaOccBusNetDef_set,METH_VARARGS,oaInterPointerAppDef_oaOccBusNetDef_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaOccBusNetDef_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaOccBusNetDef_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaOccBusNetDef_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaOccBusNetDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccBusNetDef_doc[] = 
"Class: oaInterPointerAppDef_oaOccBusNetDef\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaOccBusNetDef)\n"
"    Calls: (const oaInterPointerAppDef_oaOccBusNetDef&)\n"
"    Signature: oaInterPointerAppDef_oaOccBusNetDef||cref-oaInterPointerAppDef_oaOccBusNetDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaOccBusNetDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaOccBusNetDef",
    sizeof(PyoaInterPointerAppDef_oaOccBusNetDefObject),
    0,
    (destructor)oaInterPointerAppDef_oaOccBusNetDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaOccBusNetDef_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaOccBusNetDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaOccBusNetDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaOccBusNetDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaOccBusNetDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccBusNetDef_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaOccBusNetDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaOccBusNetDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaOccBusNetDef|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaOccBusNetDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaOccBusNetDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaOccBusNetDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaOccBusNetDefp result= (oaInterPointerAppDef_oaOccBusNetDef::find(p1.Data()));
            return PyoaInterPointerAppDef_oaOccBusNetDef_FromoaInterPointerAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccBusNetDefp result= (oaInterPointerAppDef_oaOccBusNetDef::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccBusNetDef_FromoaInterPointerAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaOccBusNetDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccBusNetDef_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaOccBusNetDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaOccBusNetDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccBusNetDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaOccBusNetDef* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccBusNetDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaOccBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaOccBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaOccBusNetDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaOccBusNetDefp result= (oaInterPointerAppDef_oaOccBusNetDef::get(p1.Data()));
            return PyoaInterPointerAppDef_oaOccBusNetDef_FromoaInterPointerAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaOccBusNetDefp result= (oaInterPointerAppDef_oaOccBusNetDef::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccBusNetDef_FromoaInterPointerAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccBusNetDefp result= (oaInterPointerAppDef_oaOccBusNetDef::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccBusNetDef_FromoaInterPointerAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccBusNetDefp result= (oaInterPointerAppDef_oaOccBusNetDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaOccBusNetDef_FromoaInterPointerAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaOccBusNetDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaOccBusNetDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaOccBusNetDef_static_find,METH_VARARGS,oaInterPointerAppDef_oaOccBusNetDef_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaOccBusNetDef_static_get,METH_VARARGS,oaInterPointerAppDef_oaOccBusNetDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaOccBusNetDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaOccBusNetDef_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaOccBusNetDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaOccBusNetDef",
           (PyObject*)(&PyoaInterPointerAppDef_oaOccBusNetDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaOccBusNetDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaOccBusNetDef_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaOccBusNetDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaOccBusTermDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaOccBusTermDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaOccBusTermDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaOccBusTermDefObject* self = (PyoaInterPointerAppDef_oaOccBusTermDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaOccBusTermDef)
    {
        PyParamoaInterPointerAppDef_oaOccBusTermDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaOccBusTermDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaOccBusTermDef, Choices are:\n"
        "    (oaInterPointerAppDef_oaOccBusTermDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaOccBusTermDef_tp_dealloc(PyoaInterPointerAppDef_oaOccBusTermDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaOccBusTermDef_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaOccBusTermDef value;
    int convert_status=PyoaInterPointerAppDef_oaOccBusTermDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[58];
    sprintf(buffer,"<oaInterPointerAppDef_oaOccBusTermDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaOccBusTermDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaOccBusTermDef v1;
    PyParamoaInterPointerAppDef_oaOccBusTermDef v2;
    int convert_status1=PyoaInterPointerAppDef_oaOccBusTermDef_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaOccBusTermDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaOccBusTermDef_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaOccBusTermDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaOccBusTermDef_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaOccBusTermDef**) ((PyoaInterPointerAppDef_oaOccBusTermDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaOccBusTermDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaOccBusTermDef_FromoaInterPointerAppDef_oaOccBusTermDef(oaInterPointerAppDef_oaOccBusTermDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaOccBusTermDef* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaOccBusTermDef_Type.tp_alloc(&PyoaInterPointerAppDef_oaOccBusTermDef_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaOccBusTermDefObject* self = (PyoaInterPointerAppDef_oaOccBusTermDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaOccBusTermDef_FromoaInterPointerAppDef_oaOccBusTermDef(oaInterPointerAppDef_oaOccBusTermDef* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaOccBusTermDef_Type.tp_alloc(&PyoaInterPointerAppDef_oaOccBusTermDef_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaOccBusTermDefObject* self = (PyoaInterPointerAppDef_oaOccBusTermDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccBusTermDef_get_doc[] = 
"Class: oaInterPointerAppDef_oaOccBusTermDef, Function: get\n"
"  Paramegers: (oaOccBusTermDef)\n"
"    Calls: oaObject* get(const oaOccBusTermDef* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaOccBusTermDef,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaOccBusTermDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaOccBusTermDef data;
    int convert_status=PyoaInterPointerAppDef_oaOccBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaOccBusTermDefObject* self=(PyoaInterPointerAppDef_oaOccBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccBusTermDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccBusTermDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccBusTermDef_set_doc[] = 
"Class: oaInterPointerAppDef_oaOccBusTermDef, Function: set\n"
"  Paramegers: (oaOccBusTermDef,oaObject)\n"
"    Calls: void set(oaOccBusTermDef* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaOccBusTermDef,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaOccBusTermDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaOccBusTermDef data;
    int convert_status=PyoaInterPointerAppDef_oaOccBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaOccBusTermDefObject* self=(PyoaInterPointerAppDef_oaOccBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccBusTermDef p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccBusTermDef_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccBusTermDef_isNull_doc[] =
"Class: oaInterPointerAppDef_oaOccBusTermDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaOccBusTermDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaOccBusTermDef data;
    int convert_status=PyoaInterPointerAppDef_oaOccBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaOccBusTermDef_assign_doc[] = 
"Class: oaInterPointerAppDef_oaOccBusTermDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaOccBusTermDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaOccBusTermDef data;
  int convert_status=PyoaInterPointerAppDef_oaOccBusTermDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaOccBusTermDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaOccBusTermDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaOccBusTermDef_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaOccBusTermDef_get,METH_VARARGS,oaInterPointerAppDef_oaOccBusTermDef_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaOccBusTermDef_set,METH_VARARGS,oaInterPointerAppDef_oaOccBusTermDef_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaOccBusTermDef_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaOccBusTermDef_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaOccBusTermDef_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaOccBusTermDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccBusTermDef_doc[] = 
"Class: oaInterPointerAppDef_oaOccBusTermDef\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaOccBusTermDef)\n"
"    Calls: (const oaInterPointerAppDef_oaOccBusTermDef&)\n"
"    Signature: oaInterPointerAppDef_oaOccBusTermDef||cref-oaInterPointerAppDef_oaOccBusTermDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaOccBusTermDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaOccBusTermDef",
    sizeof(PyoaInterPointerAppDef_oaOccBusTermDefObject),
    0,
    (destructor)oaInterPointerAppDef_oaOccBusTermDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaOccBusTermDef_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaOccBusTermDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaOccBusTermDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaOccBusTermDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaOccBusTermDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccBusTermDef_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaOccBusTermDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaOccBusTermDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaOccBusTermDef|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaOccBusTermDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaOccBusTermDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaOccBusTermDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaOccBusTermDefp result= (oaInterPointerAppDef_oaOccBusTermDef::find(p1.Data()));
            return PyoaInterPointerAppDef_oaOccBusTermDef_FromoaInterPointerAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccBusTermDefp result= (oaInterPointerAppDef_oaOccBusTermDef::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccBusTermDef_FromoaInterPointerAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaOccBusTermDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccBusTermDef_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaOccBusTermDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaOccBusTermDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccBusTermDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaOccBusTermDef* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccBusTermDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaOccBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaOccBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaOccBusTermDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaOccBusTermDefp result= (oaInterPointerAppDef_oaOccBusTermDef::get(p1.Data()));
            return PyoaInterPointerAppDef_oaOccBusTermDef_FromoaInterPointerAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaOccBusTermDefp result= (oaInterPointerAppDef_oaOccBusTermDef::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccBusTermDef_FromoaInterPointerAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccBusTermDefp result= (oaInterPointerAppDef_oaOccBusTermDef::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccBusTermDef_FromoaInterPointerAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccBusTermDefp result= (oaInterPointerAppDef_oaOccBusTermDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaOccBusTermDef_FromoaInterPointerAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaOccBusTermDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaOccBusTermDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaOccBusTermDef_static_find,METH_VARARGS,oaInterPointerAppDef_oaOccBusTermDef_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaOccBusTermDef_static_get,METH_VARARGS,oaInterPointerAppDef_oaOccBusTermDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaOccBusTermDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaOccBusTermDef_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaOccBusTermDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaOccBusTermDef",
           (PyObject*)(&PyoaInterPointerAppDef_oaOccBusTermDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaOccBusTermDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaOccBusTermDef_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaOccBusTermDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaOccConnectDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaOccConnectDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaOccConnectDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaOccConnectDefObject* self = (PyoaInterPointerAppDef_oaOccConnectDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaOccConnectDef)
    {
        PyParamoaInterPointerAppDef_oaOccConnectDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaOccConnectDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaOccConnectDef, Choices are:\n"
        "    (oaInterPointerAppDef_oaOccConnectDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaOccConnectDef_tp_dealloc(PyoaInterPointerAppDef_oaOccConnectDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaOccConnectDef_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaOccConnectDef value;
    int convert_status=PyoaInterPointerAppDef_oaOccConnectDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[58];
    sprintf(buffer,"<oaInterPointerAppDef_oaOccConnectDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaOccConnectDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaOccConnectDef v1;
    PyParamoaInterPointerAppDef_oaOccConnectDef v2;
    int convert_status1=PyoaInterPointerAppDef_oaOccConnectDef_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaOccConnectDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaOccConnectDef_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaOccConnectDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaOccConnectDef_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaOccConnectDef**) ((PyoaInterPointerAppDef_oaOccConnectDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaOccConnectDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaOccConnectDef_FromoaInterPointerAppDef_oaOccConnectDef(oaInterPointerAppDef_oaOccConnectDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaOccConnectDef* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaOccConnectDef_Type.tp_alloc(&PyoaInterPointerAppDef_oaOccConnectDef_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaOccConnectDefObject* self = (PyoaInterPointerAppDef_oaOccConnectDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaOccConnectDef_FromoaInterPointerAppDef_oaOccConnectDef(oaInterPointerAppDef_oaOccConnectDef* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaOccConnectDef_Type.tp_alloc(&PyoaInterPointerAppDef_oaOccConnectDef_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaOccConnectDefObject* self = (PyoaInterPointerAppDef_oaOccConnectDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccConnectDef_get_doc[] = 
"Class: oaInterPointerAppDef_oaOccConnectDef, Function: get\n"
"  Paramegers: (oaOccConnectDef)\n"
"    Calls: oaObject* get(const oaOccConnectDef* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaOccConnectDef,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaOccConnectDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaOccConnectDef data;
    int convert_status=PyoaInterPointerAppDef_oaOccConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaOccConnectDefObject* self=(PyoaInterPointerAppDef_oaOccConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccConnectDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccConnectDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccConnectDef_set_doc[] = 
"Class: oaInterPointerAppDef_oaOccConnectDef, Function: set\n"
"  Paramegers: (oaOccConnectDef,oaObject)\n"
"    Calls: void set(oaOccConnectDef* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaOccConnectDef,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaOccConnectDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaOccConnectDef data;
    int convert_status=PyoaInterPointerAppDef_oaOccConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaOccConnectDefObject* self=(PyoaInterPointerAppDef_oaOccConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccConnectDef p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccConnectDef_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccConnectDef_isNull_doc[] =
"Class: oaInterPointerAppDef_oaOccConnectDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaOccConnectDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaOccConnectDef data;
    int convert_status=PyoaInterPointerAppDef_oaOccConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaOccConnectDef_assign_doc[] = 
"Class: oaInterPointerAppDef_oaOccConnectDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaOccConnectDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaOccConnectDef data;
  int convert_status=PyoaInterPointerAppDef_oaOccConnectDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaOccConnectDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaOccConnectDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaOccConnectDef_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaOccConnectDef_get,METH_VARARGS,oaInterPointerAppDef_oaOccConnectDef_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaOccConnectDef_set,METH_VARARGS,oaInterPointerAppDef_oaOccConnectDef_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaOccConnectDef_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaOccConnectDef_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaOccConnectDef_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaOccConnectDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccConnectDef_doc[] = 
"Class: oaInterPointerAppDef_oaOccConnectDef\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaOccConnectDef)\n"
"    Calls: (const oaInterPointerAppDef_oaOccConnectDef&)\n"
"    Signature: oaInterPointerAppDef_oaOccConnectDef||cref-oaInterPointerAppDef_oaOccConnectDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaOccConnectDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaOccConnectDef",
    sizeof(PyoaInterPointerAppDef_oaOccConnectDefObject),
    0,
    (destructor)oaInterPointerAppDef_oaOccConnectDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaOccConnectDef_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaOccConnectDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaOccConnectDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaOccConnectDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaOccConnectDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccConnectDef_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaOccConnectDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaOccConnectDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaOccConnectDef|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaOccConnectDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaOccConnectDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaOccConnectDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaOccConnectDefp result= (oaInterPointerAppDef_oaOccConnectDef::find(p1.Data()));
            return PyoaInterPointerAppDef_oaOccConnectDef_FromoaInterPointerAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccConnectDefp result= (oaInterPointerAppDef_oaOccConnectDef::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccConnectDef_FromoaInterPointerAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaOccConnectDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccConnectDef_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaOccConnectDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaOccConnectDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccConnectDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaOccConnectDef* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccConnectDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaOccConnectDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaOccConnectDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaOccConnectDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaOccConnectDefp result= (oaInterPointerAppDef_oaOccConnectDef::get(p1.Data()));
            return PyoaInterPointerAppDef_oaOccConnectDef_FromoaInterPointerAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaOccConnectDefp result= (oaInterPointerAppDef_oaOccConnectDef::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccConnectDef_FromoaInterPointerAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccConnectDefp result= (oaInterPointerAppDef_oaOccConnectDef::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccConnectDef_FromoaInterPointerAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccConnectDefp result= (oaInterPointerAppDef_oaOccConnectDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaOccConnectDef_FromoaInterPointerAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaOccConnectDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaOccConnectDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaOccConnectDef_static_find,METH_VARARGS,oaInterPointerAppDef_oaOccConnectDef_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaOccConnectDef_static_get,METH_VARARGS,oaInterPointerAppDef_oaOccConnectDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaOccConnectDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaOccConnectDef_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaOccConnectDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaOccConnectDef",
           (PyObject*)(&PyoaInterPointerAppDef_oaOccConnectDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaOccConnectDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaOccConnectDef_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaOccConnectDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaOccInst
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaOccInst_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaOccInst_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaOccInstObject* self = (PyoaInterPointerAppDef_oaOccInstObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaOccInst)
    {
        PyParamoaInterPointerAppDef_oaOccInst p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaOccInst_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaOccInst, Choices are:\n"
        "    (oaInterPointerAppDef_oaOccInst)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaOccInst_tp_dealloc(PyoaInterPointerAppDef_oaOccInstObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaOccInst_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaOccInst value;
    int convert_status=PyoaInterPointerAppDef_oaOccInst_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaInterPointerAppDef_oaOccInst::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaOccInst_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaOccInst v1;
    PyParamoaInterPointerAppDef_oaOccInst v2;
    int convert_status1=PyoaInterPointerAppDef_oaOccInst_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaOccInst_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaOccInst_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaOccInst* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaOccInst_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaOccInst**) ((PyoaInterPointerAppDef_oaOccInstObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaOccInst Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaOccInst_FromoaInterPointerAppDef_oaOccInst(oaInterPointerAppDef_oaOccInst** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaOccInst* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaOccInst_Type.tp_alloc(&PyoaInterPointerAppDef_oaOccInst_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaOccInstObject* self = (PyoaInterPointerAppDef_oaOccInstObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaOccInst_FromoaInterPointerAppDef_oaOccInst(oaInterPointerAppDef_oaOccInst* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaOccInst_Type.tp_alloc(&PyoaInterPointerAppDef_oaOccInst_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaOccInstObject* self = (PyoaInterPointerAppDef_oaOccInstObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccInst_get_doc[] = 
"Class: oaInterPointerAppDef_oaOccInst, Function: get\n"
"  Paramegers: (oaOccInst)\n"
"    Calls: oaObject* get(const oaOccInst* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaOccInst,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaOccInst_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaOccInst data;
    int convert_status=PyoaInterPointerAppDef_oaOccInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaOccInstObject* self=(PyoaInterPointerAppDef_oaOccInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccInst_set_doc[] = 
"Class: oaInterPointerAppDef_oaOccInst, Function: set\n"
"  Paramegers: (oaOccInst,oaObject)\n"
"    Calls: void set(oaOccInst* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaOccInst,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaOccInst_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaOccInst data;
    int convert_status=PyoaInterPointerAppDef_oaOccInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaOccInstObject* self=(PyoaInterPointerAppDef_oaOccInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInst p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccInst_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccInst_isNull_doc[] =
"Class: oaInterPointerAppDef_oaOccInst, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaOccInst_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaOccInst data;
    int convert_status=PyoaInterPointerAppDef_oaOccInst_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaOccInst_assign_doc[] = 
"Class: oaInterPointerAppDef_oaOccInst, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaOccInst_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaOccInst data;
  int convert_status=PyoaInterPointerAppDef_oaOccInst_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaOccInst p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaOccInst_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaOccInst_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaOccInst_get,METH_VARARGS,oaInterPointerAppDef_oaOccInst_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaOccInst_set,METH_VARARGS,oaInterPointerAppDef_oaOccInst_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaOccInst_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaOccInst_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaOccInst_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaOccInst_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccInst_doc[] = 
"Class: oaInterPointerAppDef_oaOccInst\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaOccInst)\n"
"    Calls: (const oaInterPointerAppDef_oaOccInst&)\n"
"    Signature: oaInterPointerAppDef_oaOccInst||cref-oaInterPointerAppDef_oaOccInst,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaOccInst_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaOccInst",
    sizeof(PyoaInterPointerAppDef_oaOccInstObject),
    0,
    (destructor)oaInterPointerAppDef_oaOccInst_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaOccInst_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaOccInst_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaOccInst_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaOccInst_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaOccInst_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccInst_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaOccInst, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaOccInst* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaOccInst|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaOccInst* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaOccInst|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaOccInst_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaOccInstp result= (oaInterPointerAppDef_oaOccInst::find(p1.Data()));
            return PyoaInterPointerAppDef_oaOccInst_FromoaInterPointerAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccInstp result= (oaInterPointerAppDef_oaOccInst::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccInst_FromoaInterPointerAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaOccInst, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccInst_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaOccInst, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaOccInst* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccInst|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaOccInst* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccInst|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaOccInst* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaOccInst* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaOccInst_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaOccInstp result= (oaInterPointerAppDef_oaOccInst::get(p1.Data()));
            return PyoaInterPointerAppDef_oaOccInst_FromoaInterPointerAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaOccInstp result= (oaInterPointerAppDef_oaOccInst::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccInst_FromoaInterPointerAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccInstp result= (oaInterPointerAppDef_oaOccInst::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccInst_FromoaInterPointerAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccInstp result= (oaInterPointerAppDef_oaOccInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaOccInst_FromoaInterPointerAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaOccInst, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaOccInst_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaOccInst_static_find,METH_VARARGS,oaInterPointerAppDef_oaOccInst_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaOccInst_static_get,METH_VARARGS,oaInterPointerAppDef_oaOccInst_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaOccInst_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaOccInst_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaOccInst\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaOccInst",
           (PyObject*)(&PyoaInterPointerAppDef_oaOccInst_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaOccInst\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaOccInst_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaOccInst_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaOccInstHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaOccInstHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaOccInstHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaOccInstHeaderObject* self = (PyoaInterPointerAppDef_oaOccInstHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaOccInstHeader)
    {
        PyParamoaInterPointerAppDef_oaOccInstHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaOccInstHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaOccInstHeader, Choices are:\n"
        "    (oaInterPointerAppDef_oaOccInstHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaOccInstHeader_tp_dealloc(PyoaInterPointerAppDef_oaOccInstHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaOccInstHeader_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaOccInstHeader value;
    int convert_status=PyoaInterPointerAppDef_oaOccInstHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[58];
    sprintf(buffer,"<oaInterPointerAppDef_oaOccInstHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaOccInstHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaOccInstHeader v1;
    PyParamoaInterPointerAppDef_oaOccInstHeader v2;
    int convert_status1=PyoaInterPointerAppDef_oaOccInstHeader_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaOccInstHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaOccInstHeader_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaOccInstHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaOccInstHeader_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaOccInstHeader**) ((PyoaInterPointerAppDef_oaOccInstHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaOccInstHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaOccInstHeader_FromoaInterPointerAppDef_oaOccInstHeader(oaInterPointerAppDef_oaOccInstHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaOccInstHeader* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaOccInstHeader_Type.tp_alloc(&PyoaInterPointerAppDef_oaOccInstHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaOccInstHeaderObject* self = (PyoaInterPointerAppDef_oaOccInstHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaOccInstHeader_FromoaInterPointerAppDef_oaOccInstHeader(oaInterPointerAppDef_oaOccInstHeader* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaOccInstHeader_Type.tp_alloc(&PyoaInterPointerAppDef_oaOccInstHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaOccInstHeaderObject* self = (PyoaInterPointerAppDef_oaOccInstHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccInstHeader_get_doc[] = 
"Class: oaInterPointerAppDef_oaOccInstHeader, Function: get\n"
"  Paramegers: (oaOccInstHeader)\n"
"    Calls: oaObject* get(const oaOccInstHeader* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaOccInstHeader,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaOccInstHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaOccInstHeader data;
    int convert_status=PyoaInterPointerAppDef_oaOccInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaOccInstHeaderObject* self=(PyoaInterPointerAppDef_oaOccInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInstHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccInstHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccInstHeader_set_doc[] = 
"Class: oaInterPointerAppDef_oaOccInstHeader, Function: set\n"
"  Paramegers: (oaOccInstHeader,oaObject)\n"
"    Calls: void set(oaOccInstHeader* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaOccInstHeader,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaOccInstHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaOccInstHeader data;
    int convert_status=PyoaInterPointerAppDef_oaOccInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaOccInstHeaderObject* self=(PyoaInterPointerAppDef_oaOccInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInstHeader p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccInstHeader_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccInstHeader_isNull_doc[] =
"Class: oaInterPointerAppDef_oaOccInstHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaOccInstHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaOccInstHeader data;
    int convert_status=PyoaInterPointerAppDef_oaOccInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaOccInstHeader_assign_doc[] = 
"Class: oaInterPointerAppDef_oaOccInstHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaOccInstHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaOccInstHeader data;
  int convert_status=PyoaInterPointerAppDef_oaOccInstHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaOccInstHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaOccInstHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaOccInstHeader_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaOccInstHeader_get,METH_VARARGS,oaInterPointerAppDef_oaOccInstHeader_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaOccInstHeader_set,METH_VARARGS,oaInterPointerAppDef_oaOccInstHeader_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaOccInstHeader_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaOccInstHeader_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaOccInstHeader_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaOccInstHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccInstHeader_doc[] = 
"Class: oaInterPointerAppDef_oaOccInstHeader\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaOccInstHeader)\n"
"    Calls: (const oaInterPointerAppDef_oaOccInstHeader&)\n"
"    Signature: oaInterPointerAppDef_oaOccInstHeader||cref-oaInterPointerAppDef_oaOccInstHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaOccInstHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaOccInstHeader",
    sizeof(PyoaInterPointerAppDef_oaOccInstHeaderObject),
    0,
    (destructor)oaInterPointerAppDef_oaOccInstHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaOccInstHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaOccInstHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaOccInstHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaOccInstHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaOccInstHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccInstHeader_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaOccInstHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaOccInstHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaOccInstHeader|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaOccInstHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaOccInstHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaOccInstHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaOccInstHeaderp result= (oaInterPointerAppDef_oaOccInstHeader::find(p1.Data()));
            return PyoaInterPointerAppDef_oaOccInstHeader_FromoaInterPointerAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccInstHeaderp result= (oaInterPointerAppDef_oaOccInstHeader::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccInstHeader_FromoaInterPointerAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaOccInstHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccInstHeader_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaOccInstHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaOccInstHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccInstHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaOccInstHeader* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccInstHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaOccInstHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaOccInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaOccInstHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaOccInstHeaderp result= (oaInterPointerAppDef_oaOccInstHeader::get(p1.Data()));
            return PyoaInterPointerAppDef_oaOccInstHeader_FromoaInterPointerAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaOccInstHeaderp result= (oaInterPointerAppDef_oaOccInstHeader::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccInstHeader_FromoaInterPointerAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccInstHeaderp result= (oaInterPointerAppDef_oaOccInstHeader::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccInstHeader_FromoaInterPointerAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccInstHeaderp result= (oaInterPointerAppDef_oaOccInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaOccInstHeader_FromoaInterPointerAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaOccInstHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaOccInstHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaOccInstHeader_static_find,METH_VARARGS,oaInterPointerAppDef_oaOccInstHeader_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaOccInstHeader_static_get,METH_VARARGS,oaInterPointerAppDef_oaOccInstHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaOccInstHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaOccInstHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaOccInstHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaOccInstHeader",
           (PyObject*)(&PyoaInterPointerAppDef_oaOccInstHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaOccInstHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaOccInstHeader_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaOccInstHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaOccInstTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaOccInstTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaOccInstTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaOccInstTermObject* self = (PyoaInterPointerAppDef_oaOccInstTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaOccInstTerm)
    {
        PyParamoaInterPointerAppDef_oaOccInstTerm p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaOccInstTerm_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaOccInstTerm, Choices are:\n"
        "    (oaInterPointerAppDef_oaOccInstTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaOccInstTerm_tp_dealloc(PyoaInterPointerAppDef_oaOccInstTermObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaOccInstTerm_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaOccInstTerm value;
    int convert_status=PyoaInterPointerAppDef_oaOccInstTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[56];
    sprintf(buffer,"<oaInterPointerAppDef_oaOccInstTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaOccInstTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaOccInstTerm v1;
    PyParamoaInterPointerAppDef_oaOccInstTerm v2;
    int convert_status1=PyoaInterPointerAppDef_oaOccInstTerm_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaOccInstTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaOccInstTerm_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaOccInstTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaOccInstTerm_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaOccInstTerm**) ((PyoaInterPointerAppDef_oaOccInstTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaOccInstTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaOccInstTerm_FromoaInterPointerAppDef_oaOccInstTerm(oaInterPointerAppDef_oaOccInstTerm** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaOccInstTerm* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaOccInstTerm_Type.tp_alloc(&PyoaInterPointerAppDef_oaOccInstTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaOccInstTermObject* self = (PyoaInterPointerAppDef_oaOccInstTermObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaOccInstTerm_FromoaInterPointerAppDef_oaOccInstTerm(oaInterPointerAppDef_oaOccInstTerm* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaOccInstTerm_Type.tp_alloc(&PyoaInterPointerAppDef_oaOccInstTerm_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaOccInstTermObject* self = (PyoaInterPointerAppDef_oaOccInstTermObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccInstTerm_get_doc[] = 
"Class: oaInterPointerAppDef_oaOccInstTerm, Function: get\n"
"  Paramegers: (oaOccInstTerm)\n"
"    Calls: oaObject* get(const oaOccInstTerm* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaOccInstTerm,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaOccInstTerm_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaOccInstTerm data;
    int convert_status=PyoaInterPointerAppDef_oaOccInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaOccInstTermObject* self=(PyoaInterPointerAppDef_oaOccInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInstTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccInstTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccInstTerm_set_doc[] = 
"Class: oaInterPointerAppDef_oaOccInstTerm, Function: set\n"
"  Paramegers: (oaOccInstTerm,oaObject)\n"
"    Calls: void set(oaOccInstTerm* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaOccInstTerm,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaOccInstTerm_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaOccInstTerm data;
    int convert_status=PyoaInterPointerAppDef_oaOccInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaOccInstTermObject* self=(PyoaInterPointerAppDef_oaOccInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInstTerm p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccInstTerm_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccInstTerm_isNull_doc[] =
"Class: oaInterPointerAppDef_oaOccInstTerm, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaOccInstTerm_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaOccInstTerm data;
    int convert_status=PyoaInterPointerAppDef_oaOccInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaOccInstTerm_assign_doc[] = 
"Class: oaInterPointerAppDef_oaOccInstTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaOccInstTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaOccInstTerm data;
  int convert_status=PyoaInterPointerAppDef_oaOccInstTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaOccInstTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaOccInstTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaOccInstTerm_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaOccInstTerm_get,METH_VARARGS,oaInterPointerAppDef_oaOccInstTerm_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaOccInstTerm_set,METH_VARARGS,oaInterPointerAppDef_oaOccInstTerm_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaOccInstTerm_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaOccInstTerm_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaOccInstTerm_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaOccInstTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccInstTerm_doc[] = 
"Class: oaInterPointerAppDef_oaOccInstTerm\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaOccInstTerm)\n"
"    Calls: (const oaInterPointerAppDef_oaOccInstTerm&)\n"
"    Signature: oaInterPointerAppDef_oaOccInstTerm||cref-oaInterPointerAppDef_oaOccInstTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaOccInstTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaOccInstTerm",
    sizeof(PyoaInterPointerAppDef_oaOccInstTermObject),
    0,
    (destructor)oaInterPointerAppDef_oaOccInstTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaOccInstTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaOccInstTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaOccInstTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaOccInstTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaOccInstTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccInstTerm_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaOccInstTerm, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaOccInstTerm* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaOccInstTerm|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaOccInstTerm* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaOccInstTerm|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaOccInstTerm_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaOccInstTermp result= (oaInterPointerAppDef_oaOccInstTerm::find(p1.Data()));
            return PyoaInterPointerAppDef_oaOccInstTerm_FromoaInterPointerAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccInstTermp result= (oaInterPointerAppDef_oaOccInstTerm::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccInstTerm_FromoaInterPointerAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaOccInstTerm, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccInstTerm_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaOccInstTerm, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaOccInstTerm* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccInstTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaOccInstTerm* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccInstTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaOccInstTerm* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaOccInstTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaOccInstTerm_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaOccInstTermp result= (oaInterPointerAppDef_oaOccInstTerm::get(p1.Data()));
            return PyoaInterPointerAppDef_oaOccInstTerm_FromoaInterPointerAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaOccInstTermp result= (oaInterPointerAppDef_oaOccInstTerm::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccInstTerm_FromoaInterPointerAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccInstTermp result= (oaInterPointerAppDef_oaOccInstTerm::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccInstTerm_FromoaInterPointerAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccInstTermp result= (oaInterPointerAppDef_oaOccInstTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaOccInstTerm_FromoaInterPointerAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaOccInstTerm, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaOccInstTerm_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaOccInstTerm_static_find,METH_VARARGS,oaInterPointerAppDef_oaOccInstTerm_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaOccInstTerm_static_get,METH_VARARGS,oaInterPointerAppDef_oaOccInstTerm_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaOccInstTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaOccInstTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaOccInstTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaOccInstTerm",
           (PyObject*)(&PyoaInterPointerAppDef_oaOccInstTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaOccInstTerm\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaOccInstTerm_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaOccInstTerm_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaOccModuleInstHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaOccModuleInstHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaOccModuleInstHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaOccModuleInstHeaderObject* self = (PyoaInterPointerAppDef_oaOccModuleInstHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaOccModuleInstHeader)
    {
        PyParamoaInterPointerAppDef_oaOccModuleInstHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaOccModuleInstHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaOccModuleInstHeader, Choices are:\n"
        "    (oaInterPointerAppDef_oaOccModuleInstHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaOccModuleInstHeader_tp_dealloc(PyoaInterPointerAppDef_oaOccModuleInstHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaOccModuleInstHeader_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaOccModuleInstHeader value;
    int convert_status=PyoaInterPointerAppDef_oaOccModuleInstHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[64];
    sprintf(buffer,"<oaInterPointerAppDef_oaOccModuleInstHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaOccModuleInstHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaOccModuleInstHeader v1;
    PyParamoaInterPointerAppDef_oaOccModuleInstHeader v2;
    int convert_status1=PyoaInterPointerAppDef_oaOccModuleInstHeader_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaOccModuleInstHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaOccModuleInstHeader_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaOccModuleInstHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaOccModuleInstHeader_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaOccModuleInstHeader**) ((PyoaInterPointerAppDef_oaOccModuleInstHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaOccModuleInstHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaOccModuleInstHeader_FromoaInterPointerAppDef_oaOccModuleInstHeader(oaInterPointerAppDef_oaOccModuleInstHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaOccModuleInstHeader* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaOccModuleInstHeader_Type.tp_alloc(&PyoaInterPointerAppDef_oaOccModuleInstHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaOccModuleInstHeaderObject* self = (PyoaInterPointerAppDef_oaOccModuleInstHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaOccModuleInstHeader_FromoaInterPointerAppDef_oaOccModuleInstHeader(oaInterPointerAppDef_oaOccModuleInstHeader* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaOccModuleInstHeader_Type.tp_alloc(&PyoaInterPointerAppDef_oaOccModuleInstHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaOccModuleInstHeaderObject* self = (PyoaInterPointerAppDef_oaOccModuleInstHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccModuleInstHeader_get_doc[] = 
"Class: oaInterPointerAppDef_oaOccModuleInstHeader, Function: get\n"
"  Paramegers: (oaOccModuleInstHeader)\n"
"    Calls: oaObject* get(const oaOccModuleInstHeader* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaOccModuleInstHeader,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaOccModuleInstHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaOccModuleInstHeader data;
    int convert_status=PyoaInterPointerAppDef_oaOccModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaOccModuleInstHeaderObject* self=(PyoaInterPointerAppDef_oaOccModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccModuleInstHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccModuleInstHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccModuleInstHeader_set_doc[] = 
"Class: oaInterPointerAppDef_oaOccModuleInstHeader, Function: set\n"
"  Paramegers: (oaOccModuleInstHeader,oaObject)\n"
"    Calls: void set(oaOccModuleInstHeader* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaOccModuleInstHeader,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaOccModuleInstHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaOccModuleInstHeader data;
    int convert_status=PyoaInterPointerAppDef_oaOccModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaOccModuleInstHeaderObject* self=(PyoaInterPointerAppDef_oaOccModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccModuleInstHeader p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccModuleInstHeader_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccModuleInstHeader_isNull_doc[] =
"Class: oaInterPointerAppDef_oaOccModuleInstHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaOccModuleInstHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaOccModuleInstHeader data;
    int convert_status=PyoaInterPointerAppDef_oaOccModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaOccModuleInstHeader_assign_doc[] = 
"Class: oaInterPointerAppDef_oaOccModuleInstHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaOccModuleInstHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaOccModuleInstHeader data;
  int convert_status=PyoaInterPointerAppDef_oaOccModuleInstHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaOccModuleInstHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaOccModuleInstHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaOccModuleInstHeader_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaOccModuleInstHeader_get,METH_VARARGS,oaInterPointerAppDef_oaOccModuleInstHeader_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaOccModuleInstHeader_set,METH_VARARGS,oaInterPointerAppDef_oaOccModuleInstHeader_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaOccModuleInstHeader_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaOccModuleInstHeader_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaOccModuleInstHeader_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaOccModuleInstHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccModuleInstHeader_doc[] = 
"Class: oaInterPointerAppDef_oaOccModuleInstHeader\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaOccModuleInstHeader)\n"
"    Calls: (const oaInterPointerAppDef_oaOccModuleInstHeader&)\n"
"    Signature: oaInterPointerAppDef_oaOccModuleInstHeader||cref-oaInterPointerAppDef_oaOccModuleInstHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaOccModuleInstHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaOccModuleInstHeader",
    sizeof(PyoaInterPointerAppDef_oaOccModuleInstHeaderObject),
    0,
    (destructor)oaInterPointerAppDef_oaOccModuleInstHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaOccModuleInstHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaOccModuleInstHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaOccModuleInstHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaOccModuleInstHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaOccModuleInstHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccModuleInstHeader_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaOccModuleInstHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaOccModuleInstHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaOccModuleInstHeader|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaOccModuleInstHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaOccModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaOccModuleInstHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaOccModuleInstHeaderp result= (oaInterPointerAppDef_oaOccModuleInstHeader::find(p1.Data()));
            return PyoaInterPointerAppDef_oaOccModuleInstHeader_FromoaInterPointerAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccModuleInstHeaderp result= (oaInterPointerAppDef_oaOccModuleInstHeader::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccModuleInstHeader_FromoaInterPointerAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaOccModuleInstHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccModuleInstHeader_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaOccModuleInstHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaOccModuleInstHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccModuleInstHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaOccModuleInstHeader* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccModuleInstHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaOccModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaOccModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaOccModuleInstHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaOccModuleInstHeaderp result= (oaInterPointerAppDef_oaOccModuleInstHeader::get(p1.Data()));
            return PyoaInterPointerAppDef_oaOccModuleInstHeader_FromoaInterPointerAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaOccModuleInstHeaderp result= (oaInterPointerAppDef_oaOccModuleInstHeader::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccModuleInstHeader_FromoaInterPointerAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccModuleInstHeaderp result= (oaInterPointerAppDef_oaOccModuleInstHeader::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccModuleInstHeader_FromoaInterPointerAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccModuleInstHeaderp result= (oaInterPointerAppDef_oaOccModuleInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaOccModuleInstHeader_FromoaInterPointerAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaOccModuleInstHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaOccModuleInstHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaOccModuleInstHeader_static_find,METH_VARARGS,oaInterPointerAppDef_oaOccModuleInstHeader_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaOccModuleInstHeader_static_get,METH_VARARGS,oaInterPointerAppDef_oaOccModuleInstHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaOccModuleInstHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaOccModuleInstHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaOccModuleInstHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaOccModuleInstHeader",
           (PyObject*)(&PyoaInterPointerAppDef_oaOccModuleInstHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaOccModuleInstHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaOccModuleInstHeader_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaOccModuleInstHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaOccNet
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaOccNet_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaOccNet_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaOccNetObject* self = (PyoaInterPointerAppDef_oaOccNetObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaOccNet)
    {
        PyParamoaInterPointerAppDef_oaOccNet p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaOccNet_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaOccNet, Choices are:\n"
        "    (oaInterPointerAppDef_oaOccNet)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaOccNet_tp_dealloc(PyoaInterPointerAppDef_oaOccNetObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaOccNet_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaOccNet value;
    int convert_status=PyoaInterPointerAppDef_oaOccNet_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[51];
    sprintf(buffer,"<oaInterPointerAppDef_oaOccNet::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaOccNet_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaOccNet v1;
    PyParamoaInterPointerAppDef_oaOccNet v2;
    int convert_status1=PyoaInterPointerAppDef_oaOccNet_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaOccNet_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaOccNet_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaOccNet* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaOccNet_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaOccNet**) ((PyoaInterPointerAppDef_oaOccNetObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaOccNet Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaOccNet_FromoaInterPointerAppDef_oaOccNet(oaInterPointerAppDef_oaOccNet** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaOccNet* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaOccNet_Type.tp_alloc(&PyoaInterPointerAppDef_oaOccNet_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaOccNetObject* self = (PyoaInterPointerAppDef_oaOccNetObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaOccNet_FromoaInterPointerAppDef_oaOccNet(oaInterPointerAppDef_oaOccNet* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaOccNet_Type.tp_alloc(&PyoaInterPointerAppDef_oaOccNet_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaOccNetObject* self = (PyoaInterPointerAppDef_oaOccNetObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccNet_get_doc[] = 
"Class: oaInterPointerAppDef_oaOccNet, Function: get\n"
"  Paramegers: (oaOccNet)\n"
"    Calls: oaObject* get(const oaOccNet* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaOccNet,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaOccNet_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaOccNet data;
    int convert_status=PyoaInterPointerAppDef_oaOccNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaOccNetObject* self=(PyoaInterPointerAppDef_oaOccNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccNet p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccNet_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccNet_set_doc[] = 
"Class: oaInterPointerAppDef_oaOccNet, Function: set\n"
"  Paramegers: (oaOccNet,oaObject)\n"
"    Calls: void set(oaOccNet* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaOccNet,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaOccNet_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaOccNet data;
    int convert_status=PyoaInterPointerAppDef_oaOccNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaOccNetObject* self=(PyoaInterPointerAppDef_oaOccNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccNet p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccNet_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccNet_isNull_doc[] =
"Class: oaInterPointerAppDef_oaOccNet, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaOccNet_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaOccNet data;
    int convert_status=PyoaInterPointerAppDef_oaOccNet_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaOccNet_assign_doc[] = 
"Class: oaInterPointerAppDef_oaOccNet, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaOccNet_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaOccNet data;
  int convert_status=PyoaInterPointerAppDef_oaOccNet_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaOccNet p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaOccNet_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaOccNet_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaOccNet_get,METH_VARARGS,oaInterPointerAppDef_oaOccNet_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaOccNet_set,METH_VARARGS,oaInterPointerAppDef_oaOccNet_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaOccNet_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaOccNet_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaOccNet_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaOccNet_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccNet_doc[] = 
"Class: oaInterPointerAppDef_oaOccNet\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaOccNet)\n"
"    Calls: (const oaInterPointerAppDef_oaOccNet&)\n"
"    Signature: oaInterPointerAppDef_oaOccNet||cref-oaInterPointerAppDef_oaOccNet,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaOccNet_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaOccNet",
    sizeof(PyoaInterPointerAppDef_oaOccNetObject),
    0,
    (destructor)oaInterPointerAppDef_oaOccNet_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaOccNet_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaOccNet_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaOccNet_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaOccNet_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaOccNet_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccNet_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaOccNet, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaOccNet* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaOccNet|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaOccNet* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaOccNet|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaOccNet_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaOccNetp result= (oaInterPointerAppDef_oaOccNet::find(p1.Data()));
            return PyoaInterPointerAppDef_oaOccNet_FromoaInterPointerAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccNetp result= (oaInterPointerAppDef_oaOccNet::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccNet_FromoaInterPointerAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaOccNet, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccNet_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaOccNet, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaOccNet* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccNet|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaOccNet* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccNet|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaOccNet* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccNet|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaOccNet* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccNet|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaOccNet_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaOccNetp result= (oaInterPointerAppDef_oaOccNet::get(p1.Data()));
            return PyoaInterPointerAppDef_oaOccNet_FromoaInterPointerAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaOccNetp result= (oaInterPointerAppDef_oaOccNet::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccNet_FromoaInterPointerAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccNetp result= (oaInterPointerAppDef_oaOccNet::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccNet_FromoaInterPointerAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccNetp result= (oaInterPointerAppDef_oaOccNet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaOccNet_FromoaInterPointerAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaOccNet, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaOccNet_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaOccNet_static_find,METH_VARARGS,oaInterPointerAppDef_oaOccNet_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaOccNet_static_get,METH_VARARGS,oaInterPointerAppDef_oaOccNet_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaOccNet_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaOccNet_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaOccNet\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaOccNet",
           (PyObject*)(&PyoaInterPointerAppDef_oaOccNet_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaOccNet\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaOccNet_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaOccNet_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaOccShape
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaOccShape_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaOccShape_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaOccShapeObject* self = (PyoaInterPointerAppDef_oaOccShapeObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaOccShape)
    {
        PyParamoaInterPointerAppDef_oaOccShape p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaOccShape_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaOccShape, Choices are:\n"
        "    (oaInterPointerAppDef_oaOccShape)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaOccShape_tp_dealloc(PyoaInterPointerAppDef_oaOccShapeObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaOccShape_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaOccShape value;
    int convert_status=PyoaInterPointerAppDef_oaOccShape_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[53];
    sprintf(buffer,"<oaInterPointerAppDef_oaOccShape::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaOccShape_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaOccShape v1;
    PyParamoaInterPointerAppDef_oaOccShape v2;
    int convert_status1=PyoaInterPointerAppDef_oaOccShape_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaOccShape_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaOccShape_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaOccShape* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaOccShape_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaOccShape**) ((PyoaInterPointerAppDef_oaOccShapeObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaOccShape Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaOccShape_FromoaInterPointerAppDef_oaOccShape(oaInterPointerAppDef_oaOccShape** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaOccShape* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaOccShape_Type.tp_alloc(&PyoaInterPointerAppDef_oaOccShape_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaOccShapeObject* self = (PyoaInterPointerAppDef_oaOccShapeObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaOccShape_FromoaInterPointerAppDef_oaOccShape(oaInterPointerAppDef_oaOccShape* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaOccShape_Type.tp_alloc(&PyoaInterPointerAppDef_oaOccShape_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaOccShapeObject* self = (PyoaInterPointerAppDef_oaOccShapeObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccShape_get_doc[] = 
"Class: oaInterPointerAppDef_oaOccShape, Function: get\n"
"  Paramegers: (oaOccShape)\n"
"    Calls: oaObject* get(const oaOccShape* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaOccShape,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaOccShape_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaOccShape data;
    int convert_status=PyoaInterPointerAppDef_oaOccShape_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaOccShapeObject* self=(PyoaInterPointerAppDef_oaOccShapeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccShape p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccShape_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccShape_set_doc[] = 
"Class: oaInterPointerAppDef_oaOccShape, Function: set\n"
"  Paramegers: (oaOccShape,oaObject)\n"
"    Calls: void set(oaOccShape* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaOccShape,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaOccShape_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaOccShape data;
    int convert_status=PyoaInterPointerAppDef_oaOccShape_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaOccShapeObject* self=(PyoaInterPointerAppDef_oaOccShapeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccShape p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccShape_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccShape_isNull_doc[] =
"Class: oaInterPointerAppDef_oaOccShape, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaOccShape_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaOccShape data;
    int convert_status=PyoaInterPointerAppDef_oaOccShape_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaOccShape_assign_doc[] = 
"Class: oaInterPointerAppDef_oaOccShape, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaOccShape_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaOccShape data;
  int convert_status=PyoaInterPointerAppDef_oaOccShape_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaOccShape p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaOccShape_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaOccShape_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaOccShape_get,METH_VARARGS,oaInterPointerAppDef_oaOccShape_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaOccShape_set,METH_VARARGS,oaInterPointerAppDef_oaOccShape_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaOccShape_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaOccShape_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaOccShape_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaOccShape_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccShape_doc[] = 
"Class: oaInterPointerAppDef_oaOccShape\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaOccShape)\n"
"    Calls: (const oaInterPointerAppDef_oaOccShape&)\n"
"    Signature: oaInterPointerAppDef_oaOccShape||cref-oaInterPointerAppDef_oaOccShape,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaOccShape_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaOccShape",
    sizeof(PyoaInterPointerAppDef_oaOccShapeObject),
    0,
    (destructor)oaInterPointerAppDef_oaOccShape_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaOccShape_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaOccShape_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaOccShape_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaOccShape_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaOccShape_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccShape_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaOccShape, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaOccShape* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaOccShape|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaOccShape* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaOccShape|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaOccShape_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaOccShapep result= (oaInterPointerAppDef_oaOccShape::find(p1.Data()));
            return PyoaInterPointerAppDef_oaOccShape_FromoaInterPointerAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccShapep result= (oaInterPointerAppDef_oaOccShape::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccShape_FromoaInterPointerAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaOccShape, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccShape_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaOccShape, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaOccShape* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccShape|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaOccShape* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccShape|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaOccShape* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccShape|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaOccShape* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccShape|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaOccShape_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaOccShapep result= (oaInterPointerAppDef_oaOccShape::get(p1.Data()));
            return PyoaInterPointerAppDef_oaOccShape_FromoaInterPointerAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaOccShapep result= (oaInterPointerAppDef_oaOccShape::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccShape_FromoaInterPointerAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccShapep result= (oaInterPointerAppDef_oaOccShape::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccShape_FromoaInterPointerAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccShapep result= (oaInterPointerAppDef_oaOccShape::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaOccShape_FromoaInterPointerAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaOccShape, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaOccShape_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaOccShape_static_find,METH_VARARGS,oaInterPointerAppDef_oaOccShape_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaOccShape_static_get,METH_VARARGS,oaInterPointerAppDef_oaOccShape_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaOccShape_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaOccShape_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaOccShape\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaOccShape",
           (PyObject*)(&PyoaInterPointerAppDef_oaOccShape_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaOccShape\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaOccShape_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaOccShape_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaOccTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaOccTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaOccTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaOccTermObject* self = (PyoaInterPointerAppDef_oaOccTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaOccTerm)
    {
        PyParamoaInterPointerAppDef_oaOccTerm p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaOccTerm_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaOccTerm, Choices are:\n"
        "    (oaInterPointerAppDef_oaOccTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaOccTerm_tp_dealloc(PyoaInterPointerAppDef_oaOccTermObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaOccTerm_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaOccTerm value;
    int convert_status=PyoaInterPointerAppDef_oaOccTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaInterPointerAppDef_oaOccTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaOccTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaOccTerm v1;
    PyParamoaInterPointerAppDef_oaOccTerm v2;
    int convert_status1=PyoaInterPointerAppDef_oaOccTerm_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaOccTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaOccTerm_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaOccTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaOccTerm_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaOccTerm**) ((PyoaInterPointerAppDef_oaOccTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaOccTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaOccTerm_FromoaInterPointerAppDef_oaOccTerm(oaInterPointerAppDef_oaOccTerm** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaOccTerm* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaOccTerm_Type.tp_alloc(&PyoaInterPointerAppDef_oaOccTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaOccTermObject* self = (PyoaInterPointerAppDef_oaOccTermObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaOccTerm_FromoaInterPointerAppDef_oaOccTerm(oaInterPointerAppDef_oaOccTerm* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaOccTerm_Type.tp_alloc(&PyoaInterPointerAppDef_oaOccTerm_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaOccTermObject* self = (PyoaInterPointerAppDef_oaOccTermObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccTerm_get_doc[] = 
"Class: oaInterPointerAppDef_oaOccTerm, Function: get\n"
"  Paramegers: (oaOccTerm)\n"
"    Calls: oaObject* get(const oaOccTerm* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaOccTerm,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaOccTerm_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaOccTerm data;
    int convert_status=PyoaInterPointerAppDef_oaOccTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaOccTermObject* self=(PyoaInterPointerAppDef_oaOccTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccTerm_set_doc[] = 
"Class: oaInterPointerAppDef_oaOccTerm, Function: set\n"
"  Paramegers: (oaOccTerm,oaObject)\n"
"    Calls: void set(oaOccTerm* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaOccTerm,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaOccTerm_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaOccTerm data;
    int convert_status=PyoaInterPointerAppDef_oaOccTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaOccTermObject* self=(PyoaInterPointerAppDef_oaOccTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccTerm p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccTerm_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccTerm_isNull_doc[] =
"Class: oaInterPointerAppDef_oaOccTerm, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaOccTerm_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaOccTerm data;
    int convert_status=PyoaInterPointerAppDef_oaOccTerm_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaOccTerm_assign_doc[] = 
"Class: oaInterPointerAppDef_oaOccTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaOccTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaOccTerm data;
  int convert_status=PyoaInterPointerAppDef_oaOccTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaOccTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaOccTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaOccTerm_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaOccTerm_get,METH_VARARGS,oaInterPointerAppDef_oaOccTerm_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaOccTerm_set,METH_VARARGS,oaInterPointerAppDef_oaOccTerm_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaOccTerm_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaOccTerm_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaOccTerm_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaOccTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccTerm_doc[] = 
"Class: oaInterPointerAppDef_oaOccTerm\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaOccTerm)\n"
"    Calls: (const oaInterPointerAppDef_oaOccTerm&)\n"
"    Signature: oaInterPointerAppDef_oaOccTerm||cref-oaInterPointerAppDef_oaOccTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaOccTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaOccTerm",
    sizeof(PyoaInterPointerAppDef_oaOccTermObject),
    0,
    (destructor)oaInterPointerAppDef_oaOccTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaOccTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaOccTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaOccTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaOccTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaOccTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccTerm_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaOccTerm, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaOccTerm* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaOccTerm|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaOccTerm* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaOccTerm|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaOccTerm_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaOccTermp result= (oaInterPointerAppDef_oaOccTerm::find(p1.Data()));
            return PyoaInterPointerAppDef_oaOccTerm_FromoaInterPointerAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccTermp result= (oaInterPointerAppDef_oaOccTerm::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccTerm_FromoaInterPointerAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaOccTerm, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccTerm_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaOccTerm, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaOccTerm* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaOccTerm* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaOccTerm* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaOccTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaOccTerm_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaOccTermp result= (oaInterPointerAppDef_oaOccTerm::get(p1.Data()));
            return PyoaInterPointerAppDef_oaOccTerm_FromoaInterPointerAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaOccTermp result= (oaInterPointerAppDef_oaOccTerm::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccTerm_FromoaInterPointerAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccTermp result= (oaInterPointerAppDef_oaOccTerm::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccTerm_FromoaInterPointerAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccTermp result= (oaInterPointerAppDef_oaOccTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaOccTerm_FromoaInterPointerAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaOccTerm, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaOccTerm_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaOccTerm_static_find,METH_VARARGS,oaInterPointerAppDef_oaOccTerm_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaOccTerm_static_get,METH_VARARGS,oaInterPointerAppDef_oaOccTerm_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaOccTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaOccTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaOccTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaOccTerm",
           (PyObject*)(&PyoaInterPointerAppDef_oaOccTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaOccTerm\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaOccTerm_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaOccTerm_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaOccVectorInstDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaOccVectorInstDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaOccVectorInstDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaOccVectorInstDefObject* self = (PyoaInterPointerAppDef_oaOccVectorInstDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaOccVectorInstDef)
    {
        PyParamoaInterPointerAppDef_oaOccVectorInstDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaOccVectorInstDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaOccVectorInstDef, Choices are:\n"
        "    (oaInterPointerAppDef_oaOccVectorInstDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaOccVectorInstDef_tp_dealloc(PyoaInterPointerAppDef_oaOccVectorInstDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaOccVectorInstDef_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaOccVectorInstDef value;
    int convert_status=PyoaInterPointerAppDef_oaOccVectorInstDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[61];
    sprintf(buffer,"<oaInterPointerAppDef_oaOccVectorInstDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaOccVectorInstDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaOccVectorInstDef v1;
    PyParamoaInterPointerAppDef_oaOccVectorInstDef v2;
    int convert_status1=PyoaInterPointerAppDef_oaOccVectorInstDef_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaOccVectorInstDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaOccVectorInstDef_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaOccVectorInstDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaOccVectorInstDef_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaOccVectorInstDef**) ((PyoaInterPointerAppDef_oaOccVectorInstDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaOccVectorInstDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaOccVectorInstDef_FromoaInterPointerAppDef_oaOccVectorInstDef(oaInterPointerAppDef_oaOccVectorInstDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaOccVectorInstDef* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaOccVectorInstDef_Type.tp_alloc(&PyoaInterPointerAppDef_oaOccVectorInstDef_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaOccVectorInstDefObject* self = (PyoaInterPointerAppDef_oaOccVectorInstDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaOccVectorInstDef_FromoaInterPointerAppDef_oaOccVectorInstDef(oaInterPointerAppDef_oaOccVectorInstDef* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaOccVectorInstDef_Type.tp_alloc(&PyoaInterPointerAppDef_oaOccVectorInstDef_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaOccVectorInstDefObject* self = (PyoaInterPointerAppDef_oaOccVectorInstDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccVectorInstDef_get_doc[] = 
"Class: oaInterPointerAppDef_oaOccVectorInstDef, Function: get\n"
"  Paramegers: (oaOccVectorInstDef)\n"
"    Calls: oaObject* get(const oaOccVectorInstDef* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaOccVectorInstDef,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaOccVectorInstDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaOccVectorInstDef data;
    int convert_status=PyoaInterPointerAppDef_oaOccVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaOccVectorInstDefObject* self=(PyoaInterPointerAppDef_oaOccVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccVectorInstDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccVectorInstDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccVectorInstDef_set_doc[] = 
"Class: oaInterPointerAppDef_oaOccVectorInstDef, Function: set\n"
"  Paramegers: (oaOccVectorInstDef,oaObject)\n"
"    Calls: void set(oaOccVectorInstDef* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaOccVectorInstDef,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaOccVectorInstDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaOccVectorInstDef data;
    int convert_status=PyoaInterPointerAppDef_oaOccVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaOccVectorInstDefObject* self=(PyoaInterPointerAppDef_oaOccVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccVectorInstDef p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccVectorInstDef_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccVectorInstDef_isNull_doc[] =
"Class: oaInterPointerAppDef_oaOccVectorInstDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaOccVectorInstDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaOccVectorInstDef data;
    int convert_status=PyoaInterPointerAppDef_oaOccVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaOccVectorInstDef_assign_doc[] = 
"Class: oaInterPointerAppDef_oaOccVectorInstDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaOccVectorInstDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaOccVectorInstDef data;
  int convert_status=PyoaInterPointerAppDef_oaOccVectorInstDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaOccVectorInstDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaOccVectorInstDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaOccVectorInstDef_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaOccVectorInstDef_get,METH_VARARGS,oaInterPointerAppDef_oaOccVectorInstDef_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaOccVectorInstDef_set,METH_VARARGS,oaInterPointerAppDef_oaOccVectorInstDef_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaOccVectorInstDef_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaOccVectorInstDef_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaOccVectorInstDef_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaOccVectorInstDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccVectorInstDef_doc[] = 
"Class: oaInterPointerAppDef_oaOccVectorInstDef\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaOccVectorInstDef)\n"
"    Calls: (const oaInterPointerAppDef_oaOccVectorInstDef&)\n"
"    Signature: oaInterPointerAppDef_oaOccVectorInstDef||cref-oaInterPointerAppDef_oaOccVectorInstDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaOccVectorInstDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaOccVectorInstDef",
    sizeof(PyoaInterPointerAppDef_oaOccVectorInstDefObject),
    0,
    (destructor)oaInterPointerAppDef_oaOccVectorInstDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaOccVectorInstDef_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaOccVectorInstDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaOccVectorInstDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaOccVectorInstDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaOccVectorInstDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccVectorInstDef_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaOccVectorInstDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaOccVectorInstDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaOccVectorInstDef|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaOccVectorInstDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaOccVectorInstDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaOccVectorInstDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaOccVectorInstDefp result= (oaInterPointerAppDef_oaOccVectorInstDef::find(p1.Data()));
            return PyoaInterPointerAppDef_oaOccVectorInstDef_FromoaInterPointerAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccVectorInstDefp result= (oaInterPointerAppDef_oaOccVectorInstDef::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccVectorInstDef_FromoaInterPointerAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaOccVectorInstDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccVectorInstDef_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaOccVectorInstDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaOccVectorInstDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccVectorInstDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaOccVectorInstDef* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccVectorInstDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaOccVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaOccVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaOccVectorInstDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaOccVectorInstDefp result= (oaInterPointerAppDef_oaOccVectorInstDef::get(p1.Data()));
            return PyoaInterPointerAppDef_oaOccVectorInstDef_FromoaInterPointerAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaOccVectorInstDefp result= (oaInterPointerAppDef_oaOccVectorInstDef::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccVectorInstDef_FromoaInterPointerAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccVectorInstDefp result= (oaInterPointerAppDef_oaOccVectorInstDef::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccVectorInstDef_FromoaInterPointerAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccVectorInstDefp result= (oaInterPointerAppDef_oaOccVectorInstDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaOccVectorInstDef_FromoaInterPointerAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaOccVectorInstDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaOccVectorInstDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaOccVectorInstDef_static_find,METH_VARARGS,oaInterPointerAppDef_oaOccVectorInstDef_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaOccVectorInstDef_static_get,METH_VARARGS,oaInterPointerAppDef_oaOccVectorInstDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaOccVectorInstDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaOccVectorInstDef_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaOccVectorInstDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaOccVectorInstDef",
           (PyObject*)(&PyoaInterPointerAppDef_oaOccVectorInstDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaOccVectorInstDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaOccVectorInstDef_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaOccVectorInstDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaOccurrence
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaOccurrence_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaOccurrence_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaOccurrenceObject* self = (PyoaInterPointerAppDef_oaOccurrenceObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaOccurrence)
    {
        PyParamoaInterPointerAppDef_oaOccurrence p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaOccurrence_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaOccurrence, Choices are:\n"
        "    (oaInterPointerAppDef_oaOccurrence)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaOccurrence_tp_dealloc(PyoaInterPointerAppDef_oaOccurrenceObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaOccurrence_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaOccurrence value;
    int convert_status=PyoaInterPointerAppDef_oaOccurrence_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[55];
    sprintf(buffer,"<oaInterPointerAppDef_oaOccurrence::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaOccurrence_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaOccurrence v1;
    PyParamoaInterPointerAppDef_oaOccurrence v2;
    int convert_status1=PyoaInterPointerAppDef_oaOccurrence_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaOccurrence_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaOccurrence_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaOccurrence* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaOccurrence_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaOccurrence**) ((PyoaInterPointerAppDef_oaOccurrenceObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaOccurrence Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaOccurrence_FromoaInterPointerAppDef_oaOccurrence(oaInterPointerAppDef_oaOccurrence** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaOccurrence* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaOccurrence_Type.tp_alloc(&PyoaInterPointerAppDef_oaOccurrence_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaOccurrenceObject* self = (PyoaInterPointerAppDef_oaOccurrenceObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaOccurrence_FromoaInterPointerAppDef_oaOccurrence(oaInterPointerAppDef_oaOccurrence* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaOccurrence_Type.tp_alloc(&PyoaInterPointerAppDef_oaOccurrence_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaOccurrenceObject* self = (PyoaInterPointerAppDef_oaOccurrenceObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccurrence_get_doc[] = 
"Class: oaInterPointerAppDef_oaOccurrence, Function: get\n"
"  Paramegers: (oaOccurrence)\n"
"    Calls: oaObject* get(const oaOccurrence* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaOccurrence,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaOccurrence_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaOccurrence data;
    int convert_status=PyoaInterPointerAppDef_oaOccurrence_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaOccurrenceObject* self=(PyoaInterPointerAppDef_oaOccurrenceObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccurrence p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccurrence_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccurrence_set_doc[] = 
"Class: oaInterPointerAppDef_oaOccurrence, Function: set\n"
"  Paramegers: (oaOccurrence,oaObject)\n"
"    Calls: void set(oaOccurrence* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaOccurrence,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaOccurrence_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaOccurrence data;
    int convert_status=PyoaInterPointerAppDef_oaOccurrence_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaOccurrenceObject* self=(PyoaInterPointerAppDef_oaOccurrenceObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccurrence p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccurrence_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccurrence_isNull_doc[] =
"Class: oaInterPointerAppDef_oaOccurrence, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaOccurrence_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaOccurrence data;
    int convert_status=PyoaInterPointerAppDef_oaOccurrence_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaOccurrence_assign_doc[] = 
"Class: oaInterPointerAppDef_oaOccurrence, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaOccurrence_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaOccurrence data;
  int convert_status=PyoaInterPointerAppDef_oaOccurrence_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaOccurrence p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaOccurrence_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaOccurrence_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaOccurrence_get,METH_VARARGS,oaInterPointerAppDef_oaOccurrence_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaOccurrence_set,METH_VARARGS,oaInterPointerAppDef_oaOccurrence_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaOccurrence_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaOccurrence_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaOccurrence_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaOccurrence_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccurrence_doc[] = 
"Class: oaInterPointerAppDef_oaOccurrence\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaOccurrence)\n"
"    Calls: (const oaInterPointerAppDef_oaOccurrence&)\n"
"    Signature: oaInterPointerAppDef_oaOccurrence||cref-oaInterPointerAppDef_oaOccurrence,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaOccurrence_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaOccurrence",
    sizeof(PyoaInterPointerAppDef_oaOccurrenceObject),
    0,
    (destructor)oaInterPointerAppDef_oaOccurrence_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaOccurrence_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaOccurrence_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaOccurrence_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaOccurrence_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaOccurrence_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccurrence_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaOccurrence, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaOccurrence* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaOccurrence|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaOccurrence* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaOccurrence|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaOccurrence_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaOccurrencep result= (oaInterPointerAppDef_oaOccurrence::find(p1.Data()));
            return PyoaInterPointerAppDef_oaOccurrence_FromoaInterPointerAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccurrencep result= (oaInterPointerAppDef_oaOccurrence::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccurrence_FromoaInterPointerAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaOccurrence, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOccurrence_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaOccurrence, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaOccurrence* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccurrence|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaOccurrence* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccurrence|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaOccurrence* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccurrence|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaOccurrence* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOccurrence|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaOccurrence_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaOccurrencep result= (oaInterPointerAppDef_oaOccurrence::get(p1.Data()));
            return PyoaInterPointerAppDef_oaOccurrence_FromoaInterPointerAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaOccurrencep result= (oaInterPointerAppDef_oaOccurrence::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccurrence_FromoaInterPointerAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccurrencep result= (oaInterPointerAppDef_oaOccurrence::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOccurrence_FromoaInterPointerAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOccurrencep result= (oaInterPointerAppDef_oaOccurrence::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaOccurrence_FromoaInterPointerAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaOccurrence, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaOccurrence_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaOccurrence_static_find,METH_VARARGS,oaInterPointerAppDef_oaOccurrence_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaOccurrence_static_get,METH_VARARGS,oaInterPointerAppDef_oaOccurrence_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaOccurrence_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaOccurrence_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaOccurrence\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaOccurrence",
           (PyObject*)(&PyoaInterPointerAppDef_oaOccurrence_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaOccurrence\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaOccurrence_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaOccurrence_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaOpPointHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaOpPointHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaOpPointHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaOpPointHeaderObject* self = (PyoaInterPointerAppDef_oaOpPointHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaOpPointHeader)
    {
        PyParamoaInterPointerAppDef_oaOpPointHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaOpPointHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaOpPointHeader, Choices are:\n"
        "    (oaInterPointerAppDef_oaOpPointHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaOpPointHeader_tp_dealloc(PyoaInterPointerAppDef_oaOpPointHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaOpPointHeader_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaOpPointHeader value;
    int convert_status=PyoaInterPointerAppDef_oaOpPointHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[58];
    sprintf(buffer,"<oaInterPointerAppDef_oaOpPointHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaOpPointHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaOpPointHeader v1;
    PyParamoaInterPointerAppDef_oaOpPointHeader v2;
    int convert_status1=PyoaInterPointerAppDef_oaOpPointHeader_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaOpPointHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaOpPointHeader_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaOpPointHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaOpPointHeader_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaOpPointHeader**) ((PyoaInterPointerAppDef_oaOpPointHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaOpPointHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaOpPointHeader_FromoaInterPointerAppDef_oaOpPointHeader(oaInterPointerAppDef_oaOpPointHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaOpPointHeader* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaOpPointHeader_Type.tp_alloc(&PyoaInterPointerAppDef_oaOpPointHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaOpPointHeaderObject* self = (PyoaInterPointerAppDef_oaOpPointHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaOpPointHeader_FromoaInterPointerAppDef_oaOpPointHeader(oaInterPointerAppDef_oaOpPointHeader* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaOpPointHeader_Type.tp_alloc(&PyoaInterPointerAppDef_oaOpPointHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaOpPointHeaderObject* self = (PyoaInterPointerAppDef_oaOpPointHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOpPointHeader_get_doc[] = 
"Class: oaInterPointerAppDef_oaOpPointHeader, Function: get\n"
"  Paramegers: (oaOpPointHeader)\n"
"    Calls: oaObject* get(const oaOpPointHeader* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaOpPointHeader,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaOpPointHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaOpPointHeader data;
    int convert_status=PyoaInterPointerAppDef_oaOpPointHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaOpPointHeaderObject* self=(PyoaInterPointerAppDef_oaOpPointHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOpPointHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOpPointHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOpPointHeader_set_doc[] = 
"Class: oaInterPointerAppDef_oaOpPointHeader, Function: set\n"
"  Paramegers: (oaOpPointHeader,oaObject)\n"
"    Calls: void set(oaOpPointHeader* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaOpPointHeader,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaOpPointHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaOpPointHeader data;
    int convert_status=PyoaInterPointerAppDef_oaOpPointHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaOpPointHeaderObject* self=(PyoaInterPointerAppDef_oaOpPointHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOpPointHeader p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOpPointHeader_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOpPointHeader_isNull_doc[] =
"Class: oaInterPointerAppDef_oaOpPointHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaOpPointHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaOpPointHeader data;
    int convert_status=PyoaInterPointerAppDef_oaOpPointHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaOpPointHeader_assign_doc[] = 
"Class: oaInterPointerAppDef_oaOpPointHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaOpPointHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaOpPointHeader data;
  int convert_status=PyoaInterPointerAppDef_oaOpPointHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaOpPointHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaOpPointHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaOpPointHeader_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaOpPointHeader_get,METH_VARARGS,oaInterPointerAppDef_oaOpPointHeader_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaOpPointHeader_set,METH_VARARGS,oaInterPointerAppDef_oaOpPointHeader_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaOpPointHeader_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaOpPointHeader_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaOpPointHeader_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaOpPointHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOpPointHeader_doc[] = 
"Class: oaInterPointerAppDef_oaOpPointHeader\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaOpPointHeader)\n"
"    Calls: (const oaInterPointerAppDef_oaOpPointHeader&)\n"
"    Signature: oaInterPointerAppDef_oaOpPointHeader||cref-oaInterPointerAppDef_oaOpPointHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaOpPointHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaOpPointHeader",
    sizeof(PyoaInterPointerAppDef_oaOpPointHeaderObject),
    0,
    (destructor)oaInterPointerAppDef_oaOpPointHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaOpPointHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaOpPointHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaOpPointHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaOpPointHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaOpPointHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOpPointHeader_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaOpPointHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaOpPointHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaOpPointHeader|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaOpPointHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaOpPointHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaOpPointHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaOpPointHeaderp result= (oaInterPointerAppDef_oaOpPointHeader::find(p1.Data()));
            return PyoaInterPointerAppDef_oaOpPointHeader_FromoaInterPointerAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOpPointHeaderp result= (oaInterPointerAppDef_oaOpPointHeader::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOpPointHeader_FromoaInterPointerAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaOpPointHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaOpPointHeader_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaOpPointHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaOpPointHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOpPointHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaOpPointHeader* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOpPointHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaOpPointHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOpPointHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaOpPointHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaOpPointHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaOpPointHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaOpPointHeaderp result= (oaInterPointerAppDef_oaOpPointHeader::get(p1.Data()));
            return PyoaInterPointerAppDef_oaOpPointHeader_FromoaInterPointerAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaOpPointHeaderp result= (oaInterPointerAppDef_oaOpPointHeader::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOpPointHeader_FromoaInterPointerAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOpPointHeaderp result= (oaInterPointerAppDef_oaOpPointHeader::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaOpPointHeader_FromoaInterPointerAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaOpPointHeaderp result= (oaInterPointerAppDef_oaOpPointHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaOpPointHeader_FromoaInterPointerAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaOpPointHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaOpPointHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaOpPointHeader_static_find,METH_VARARGS,oaInterPointerAppDef_oaOpPointHeader_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaOpPointHeader_static_get,METH_VARARGS,oaInterPointerAppDef_oaOpPointHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaOpPointHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaOpPointHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaOpPointHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaOpPointHeader",
           (PyObject*)(&PyoaInterPointerAppDef_oaOpPointHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaOpPointHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaOpPointHeader_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaOpPointHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaParasiticNetwork
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaParasiticNetwork_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaParasiticNetwork_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaParasiticNetworkObject* self = (PyoaInterPointerAppDef_oaParasiticNetworkObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaParasiticNetwork)
    {
        PyParamoaInterPointerAppDef_oaParasiticNetwork p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaParasiticNetwork_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaParasiticNetwork, Choices are:\n"
        "    (oaInterPointerAppDef_oaParasiticNetwork)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaParasiticNetwork_tp_dealloc(PyoaInterPointerAppDef_oaParasiticNetworkObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaParasiticNetwork_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaParasiticNetwork value;
    int convert_status=PyoaInterPointerAppDef_oaParasiticNetwork_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[61];
    sprintf(buffer,"<oaInterPointerAppDef_oaParasiticNetwork::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaParasiticNetwork_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaParasiticNetwork v1;
    PyParamoaInterPointerAppDef_oaParasiticNetwork v2;
    int convert_status1=PyoaInterPointerAppDef_oaParasiticNetwork_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaParasiticNetwork_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaParasiticNetwork_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaParasiticNetwork* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaParasiticNetwork_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaParasiticNetwork**) ((PyoaInterPointerAppDef_oaParasiticNetworkObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaParasiticNetwork Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaParasiticNetwork_FromoaInterPointerAppDef_oaParasiticNetwork(oaInterPointerAppDef_oaParasiticNetwork** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaParasiticNetwork* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaParasiticNetwork_Type.tp_alloc(&PyoaInterPointerAppDef_oaParasiticNetwork_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaParasiticNetworkObject* self = (PyoaInterPointerAppDef_oaParasiticNetworkObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaParasiticNetwork_FromoaInterPointerAppDef_oaParasiticNetwork(oaInterPointerAppDef_oaParasiticNetwork* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaParasiticNetwork_Type.tp_alloc(&PyoaInterPointerAppDef_oaParasiticNetwork_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaParasiticNetworkObject* self = (PyoaInterPointerAppDef_oaParasiticNetworkObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaParasiticNetwork_get_doc[] = 
"Class: oaInterPointerAppDef_oaParasiticNetwork, Function: get\n"
"  Paramegers: (oaParasiticNetwork)\n"
"    Calls: oaObject* get(const oaParasiticNetwork* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaParasiticNetwork,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaParasiticNetwork_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaParasiticNetwork data;
    int convert_status=PyoaInterPointerAppDef_oaParasiticNetwork_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaParasiticNetworkObject* self=(PyoaInterPointerAppDef_oaParasiticNetworkObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaParasiticNetwork p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaParasiticNetwork_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaParasiticNetwork_set_doc[] = 
"Class: oaInterPointerAppDef_oaParasiticNetwork, Function: set\n"
"  Paramegers: (oaParasiticNetwork,oaObject)\n"
"    Calls: void set(oaParasiticNetwork* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaParasiticNetwork,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaParasiticNetwork_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaParasiticNetwork data;
    int convert_status=PyoaInterPointerAppDef_oaParasiticNetwork_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaParasiticNetworkObject* self=(PyoaInterPointerAppDef_oaParasiticNetworkObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaParasiticNetwork p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaParasiticNetwork_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaParasiticNetwork_isNull_doc[] =
"Class: oaInterPointerAppDef_oaParasiticNetwork, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaParasiticNetwork_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaParasiticNetwork data;
    int convert_status=PyoaInterPointerAppDef_oaParasiticNetwork_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaParasiticNetwork_assign_doc[] = 
"Class: oaInterPointerAppDef_oaParasiticNetwork, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaParasiticNetwork_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaParasiticNetwork data;
  int convert_status=PyoaInterPointerAppDef_oaParasiticNetwork_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaParasiticNetwork p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaParasiticNetwork_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaParasiticNetwork_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaParasiticNetwork_get,METH_VARARGS,oaInterPointerAppDef_oaParasiticNetwork_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaParasiticNetwork_set,METH_VARARGS,oaInterPointerAppDef_oaParasiticNetwork_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaParasiticNetwork_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaParasiticNetwork_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaParasiticNetwork_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaParasiticNetwork_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaParasiticNetwork_doc[] = 
"Class: oaInterPointerAppDef_oaParasiticNetwork\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaParasiticNetwork)\n"
"    Calls: (const oaInterPointerAppDef_oaParasiticNetwork&)\n"
"    Signature: oaInterPointerAppDef_oaParasiticNetwork||cref-oaInterPointerAppDef_oaParasiticNetwork,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaParasiticNetwork_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaParasiticNetwork",
    sizeof(PyoaInterPointerAppDef_oaParasiticNetworkObject),
    0,
    (destructor)oaInterPointerAppDef_oaParasiticNetwork_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaParasiticNetwork_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaParasiticNetwork_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaParasiticNetwork_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaParasiticNetwork_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaParasiticNetwork_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaParasiticNetwork_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaParasiticNetwork, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaParasiticNetwork* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaParasiticNetwork|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaParasiticNetwork* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaParasiticNetwork|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaParasiticNetwork_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaParasiticNetworkp result= (oaInterPointerAppDef_oaParasiticNetwork::find(p1.Data()));
            return PyoaInterPointerAppDef_oaParasiticNetwork_FromoaInterPointerAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaParasiticNetworkp result= (oaInterPointerAppDef_oaParasiticNetwork::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaParasiticNetwork_FromoaInterPointerAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaParasiticNetwork, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaParasiticNetwork_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaParasiticNetwork, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaParasiticNetwork* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaParasiticNetwork|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaParasiticNetwork* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaParasiticNetwork|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaParasiticNetwork* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaParasiticNetwork|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaParasiticNetwork* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaParasiticNetwork|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaParasiticNetwork_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaParasiticNetworkp result= (oaInterPointerAppDef_oaParasiticNetwork::get(p1.Data()));
            return PyoaInterPointerAppDef_oaParasiticNetwork_FromoaInterPointerAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaParasiticNetworkp result= (oaInterPointerAppDef_oaParasiticNetwork::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaParasiticNetwork_FromoaInterPointerAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaParasiticNetworkp result= (oaInterPointerAppDef_oaParasiticNetwork::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaParasiticNetwork_FromoaInterPointerAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaParasiticNetworkp result= (oaInterPointerAppDef_oaParasiticNetwork::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaParasiticNetwork_FromoaInterPointerAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaParasiticNetwork, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaParasiticNetwork_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaParasiticNetwork_static_find,METH_VARARGS,oaInterPointerAppDef_oaParasiticNetwork_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaParasiticNetwork_static_get,METH_VARARGS,oaInterPointerAppDef_oaParasiticNetwork_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaParasiticNetwork_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaParasiticNetwork_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaParasiticNetwork\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaParasiticNetwork",
           (PyObject*)(&PyoaInterPointerAppDef_oaParasiticNetwork_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaParasiticNetwork\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaParasiticNetwork_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaParasiticNetwork_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaPin
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaPin_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaPin_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaPinObject* self = (PyoaInterPointerAppDef_oaPinObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaPin)
    {
        PyParamoaInterPointerAppDef_oaPin p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaPin_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaPin, Choices are:\n"
        "    (oaInterPointerAppDef_oaPin)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaPin_tp_dealloc(PyoaInterPointerAppDef_oaPinObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaPin_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaPin value;
    int convert_status=PyoaInterPointerAppDef_oaPin_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[48];
    sprintf(buffer,"<oaInterPointerAppDef_oaPin::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaPin_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaPin v1;
    PyParamoaInterPointerAppDef_oaPin v2;
    int convert_status1=PyoaInterPointerAppDef_oaPin_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaPin_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaPin_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaPin* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaPin_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaPin**) ((PyoaInterPointerAppDef_oaPinObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaPin Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaPin_FromoaInterPointerAppDef_oaPin(oaInterPointerAppDef_oaPin** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaPin* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaPin_Type.tp_alloc(&PyoaInterPointerAppDef_oaPin_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaPinObject* self = (PyoaInterPointerAppDef_oaPinObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaPin_FromoaInterPointerAppDef_oaPin(oaInterPointerAppDef_oaPin* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaPin_Type.tp_alloc(&PyoaInterPointerAppDef_oaPin_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaPinObject* self = (PyoaInterPointerAppDef_oaPinObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaPin_get_doc[] = 
"Class: oaInterPointerAppDef_oaPin, Function: get\n"
"  Paramegers: (oaPin)\n"
"    Calls: oaObject* get(const oaPin* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaPin,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaPin_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaPin data;
    int convert_status=PyoaInterPointerAppDef_oaPin_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaPinObject* self=(PyoaInterPointerAppDef_oaPinObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPin p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPin_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaPin_set_doc[] = 
"Class: oaInterPointerAppDef_oaPin, Function: set\n"
"  Paramegers: (oaPin,oaObject)\n"
"    Calls: void set(oaPin* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaPin,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaPin_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaPin data;
    int convert_status=PyoaInterPointerAppDef_oaPin_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaPinObject* self=(PyoaInterPointerAppDef_oaPinObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPin p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPin_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaPin_isNull_doc[] =
"Class: oaInterPointerAppDef_oaPin, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaPin_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaPin data;
    int convert_status=PyoaInterPointerAppDef_oaPin_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaPin_assign_doc[] = 
"Class: oaInterPointerAppDef_oaPin, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaPin_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaPin data;
  int convert_status=PyoaInterPointerAppDef_oaPin_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaPin p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaPin_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaPin_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaPin_get,METH_VARARGS,oaInterPointerAppDef_oaPin_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaPin_set,METH_VARARGS,oaInterPointerAppDef_oaPin_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaPin_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaPin_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaPin_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaPin_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaPin_doc[] = 
"Class: oaInterPointerAppDef_oaPin\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaPin)\n"
"    Calls: (const oaInterPointerAppDef_oaPin&)\n"
"    Signature: oaInterPointerAppDef_oaPin||cref-oaInterPointerAppDef_oaPin,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaPin_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaPin",
    sizeof(PyoaInterPointerAppDef_oaPinObject),
    0,
    (destructor)oaInterPointerAppDef_oaPin_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaPin_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaPin_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaPin_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaPin_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaPin_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaPin_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaPin, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaPin* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaPin|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaPin* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaPin|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaPin_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaPinp result= (oaInterPointerAppDef_oaPin::find(p1.Data()));
            return PyoaInterPointerAppDef_oaPin_FromoaInterPointerAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaPinp result= (oaInterPointerAppDef_oaPin::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaPin_FromoaInterPointerAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaPin, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaPin_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaPin, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaPin* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaPin|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaPin* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaPin|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaPin* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaPin|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaPin* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaPin|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaPin_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaPinp result= (oaInterPointerAppDef_oaPin::get(p1.Data()));
            return PyoaInterPointerAppDef_oaPin_FromoaInterPointerAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaPinp result= (oaInterPointerAppDef_oaPin::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaPin_FromoaInterPointerAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaPinp result= (oaInterPointerAppDef_oaPin::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaPin_FromoaInterPointerAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaPinp result= (oaInterPointerAppDef_oaPin::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaPin_FromoaInterPointerAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaPin, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaPin_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaPin_static_find,METH_VARARGS,oaInterPointerAppDef_oaPin_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaPin_static_get,METH_VARARGS,oaInterPointerAppDef_oaPin_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaPin_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaPin_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaPin\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaPin",
           (PyObject*)(&PyoaInterPointerAppDef_oaPin_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaPin\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaPin_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaPin_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaPoleResidue
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaPoleResidue_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaPoleResidue_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaPoleResidueObject* self = (PyoaInterPointerAppDef_oaPoleResidueObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaPoleResidue)
    {
        PyParamoaInterPointerAppDef_oaPoleResidue p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaPoleResidue_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaPoleResidue, Choices are:\n"
        "    (oaInterPointerAppDef_oaPoleResidue)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaPoleResidue_tp_dealloc(PyoaInterPointerAppDef_oaPoleResidueObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaPoleResidue_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaPoleResidue value;
    int convert_status=PyoaInterPointerAppDef_oaPoleResidue_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[56];
    sprintf(buffer,"<oaInterPointerAppDef_oaPoleResidue::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaPoleResidue_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaPoleResidue v1;
    PyParamoaInterPointerAppDef_oaPoleResidue v2;
    int convert_status1=PyoaInterPointerAppDef_oaPoleResidue_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaPoleResidue_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaPoleResidue_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaPoleResidue* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaPoleResidue_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaPoleResidue**) ((PyoaInterPointerAppDef_oaPoleResidueObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaPoleResidue Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaPoleResidue_FromoaInterPointerAppDef_oaPoleResidue(oaInterPointerAppDef_oaPoleResidue** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaPoleResidue* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaPoleResidue_Type.tp_alloc(&PyoaInterPointerAppDef_oaPoleResidue_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaPoleResidueObject* self = (PyoaInterPointerAppDef_oaPoleResidueObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaPoleResidue_FromoaInterPointerAppDef_oaPoleResidue(oaInterPointerAppDef_oaPoleResidue* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaPoleResidue_Type.tp_alloc(&PyoaInterPointerAppDef_oaPoleResidue_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaPoleResidueObject* self = (PyoaInterPointerAppDef_oaPoleResidueObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaPoleResidue_get_doc[] = 
"Class: oaInterPointerAppDef_oaPoleResidue, Function: get\n"
"  Paramegers: (oaPoleResidue)\n"
"    Calls: oaObject* get(const oaPoleResidue* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaPoleResidue,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaPoleResidue_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaPoleResidue data;
    int convert_status=PyoaInterPointerAppDef_oaPoleResidue_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaPoleResidueObject* self=(PyoaInterPointerAppDef_oaPoleResidueObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPoleResidue p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPoleResidue_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaPoleResidue_set_doc[] = 
"Class: oaInterPointerAppDef_oaPoleResidue, Function: set\n"
"  Paramegers: (oaPoleResidue,oaObject)\n"
"    Calls: void set(oaPoleResidue* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaPoleResidue,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaPoleResidue_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaPoleResidue data;
    int convert_status=PyoaInterPointerAppDef_oaPoleResidue_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaPoleResidueObject* self=(PyoaInterPointerAppDef_oaPoleResidueObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPoleResidue p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPoleResidue_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaPoleResidue_isNull_doc[] =
"Class: oaInterPointerAppDef_oaPoleResidue, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaPoleResidue_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaPoleResidue data;
    int convert_status=PyoaInterPointerAppDef_oaPoleResidue_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaPoleResidue_assign_doc[] = 
"Class: oaInterPointerAppDef_oaPoleResidue, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaPoleResidue_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaPoleResidue data;
  int convert_status=PyoaInterPointerAppDef_oaPoleResidue_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaPoleResidue p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaPoleResidue_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaPoleResidue_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaPoleResidue_get,METH_VARARGS,oaInterPointerAppDef_oaPoleResidue_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaPoleResidue_set,METH_VARARGS,oaInterPointerAppDef_oaPoleResidue_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaPoleResidue_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaPoleResidue_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaPoleResidue_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaPoleResidue_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaPoleResidue_doc[] = 
"Class: oaInterPointerAppDef_oaPoleResidue\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaPoleResidue)\n"
"    Calls: (const oaInterPointerAppDef_oaPoleResidue&)\n"
"    Signature: oaInterPointerAppDef_oaPoleResidue||cref-oaInterPointerAppDef_oaPoleResidue,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaPoleResidue_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaPoleResidue",
    sizeof(PyoaInterPointerAppDef_oaPoleResidueObject),
    0,
    (destructor)oaInterPointerAppDef_oaPoleResidue_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaPoleResidue_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaPoleResidue_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaPoleResidue_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaPoleResidue_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaPoleResidue_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaPoleResidue_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaPoleResidue, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaPoleResidue* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaPoleResidue|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaPoleResidue* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaPoleResidue|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaPoleResidue_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaPoleResiduep result= (oaInterPointerAppDef_oaPoleResidue::find(p1.Data()));
            return PyoaInterPointerAppDef_oaPoleResidue_FromoaInterPointerAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaPoleResiduep result= (oaInterPointerAppDef_oaPoleResidue::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaPoleResidue_FromoaInterPointerAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaPoleResidue, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaPoleResidue_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaPoleResidue, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaPoleResidue* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaPoleResidue|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaPoleResidue* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaPoleResidue|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaPoleResidue* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaPoleResidue|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaPoleResidue* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaPoleResidue|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaPoleResidue_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaPoleResiduep result= (oaInterPointerAppDef_oaPoleResidue::get(p1.Data()));
            return PyoaInterPointerAppDef_oaPoleResidue_FromoaInterPointerAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaPoleResiduep result= (oaInterPointerAppDef_oaPoleResidue::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaPoleResidue_FromoaInterPointerAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaPoleResiduep result= (oaInterPointerAppDef_oaPoleResidue::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaPoleResidue_FromoaInterPointerAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaPoleResiduep result= (oaInterPointerAppDef_oaPoleResidue::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaPoleResidue_FromoaInterPointerAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaPoleResidue, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaPoleResidue_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaPoleResidue_static_find,METH_VARARGS,oaInterPointerAppDef_oaPoleResidue_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaPoleResidue_static_get,METH_VARARGS,oaInterPointerAppDef_oaPoleResidue_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaPoleResidue_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaPoleResidue_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaPoleResidue\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaPoleResidue",
           (PyObject*)(&PyoaInterPointerAppDef_oaPoleResidue_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaPoleResidue\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaPoleResidue_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaPoleResidue_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaProp
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaProp_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaProp_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaPropObject* self = (PyoaInterPointerAppDef_oaPropObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaProp)
    {
        PyParamoaInterPointerAppDef_oaProp p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaProp_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaProp, Choices are:\n"
        "    (oaInterPointerAppDef_oaProp)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaProp_tp_dealloc(PyoaInterPointerAppDef_oaPropObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaProp_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaProp value;
    int convert_status=PyoaInterPointerAppDef_oaProp_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[49];
    sprintf(buffer,"<oaInterPointerAppDef_oaProp::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaProp_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaProp v1;
    PyParamoaInterPointerAppDef_oaProp v2;
    int convert_status1=PyoaInterPointerAppDef_oaProp_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaProp_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaProp_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaProp* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaProp_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaProp**) ((PyoaInterPointerAppDef_oaPropObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaProp Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaProp_FromoaInterPointerAppDef_oaProp(oaInterPointerAppDef_oaProp** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaProp* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaProp_Type.tp_alloc(&PyoaInterPointerAppDef_oaProp_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaPropObject* self = (PyoaInterPointerAppDef_oaPropObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaProp_FromoaInterPointerAppDef_oaProp(oaInterPointerAppDef_oaProp* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaProp_Type.tp_alloc(&PyoaInterPointerAppDef_oaProp_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaPropObject* self = (PyoaInterPointerAppDef_oaPropObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaProp_get_doc[] = 
"Class: oaInterPointerAppDef_oaProp, Function: get\n"
"  Paramegers: (oaProp)\n"
"    Calls: oaObject* get(const oaProp* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaProp,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaProp_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaProp data;
    int convert_status=PyoaInterPointerAppDef_oaProp_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaPropObject* self=(PyoaInterPointerAppDef_oaPropObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaProp p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaProp_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaProp_set_doc[] = 
"Class: oaInterPointerAppDef_oaProp, Function: set\n"
"  Paramegers: (oaProp,oaObject)\n"
"    Calls: void set(oaProp* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaProp,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaProp_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaProp data;
    int convert_status=PyoaInterPointerAppDef_oaProp_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaPropObject* self=(PyoaInterPointerAppDef_oaPropObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaProp p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaProp_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaProp_isNull_doc[] =
"Class: oaInterPointerAppDef_oaProp, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaProp_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaProp data;
    int convert_status=PyoaInterPointerAppDef_oaProp_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaProp_assign_doc[] = 
"Class: oaInterPointerAppDef_oaProp, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaProp_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaProp data;
  int convert_status=PyoaInterPointerAppDef_oaProp_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaProp p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaProp_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaProp_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaProp_get,METH_VARARGS,oaInterPointerAppDef_oaProp_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaProp_set,METH_VARARGS,oaInterPointerAppDef_oaProp_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaProp_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaProp_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaProp_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaProp_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaProp_doc[] = 
"Class: oaInterPointerAppDef_oaProp\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaProp)\n"
"    Calls: (const oaInterPointerAppDef_oaProp&)\n"
"    Signature: oaInterPointerAppDef_oaProp||cref-oaInterPointerAppDef_oaProp,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaProp_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaProp",
    sizeof(PyoaInterPointerAppDef_oaPropObject),
    0,
    (destructor)oaInterPointerAppDef_oaProp_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaProp_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaProp_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaProp_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaProp_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaProp_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaProp_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaProp, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaProp* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaProp|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaProp* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaProp|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaProp_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaPropp result= (oaInterPointerAppDef_oaProp::find(p1.Data()));
            return PyoaInterPointerAppDef_oaProp_FromoaInterPointerAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaPropp result= (oaInterPointerAppDef_oaProp::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaProp_FromoaInterPointerAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaProp, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaProp_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaProp, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaProp* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaProp|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaProp* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaProp|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaProp* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaProp|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaProp* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaProp|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaProp_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaPropp result= (oaInterPointerAppDef_oaProp::get(p1.Data()));
            return PyoaInterPointerAppDef_oaProp_FromoaInterPointerAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaPropp result= (oaInterPointerAppDef_oaProp::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaProp_FromoaInterPointerAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaPropp result= (oaInterPointerAppDef_oaProp::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaProp_FromoaInterPointerAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaPropp result= (oaInterPointerAppDef_oaProp::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaProp_FromoaInterPointerAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaProp, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaProp_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaProp_static_find,METH_VARARGS,oaInterPointerAppDef_oaProp_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaProp_static_get,METH_VARARGS,oaInterPointerAppDef_oaProp_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaProp_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaProp_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaProp\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaProp",
           (PyObject*)(&PyoaInterPointerAppDef_oaProp_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaProp\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaProp_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaProp_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaPurpose
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaPurpose_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaPurpose_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaPurposeObject* self = (PyoaInterPointerAppDef_oaPurposeObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaPurpose)
    {
        PyParamoaInterPointerAppDef_oaPurpose p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaPurpose_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaPurpose, Choices are:\n"
        "    (oaInterPointerAppDef_oaPurpose)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaPurpose_tp_dealloc(PyoaInterPointerAppDef_oaPurposeObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaPurpose_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaPurpose value;
    int convert_status=PyoaInterPointerAppDef_oaPurpose_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaInterPointerAppDef_oaPurpose::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaPurpose_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaPurpose v1;
    PyParamoaInterPointerAppDef_oaPurpose v2;
    int convert_status1=PyoaInterPointerAppDef_oaPurpose_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaPurpose_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaPurpose_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaPurpose* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaPurpose_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaPurpose**) ((PyoaInterPointerAppDef_oaPurposeObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaPurpose Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaPurpose_FromoaInterPointerAppDef_oaPurpose(oaInterPointerAppDef_oaPurpose** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaPurpose* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaPurpose_Type.tp_alloc(&PyoaInterPointerAppDef_oaPurpose_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaPurposeObject* self = (PyoaInterPointerAppDef_oaPurposeObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaPurpose_FromoaInterPointerAppDef_oaPurpose(oaInterPointerAppDef_oaPurpose* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaPurpose_Type.tp_alloc(&PyoaInterPointerAppDef_oaPurpose_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaPurposeObject* self = (PyoaInterPointerAppDef_oaPurposeObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaPurpose_get_doc[] = 
"Class: oaInterPointerAppDef_oaPurpose, Function: get\n"
"  Paramegers: (oaPurpose)\n"
"    Calls: oaObject* get(const oaPurpose* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaPurpose,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaPurpose_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaPurpose data;
    int convert_status=PyoaInterPointerAppDef_oaPurpose_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaPurposeObject* self=(PyoaInterPointerAppDef_oaPurposeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPurpose p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPurpose_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaPurpose_set_doc[] = 
"Class: oaInterPointerAppDef_oaPurpose, Function: set\n"
"  Paramegers: (oaPurpose,oaObject)\n"
"    Calls: void set(oaPurpose* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaPurpose,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaPurpose_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaPurpose data;
    int convert_status=PyoaInterPointerAppDef_oaPurpose_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaPurposeObject* self=(PyoaInterPointerAppDef_oaPurposeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPurpose p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPurpose_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaPurpose_isNull_doc[] =
"Class: oaInterPointerAppDef_oaPurpose, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaPurpose_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaPurpose data;
    int convert_status=PyoaInterPointerAppDef_oaPurpose_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaPurpose_assign_doc[] = 
"Class: oaInterPointerAppDef_oaPurpose, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaPurpose_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaPurpose data;
  int convert_status=PyoaInterPointerAppDef_oaPurpose_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaPurpose p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaPurpose_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaPurpose_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaPurpose_get,METH_VARARGS,oaInterPointerAppDef_oaPurpose_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaPurpose_set,METH_VARARGS,oaInterPointerAppDef_oaPurpose_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaPurpose_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaPurpose_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaPurpose_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaPurpose_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaPurpose_doc[] = 
"Class: oaInterPointerAppDef_oaPurpose\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaPurpose)\n"
"    Calls: (const oaInterPointerAppDef_oaPurpose&)\n"
"    Signature: oaInterPointerAppDef_oaPurpose||cref-oaInterPointerAppDef_oaPurpose,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaPurpose_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaPurpose",
    sizeof(PyoaInterPointerAppDef_oaPurposeObject),
    0,
    (destructor)oaInterPointerAppDef_oaPurpose_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaPurpose_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaPurpose_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaPurpose_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaPurpose_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaPurpose_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaPurpose_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaPurpose, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaPurpose* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaPurpose|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaPurpose* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaPurpose|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaPurpose_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaPurposep result= (oaInterPointerAppDef_oaPurpose::find(p1.Data()));
            return PyoaInterPointerAppDef_oaPurpose_FromoaInterPointerAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaPurposep result= (oaInterPointerAppDef_oaPurpose::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaPurpose_FromoaInterPointerAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaPurpose, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaPurpose_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaPurpose, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaPurpose* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaPurpose|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaPurpose* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaPurpose|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaPurpose* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaPurpose|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaPurpose* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaPurpose|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaPurpose_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaPurposep result= (oaInterPointerAppDef_oaPurpose::get(p1.Data()));
            return PyoaInterPointerAppDef_oaPurpose_FromoaInterPointerAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaPurposep result= (oaInterPointerAppDef_oaPurpose::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaPurpose_FromoaInterPointerAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaPurposep result= (oaInterPointerAppDef_oaPurpose::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaPurpose_FromoaInterPointerAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaPurposep result= (oaInterPointerAppDef_oaPurpose::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaPurpose_FromoaInterPointerAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaPurpose, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaPurpose_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaPurpose_static_find,METH_VARARGS,oaInterPointerAppDef_oaPurpose_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaPurpose_static_get,METH_VARARGS,oaInterPointerAppDef_oaPurpose_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaPurpose_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaPurpose_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaPurpose\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaPurpose",
           (PyObject*)(&PyoaInterPointerAppDef_oaPurpose_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaPurpose\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaPurpose_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaPurpose_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaReducedModel
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaReducedModel_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaReducedModel_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaReducedModelObject* self = (PyoaInterPointerAppDef_oaReducedModelObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaReducedModel)
    {
        PyParamoaInterPointerAppDef_oaReducedModel p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaReducedModel_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaReducedModel, Choices are:\n"
        "    (oaInterPointerAppDef_oaReducedModel)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaReducedModel_tp_dealloc(PyoaInterPointerAppDef_oaReducedModelObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaReducedModel_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaReducedModel value;
    int convert_status=PyoaInterPointerAppDef_oaReducedModel_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[57];
    sprintf(buffer,"<oaInterPointerAppDef_oaReducedModel::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaReducedModel_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaReducedModel v1;
    PyParamoaInterPointerAppDef_oaReducedModel v2;
    int convert_status1=PyoaInterPointerAppDef_oaReducedModel_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaReducedModel_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaReducedModel_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaReducedModel* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaReducedModel_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaReducedModel**) ((PyoaInterPointerAppDef_oaReducedModelObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaReducedModel Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaReducedModel_FromoaInterPointerAppDef_oaReducedModel(oaInterPointerAppDef_oaReducedModel** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaReducedModel* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaReducedModel_Type.tp_alloc(&PyoaInterPointerAppDef_oaReducedModel_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaReducedModelObject* self = (PyoaInterPointerAppDef_oaReducedModelObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaReducedModel_FromoaInterPointerAppDef_oaReducedModel(oaInterPointerAppDef_oaReducedModel* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaReducedModel_Type.tp_alloc(&PyoaInterPointerAppDef_oaReducedModel_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaReducedModelObject* self = (PyoaInterPointerAppDef_oaReducedModelObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaReducedModel_get_doc[] = 
"Class: oaInterPointerAppDef_oaReducedModel, Function: get\n"
"  Paramegers: (oaReducedModel)\n"
"    Calls: oaObject* get(const oaReducedModel* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaReducedModel,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaReducedModel_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaReducedModel data;
    int convert_status=PyoaInterPointerAppDef_oaReducedModel_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaReducedModelObject* self=(PyoaInterPointerAppDef_oaReducedModelObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReducedModel p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaReducedModel_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaReducedModel_set_doc[] = 
"Class: oaInterPointerAppDef_oaReducedModel, Function: set\n"
"  Paramegers: (oaReducedModel,oaObject)\n"
"    Calls: void set(oaReducedModel* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaReducedModel,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaReducedModel_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaReducedModel data;
    int convert_status=PyoaInterPointerAppDef_oaReducedModel_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaReducedModelObject* self=(PyoaInterPointerAppDef_oaReducedModelObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReducedModel p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaReducedModel_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaReducedModel_isNull_doc[] =
"Class: oaInterPointerAppDef_oaReducedModel, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaReducedModel_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaReducedModel data;
    int convert_status=PyoaInterPointerAppDef_oaReducedModel_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaReducedModel_assign_doc[] = 
"Class: oaInterPointerAppDef_oaReducedModel, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaReducedModel_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaReducedModel data;
  int convert_status=PyoaInterPointerAppDef_oaReducedModel_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaReducedModel p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaReducedModel_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaReducedModel_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaReducedModel_get,METH_VARARGS,oaInterPointerAppDef_oaReducedModel_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaReducedModel_set,METH_VARARGS,oaInterPointerAppDef_oaReducedModel_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaReducedModel_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaReducedModel_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaReducedModel_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaReducedModel_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaReducedModel_doc[] = 
"Class: oaInterPointerAppDef_oaReducedModel\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaReducedModel)\n"
"    Calls: (const oaInterPointerAppDef_oaReducedModel&)\n"
"    Signature: oaInterPointerAppDef_oaReducedModel||cref-oaInterPointerAppDef_oaReducedModel,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaReducedModel_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaReducedModel",
    sizeof(PyoaInterPointerAppDef_oaReducedModelObject),
    0,
    (destructor)oaInterPointerAppDef_oaReducedModel_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaReducedModel_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaReducedModel_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaReducedModel_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaReducedModel_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaReducedModel_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaReducedModel_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaReducedModel, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaReducedModel* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaReducedModel|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaReducedModel* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaReducedModel|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaReducedModel_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaReducedModelp result= (oaInterPointerAppDef_oaReducedModel::find(p1.Data()));
            return PyoaInterPointerAppDef_oaReducedModel_FromoaInterPointerAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaReducedModelp result= (oaInterPointerAppDef_oaReducedModel::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaReducedModel_FromoaInterPointerAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaReducedModel, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaReducedModel_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaReducedModel, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaReducedModel* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaReducedModel|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaReducedModel* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaReducedModel|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaReducedModel* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaReducedModel|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaReducedModel* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaReducedModel|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaReducedModel_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaReducedModelp result= (oaInterPointerAppDef_oaReducedModel::get(p1.Data()));
            return PyoaInterPointerAppDef_oaReducedModel_FromoaInterPointerAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaReducedModelp result= (oaInterPointerAppDef_oaReducedModel::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaReducedModel_FromoaInterPointerAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaReducedModelp result= (oaInterPointerAppDef_oaReducedModel::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaReducedModel_FromoaInterPointerAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaReducedModelp result= (oaInterPointerAppDef_oaReducedModel::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaReducedModel_FromoaInterPointerAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaReducedModel, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaReducedModel_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaReducedModel_static_find,METH_VARARGS,oaInterPointerAppDef_oaReducedModel_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaReducedModel_static_get,METH_VARARGS,oaInterPointerAppDef_oaReducedModel_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaReducedModel_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaReducedModel_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaReducedModel\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaReducedModel",
           (PyObject*)(&PyoaInterPointerAppDef_oaReducedModel_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaReducedModel\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaReducedModel_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaReducedModel_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaReticle
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaReticle_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaReticle_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaReticleObject* self = (PyoaInterPointerAppDef_oaReticleObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaReticle)
    {
        PyParamoaInterPointerAppDef_oaReticle p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaReticle_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaReticle, Choices are:\n"
        "    (oaInterPointerAppDef_oaReticle)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaReticle_tp_dealloc(PyoaInterPointerAppDef_oaReticleObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaReticle_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaReticle value;
    int convert_status=PyoaInterPointerAppDef_oaReticle_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaInterPointerAppDef_oaReticle::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaReticle_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaReticle v1;
    PyParamoaInterPointerAppDef_oaReticle v2;
    int convert_status1=PyoaInterPointerAppDef_oaReticle_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaReticle_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaReticle_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaReticle* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaReticle_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaReticle**) ((PyoaInterPointerAppDef_oaReticleObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaReticle Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaReticle_FromoaInterPointerAppDef_oaReticle(oaInterPointerAppDef_oaReticle** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaReticle* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaReticle_Type.tp_alloc(&PyoaInterPointerAppDef_oaReticle_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaReticleObject* self = (PyoaInterPointerAppDef_oaReticleObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaReticle_FromoaInterPointerAppDef_oaReticle(oaInterPointerAppDef_oaReticle* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaReticle_Type.tp_alloc(&PyoaInterPointerAppDef_oaReticle_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaReticleObject* self = (PyoaInterPointerAppDef_oaReticleObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaReticle_get_doc[] = 
"Class: oaInterPointerAppDef_oaReticle, Function: get\n"
"  Paramegers: (oaReticle)\n"
"    Calls: oaObject* get(const oaReticle* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaReticle,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaReticle_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaReticle data;
    int convert_status=PyoaInterPointerAppDef_oaReticle_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaReticleObject* self=(PyoaInterPointerAppDef_oaReticleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReticle p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaReticle_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaReticle_set_doc[] = 
"Class: oaInterPointerAppDef_oaReticle, Function: set\n"
"  Paramegers: (oaReticle,oaObject)\n"
"    Calls: void set(oaReticle* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaReticle,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaReticle_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaReticle data;
    int convert_status=PyoaInterPointerAppDef_oaReticle_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaReticleObject* self=(PyoaInterPointerAppDef_oaReticleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReticle p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaReticle_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaReticle_isNull_doc[] =
"Class: oaInterPointerAppDef_oaReticle, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaReticle_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaReticle data;
    int convert_status=PyoaInterPointerAppDef_oaReticle_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaReticle_assign_doc[] = 
"Class: oaInterPointerAppDef_oaReticle, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaReticle_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaReticle data;
  int convert_status=PyoaInterPointerAppDef_oaReticle_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaReticle p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaReticle_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaReticle_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaReticle_get,METH_VARARGS,oaInterPointerAppDef_oaReticle_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaReticle_set,METH_VARARGS,oaInterPointerAppDef_oaReticle_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaReticle_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaReticle_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaReticle_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaReticle_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaReticle_doc[] = 
"Class: oaInterPointerAppDef_oaReticle\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaReticle)\n"
"    Calls: (const oaInterPointerAppDef_oaReticle&)\n"
"    Signature: oaInterPointerAppDef_oaReticle||cref-oaInterPointerAppDef_oaReticle,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaReticle_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaReticle",
    sizeof(PyoaInterPointerAppDef_oaReticleObject),
    0,
    (destructor)oaInterPointerAppDef_oaReticle_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaReticle_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaReticle_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaReticle_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaReticle_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaReticle_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaReticle_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaReticle, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaReticle* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaReticle|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaReticle* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaReticle|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaReticle_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaReticlep result= (oaInterPointerAppDef_oaReticle::find(p1.Data()));
            return PyoaInterPointerAppDef_oaReticle_FromoaInterPointerAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaReticlep result= (oaInterPointerAppDef_oaReticle::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaReticle_FromoaInterPointerAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaReticle, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaReticle_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaReticle, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaReticle* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaReticle|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaReticle* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaReticle|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaReticle* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaReticle|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaReticle* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaReticle|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaReticle_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaReticlep result= (oaInterPointerAppDef_oaReticle::get(p1.Data()));
            return PyoaInterPointerAppDef_oaReticle_FromoaInterPointerAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaReticlep result= (oaInterPointerAppDef_oaReticle::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaReticle_FromoaInterPointerAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaReticlep result= (oaInterPointerAppDef_oaReticle::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaReticle_FromoaInterPointerAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaReticlep result= (oaInterPointerAppDef_oaReticle::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaReticle_FromoaInterPointerAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaReticle, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaReticle_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaReticle_static_find,METH_VARARGS,oaInterPointerAppDef_oaReticle_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaReticle_static_get,METH_VARARGS,oaInterPointerAppDef_oaReticle_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaReticle_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaReticle_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaReticle\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaReticle",
           (PyObject*)(&PyoaInterPointerAppDef_oaReticle_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaReticle\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaReticle_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaReticle_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaReticleRef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaReticleRef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaReticleRef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaReticleRefObject* self = (PyoaInterPointerAppDef_oaReticleRefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaReticleRef)
    {
        PyParamoaInterPointerAppDef_oaReticleRef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaReticleRef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaReticleRef, Choices are:\n"
        "    (oaInterPointerAppDef_oaReticleRef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaReticleRef_tp_dealloc(PyoaInterPointerAppDef_oaReticleRefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaReticleRef_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaReticleRef value;
    int convert_status=PyoaInterPointerAppDef_oaReticleRef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[55];
    sprintf(buffer,"<oaInterPointerAppDef_oaReticleRef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaReticleRef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaReticleRef v1;
    PyParamoaInterPointerAppDef_oaReticleRef v2;
    int convert_status1=PyoaInterPointerAppDef_oaReticleRef_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaReticleRef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaReticleRef_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaReticleRef* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaReticleRef_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaReticleRef**) ((PyoaInterPointerAppDef_oaReticleRefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaReticleRef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaReticleRef_FromoaInterPointerAppDef_oaReticleRef(oaInterPointerAppDef_oaReticleRef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaReticleRef* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaReticleRef_Type.tp_alloc(&PyoaInterPointerAppDef_oaReticleRef_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaReticleRefObject* self = (PyoaInterPointerAppDef_oaReticleRefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaReticleRef_FromoaInterPointerAppDef_oaReticleRef(oaInterPointerAppDef_oaReticleRef* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaReticleRef_Type.tp_alloc(&PyoaInterPointerAppDef_oaReticleRef_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaReticleRefObject* self = (PyoaInterPointerAppDef_oaReticleRefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaReticleRef_get_doc[] = 
"Class: oaInterPointerAppDef_oaReticleRef, Function: get\n"
"  Paramegers: (oaReticleRef)\n"
"    Calls: oaObject* get(const oaReticleRef* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaReticleRef,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaReticleRef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaReticleRef data;
    int convert_status=PyoaInterPointerAppDef_oaReticleRef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaReticleRefObject* self=(PyoaInterPointerAppDef_oaReticleRefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReticleRef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaReticleRef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaReticleRef_set_doc[] = 
"Class: oaInterPointerAppDef_oaReticleRef, Function: set\n"
"  Paramegers: (oaReticleRef,oaObject)\n"
"    Calls: void set(oaReticleRef* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaReticleRef,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaReticleRef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaReticleRef data;
    int convert_status=PyoaInterPointerAppDef_oaReticleRef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaReticleRefObject* self=(PyoaInterPointerAppDef_oaReticleRefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReticleRef p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaReticleRef_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaReticleRef_isNull_doc[] =
"Class: oaInterPointerAppDef_oaReticleRef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaReticleRef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaReticleRef data;
    int convert_status=PyoaInterPointerAppDef_oaReticleRef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaReticleRef_assign_doc[] = 
"Class: oaInterPointerAppDef_oaReticleRef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaReticleRef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaReticleRef data;
  int convert_status=PyoaInterPointerAppDef_oaReticleRef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaReticleRef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaReticleRef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaReticleRef_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaReticleRef_get,METH_VARARGS,oaInterPointerAppDef_oaReticleRef_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaReticleRef_set,METH_VARARGS,oaInterPointerAppDef_oaReticleRef_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaReticleRef_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaReticleRef_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaReticleRef_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaReticleRef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaReticleRef_doc[] = 
"Class: oaInterPointerAppDef_oaReticleRef\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaReticleRef)\n"
"    Calls: (const oaInterPointerAppDef_oaReticleRef&)\n"
"    Signature: oaInterPointerAppDef_oaReticleRef||cref-oaInterPointerAppDef_oaReticleRef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaReticleRef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaReticleRef",
    sizeof(PyoaInterPointerAppDef_oaReticleRefObject),
    0,
    (destructor)oaInterPointerAppDef_oaReticleRef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaReticleRef_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaReticleRef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaReticleRef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaReticleRef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaReticleRef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaReticleRef_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaReticleRef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaReticleRef* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaReticleRef|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaReticleRef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaReticleRef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaReticleRef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaReticleRefp result= (oaInterPointerAppDef_oaReticleRef::find(p1.Data()));
            return PyoaInterPointerAppDef_oaReticleRef_FromoaInterPointerAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaReticleRefp result= (oaInterPointerAppDef_oaReticleRef::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaReticleRef_FromoaInterPointerAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaReticleRef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaReticleRef_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaReticleRef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaReticleRef* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaReticleRef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaReticleRef* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaReticleRef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaReticleRef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaReticleRef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaReticleRef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaReticleRef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaReticleRef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaReticleRefp result= (oaInterPointerAppDef_oaReticleRef::get(p1.Data()));
            return PyoaInterPointerAppDef_oaReticleRef_FromoaInterPointerAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaReticleRefp result= (oaInterPointerAppDef_oaReticleRef::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaReticleRef_FromoaInterPointerAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaReticleRefp result= (oaInterPointerAppDef_oaReticleRef::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaReticleRef_FromoaInterPointerAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaReticleRefp result= (oaInterPointerAppDef_oaReticleRef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaReticleRef_FromoaInterPointerAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaReticleRef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaReticleRef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaReticleRef_static_find,METH_VARARGS,oaInterPointerAppDef_oaReticleRef_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaReticleRef_static_get,METH_VARARGS,oaInterPointerAppDef_oaReticleRef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaReticleRef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaReticleRef_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaReticleRef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaReticleRef",
           (PyObject*)(&PyoaInterPointerAppDef_oaReticleRef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaReticleRef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaReticleRef_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaReticleRef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaInterPointerAppDef_oaRoute
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaRoute_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaInterPointerAppDef_oaRoute_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaInterPointerAppDef_oaRouteObject* self = (PyoaInterPointerAppDef_oaRouteObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaInterPointerAppDef_oaRoute)
    {
        PyParamoaInterPointerAppDef_oaRoute p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaInterPointerAppDef_oaRoute_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaInterPointerAppDef_oaRoute, Choices are:\n"
        "    (oaInterPointerAppDef_oaRoute)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaInterPointerAppDef_oaRoute_tp_dealloc(PyoaInterPointerAppDef_oaRouteObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaInterPointerAppDef_oaRoute_tp_repr(PyObject *ob)
{
    PyParamoaInterPointerAppDef_oaRoute value;
    int convert_status=PyoaInterPointerAppDef_oaRoute_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaInterPointerAppDef_oaRoute::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaInterPointerAppDef_oaRoute_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaInterPointerAppDef_oaRoute v1;
    PyParamoaInterPointerAppDef_oaRoute v2;
    int convert_status1=PyoaInterPointerAppDef_oaRoute_Convert(ob1,&v1);
    int convert_status2=PyoaInterPointerAppDef_oaRoute_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaInterPointerAppDef_oaRoute_Convert(PyObject* ob,PyParamoaInterPointerAppDef_oaRoute* result)
{
    if (ob == NULL) return 1;
    if (PyoaInterPointerAppDef_oaRoute_Check(ob)) {
        result->SetData( (oaInterPointerAppDef_oaRoute**) ((PyoaInterPointerAppDef_oaRouteObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaInterPointerAppDef_oaRoute Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaRoute_FromoaInterPointerAppDef_oaRoute(oaInterPointerAppDef_oaRoute** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaInterPointerAppDef_oaRoute* data=*value;
        PyObject* bself = PyoaInterPointerAppDef_oaRoute_Type.tp_alloc(&PyoaInterPointerAppDef_oaRoute_Type,0);
        if (bself == NULL) return bself;
        PyoaInterPointerAppDef_oaRouteObject* self = (PyoaInterPointerAppDef_oaRouteObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaInterPointerAppDef_oaRoute_FromoaInterPointerAppDef_oaRoute(oaInterPointerAppDef_oaRoute* data)
{
    if (data) {
       PyObject* bself = PyoaInterPointerAppDef_oaRoute_Type.tp_alloc(&PyoaInterPointerAppDef_oaRoute_Type,0);
       if (bself == NULL) return bself;
       PyoaInterPointerAppDef_oaRouteObject* self = (PyoaInterPointerAppDef_oaRouteObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaRoute_get_doc[] = 
"Class: oaInterPointerAppDef_oaRoute, Function: get\n"
"  Paramegers: (oaRoute)\n"
"    Calls: oaObject* get(const oaRoute* object)\n"
"    Signature: get|ptr-oaObject|cptr-oaRoute,\n"
"    This function returns the value associated with this extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaRoute_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaRoute data;
    int convert_status=PyoaInterPointerAppDef_oaRoute_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaRouteObject* self=(PyoaInterPointerAppDef_oaRouteObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaRoute p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaRoute_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaObjectp result= (data.DataCall()->get(p1.Data()));
        return PyoaObject_FromoaObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaRoute_set_doc[] = 
"Class: oaInterPointerAppDef_oaRoute, Function: set\n"
"  Paramegers: (oaRoute,oaObject)\n"
"    Calls: void set(oaRoute* object,const oaObject* otherObject)\n"
"    Signature: set|void-void|ptr-oaRoute,cptr-oaObject,\n"
"    This function sets the value associated with this extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The value to assign to the specified object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaInterPointerAppDef_oaRoute_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaInterPointerAppDef_oaRoute data;
    int convert_status=PyoaInterPointerAppDef_oaRoute_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaInterPointerAppDef_oaRouteObject* self=(PyoaInterPointerAppDef_oaRouteObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaRoute p1;
    PyParamoaObject p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRoute_Convert,&p1,
          &PyoaObject_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaRoute_isNull_doc[] =
"Class: oaInterPointerAppDef_oaRoute, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaInterPointerAppDef_oaRoute_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaInterPointerAppDef_oaRoute data;
    int convert_status=PyoaInterPointerAppDef_oaRoute_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaInterPointerAppDef_oaRoute_assign_doc[] = 
"Class: oaInterPointerAppDef_oaRoute, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaInterPointerAppDef_oaRoute_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaInterPointerAppDef_oaRoute data;
  int convert_status=PyoaInterPointerAppDef_oaRoute_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaInterPointerAppDef_oaRoute p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaInterPointerAppDef_oaRoute_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaInterPointerAppDef_oaRoute_methodlist[] = {
    {"get",(PyCFunction)oaInterPointerAppDef_oaRoute_get,METH_VARARGS,oaInterPointerAppDef_oaRoute_get_doc},
    {"set",(PyCFunction)oaInterPointerAppDef_oaRoute_set,METH_VARARGS,oaInterPointerAppDef_oaRoute_set_doc},
    {"isNull",(PyCFunction)oaInterPointerAppDef_oaRoute_tp_isNull,METH_VARARGS,oaInterPointerAppDef_oaRoute_isNull_doc},
    {"assign",(PyCFunction)oaInterPointerAppDef_oaRoute_tp_assign,METH_VARARGS,oaInterPointerAppDef_oaRoute_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaRoute_doc[] = 
"Class: oaInterPointerAppDef_oaRoute\n"
"  The oaInterPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a database object pointer field is added to each object of the specified dataType. The default value for the object pointer is NULL. Applications can use the new field for whatever purpose is necessary.\n"
"  Note: The pointer must be NULL or must point to a persistent object in the same database. The pointer must not point at objects in another database, objects not in a database, the database itself ( oaDesign or oaTech ), or utility objects.\n"
"  This extension is similar to the oaIntraPointerAppDef , except that oaInterPointerAppDef supports pointers to other types of objects within the same database. If only pointers to objects of the same type are created, use oaIntraPointerAppDef , since it requires slightly less memory and is slightly faster.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaInterPointerAppDef_oaRoute)\n"
"    Calls: (const oaInterPointerAppDef_oaRoute&)\n"
"    Signature: oaInterPointerAppDef_oaRoute||cref-oaInterPointerAppDef_oaRoute,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaInterPointerAppDef_oaRoute_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaInterPointerAppDef_oaRoute",
    sizeof(PyoaInterPointerAppDef_oaRouteObject),
    0,
    (destructor)oaInterPointerAppDef_oaRoute_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaInterPointerAppDef_oaRoute_tp_compare,	/* tp_compare */
    (reprfunc)oaInterPointerAppDef_oaRoute_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaInterPointerAppDef_oaRoute_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaInterPointerAppDef_oaRoute_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaInterPointerAppDef_oaRoute_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaRoute_static_find_doc[] = 
"Class: oaInterPointerAppDef_oaRoute, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaRoute* find(const oaString& name)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaRoute|cref-oaString,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaRoute* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaInterPointerAppDef_oaRoute|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaInterPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaInterPointerAppDef_oaRoute_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaRoutep result= (oaInterPointerAppDef_oaRoute::find(p1.Data()));
            return PyoaInterPointerAppDef_oaRoute_FromoaInterPointerAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaRoutep result= (oaInterPointerAppDef_oaRoute::find(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaRoute_FromoaInterPointerAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaRoute, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaInterPointerAppDef_oaRoute_static_get_doc[] = 
"Class: oaInterPointerAppDef_oaRoute, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaInterPointerAppDef_oaRoute* get(const oaString& name)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaRoute|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaRoute* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaRoute|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaInterPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaInterPointerAppDef_oaRoute* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaRoute|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaInterPointerAppDef_oaRoute* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaInterPointerAppDef_oaRoute|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaInterPointerAppDef with the specified name and associates it with the specified oaAppObjectDef class. The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaInterPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaInterPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaInterPointerAppDef_oaRoute_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaInterPointerAppDef_oaRoutep result= (oaInterPointerAppDef_oaRoute::get(p1.Data()));
            return PyoaInterPointerAppDef_oaRoute_FromoaInterPointerAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaInterPointerAppDef_oaRoutep result= (oaInterPointerAppDef_oaRoute::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaRoute_FromoaInterPointerAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaRoutep result= (oaInterPointerAppDef_oaRoute::get(p1.Data(),p2.Data()));
            return PyoaInterPointerAppDef_oaRoute_FromoaInterPointerAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaInterPointerAppDef_oaRoutep result= (oaInterPointerAppDef_oaRoute::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaInterPointerAppDef_oaRoute_FromoaInterPointerAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaInterPointerAppDef_oaRoute, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaInterPointerAppDef_oaRoute_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaInterPointerAppDef_oaRoute_static_find,METH_VARARGS,oaInterPointerAppDef_oaRoute_static_find_doc},
    {"static_get",(PyCFunction)oaInterPointerAppDef_oaRoute_static_get,METH_VARARGS,oaInterPointerAppDef_oaRoute_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaInterPointerAppDef_oaRoute_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaInterPointerAppDef_oaRoute_Type)<0) {
      printf("** PyType_Ready failed for: oaInterPointerAppDef_oaRoute\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaInterPointerAppDef_oaRoute",
           (PyObject*)(&PyoaInterPointerAppDef_oaRoute_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaInterPointerAppDef_oaRoute\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaInterPointerAppDef_oaRoute_Type.tp_dict;
    for(method=oaInterPointerAppDef_oaRoute_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}

